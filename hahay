-- MoonSec-Like Obfuscation
local b=game:service("HttpService"):JSONDecode("{\"code\":\"
    {
local OaPkkZNRCC = nil
                XEaQKzxdJm = true,
    sIFMNbMipQ = WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(""))))))),
            end
local bweJqHzUMI = cTQdRMHPbU.zwULTRqoCU:qoLTwpTuhY(WDMPhAaAom.ttBBzhZTHK("=oWiFdPTmey"))
            end
                local voaBssQaNU = PydxTxsEDA.pSPhNrFYLi:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("==sceWvMrHzb"))
    sIFMNbMipQ = WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(""))))))),
        if JISiQvdNhN then
            
local nxiiRYBxFY = false  -- RtkVwLcSao EoxpobTGxh RZOCwNbwQz

                    oHMMSzCDNu.ZyKaHcTqiG = true
-- AxpQnEstmL LGnjrfuYsa QLIhVtRijN XIzrsiMIPE kYOWRUjfrr tAXbWzsXCb

-- }
                lFvjrJGmmT.aLgDADvrQR.gtDLpbzMmv = WDMPhAaAom.ttBBzhZTHK("0NWZ09mcQBiY1hkbhhGV")
    smzkfdXYWd
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("ziPcfIrQQz"),
local function pOoNmEXHvL()
            local KUPvOUuXPn = ZcfoVBsoDA.aiDUkNhdeZ(CmevnbjBPZ() - HaIpEVdfSa)
                    -- nCgPhjRcOs UbIZAKorgB AXWRYndrTl, GVRVzlzHfM UbIZAKorgB kGaJCmyAOM
            local NWVOnTtHdo =
                CkXdMDqRBZ.mHfAgLAYxL(mtUDGiugCK)
local RfmYZninWg = false
            end


    }
dWECKKuvfb:JPEsogkgbT(
        end
                                        local QyzoddKbFD = coiamHafLX.WgrvlblvLf - zFREahBhdh.lainOkgKfw(0, 10, 0)
-- cRqrfJiGko kroOyRvSRC kzDoWlrOqS bfWOJLWZrN dViHdIfLff
            IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("=hreImvOPTl")):ZknxSNJIoy(
                    }
local function cNzkAFPrnh()
local pnnpFtQooj =
    {
    taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("0V2ZyFGVgcmbpRnb1hEI0NWZsV2U"),
kTPQKASjqA.WDOIyCTwxP:nzvFxTCDcD(


-- SGbIjJFEin zYeHyOcqIR qtkzBtWIvi EEDJwLHPye WzKwoVrqPl
                yOqCucqRos.tKGjJhQOiH = tBzdNBcXNf.nRkErGJnJw(255, 255, 255)
    WDMPhAaAom.ttBBzhZTHK("==wlfXHMFrMW"),
                IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("=dCWhIhSGeQ")).KGhjKfpNhU:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("5t2U")).tjuWlTsXze = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("=dCWhIhSGeQ"))
    }

        kSSPxEzDZV = DKOghdjprc
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==MxMfxdtUFx"),
                PuLqBCLiXf meizgQBBZi == WDMPhAaAom.ttBBzhZTHK("=kfANrPzqDm") LJWTdbPalw
-- yZXfkEXPCm.gtDLpbzMmv = WDMPhAaAom.ttBBzhZTHK("==tHZVQdxkZp")
                if zDChSHeKqa.LTgZyvpjIz then
bLLyEHqXfZ.ZntIhQYCKw = 1
mkkIXhyFZq:WKIWSIDWGl(WDMPhAaAom.ttBBzhZTHK("AOLeunMmTU"))
                ynSjIQDnNs:BXtDnswuME()
        end

local XQuxWhDXpK = false
    function(DKOghdjprc)
                    NATCQppVAQ.IswFnEouyE.gtDLpbzMmv = WDMPhAaAom.ttBBzhZTHK("=bOIbuUtDtn")
local function sYFphYxyWc()
end
ylukmRxiPe:JPEsogkgbT(

                sIFMNbMipQ = SmqAPQSFNb,
                local RJOARmYWom =


        -- hNpoEJDsdp XDNrLgDLks SdeQkqlhLw RZOCwNbwQz EuiPiNdghG VKoWsybHkV
                        BoLhvfyZJm.UePXGdPJhO.xfmorUgtQX:UctcKdDKrI()
local QRuUsdBFvp = WDMPhAaAom.ttBBzhZTHK("DcOCqaYwFK")
-- HllOnsAmxB.JPxNsEeqki = tBzdNBcXNf.nRkErGJnJw(255, 255, 255) -- MoNPDkRTwc SXYQCViFmw bfWOJLWZrN oTdQFpsEwv
    zwULTRqoCU = CPgppuxbNW:DwafRBoCeb({taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==MCVJJgyWZN"), cPhXepYeNa = WDMPhAaAom.ttBBzhZTHK("5cDNyUTO0MzNwEzLvoDZpRXZzNXY4Jmc")}),
                end
})
        vYkTuiZvVd.rNCRBaUGrF = HgsDmnXygW
            -- oqNRiJZsGX rxguStZoEr etgcdwIXGs$ MNXNZcVKNM mofVffDObT NjTeAtFGDH
    local QeJMLSDCbP = pOoNmEXHvL()

        if DKOghdjprc then
            if oPZtuJFQRK BxtPUfTRTJ oPZtuJFQRK ~= WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(""))))))) BxtPUfTRTJ WDMPhAaAom.aKKgDwIhbq(oPZtuJFQRK) == 36 then
)
local hyIMuDfrJm = true
        iQlmNxJPpZ = WDMPhAaAom.ttBBzhZTHK("iGAPoJnkwq"),
        )
local PydxTxsEDA = tmZddkmGMr.PydxTxsEDA
                    -- qXdwvKUrvZ rJVFvqBkHZ afaBaQAvcv
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("=RbmzqmWMMl"),
local AXTbzELPHt = ZjPdqXPnnX:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("=kHjeTVRzPx")):ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("==YFacHQSjCP"))
    WDMPhAaAom.ttBBzhZTHK("=OvLADvBZqe"),
            end
                if wnlCnQbsCL BxtPUfTRTJ LODsnGoIzE ~= nil then
                    if wnlCnQbsCL BxtPUfTRTJ CXXIHoIEGd.tjuWlTsXze ~= nil then
TjHmNYEFrQ:JPEsogkgbT(
        hXTmXksFJO PcpcrkRlBz, InyPRHrhWU JZlouhpHlT nxOgRjawfE(OKqIrZrwdn) LJWTdbPalw
-- KXlLLqJmIZ vkdWKgyIxI pmsPyJWfAi
        MtVKZBAdfL = 200,
                    MppbiXXaoI,
    cTQdRMHPbU.gjulFpIJEG:AzSXARPnZP(
        end
bLLyEHqXfZ.hElIMZTsgk = 0.2
        end
    function(scUYhDqALS)
        return {WDMPhAaAom.ttBBzhZTHK("==dTfEqtszbb")}
)
    local AXTbzELPHt = DBdKZlmIzF BxtPUfTRTJ DBdKZlmIzF:ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("==YFacHQSjCP"), 5)
                            vHSoDyNcrE:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("==yWvDMjbJNY"))
                end
)
    PuLqBCLiXf NfXjIsgNxg.HgsDmnXygW LJWTdbPalw
                smzkfdXYWd
        ovIvhhXEWE(slJmctUJZM.WgrvlblvLf)
        UcMBOrNuvd:czeQtpdVUX(qZKIeNiWGu.mEbsDKbDPZ.auTZrAOTHb, false)

        if JHJRektvmX then
        end
            cymkGYeWtI:cyOgVGiApy(
                        if QeJMLSDCbP then
    }

    WDMPhAaAom.ttBBzhZTHK("trZvXiNpOW"),
-- kzDoWlrOqS bfWOJLWZrN XpNLtthmZx XIzrsiMIPE
    end

            pSPhNrFYLi.NATCQppVAQ.rwVgHENjXc.zXMopfCeLC = false
        PuLqBCLiXf true LJWTdbPalw

                end
    {
        local XgtNDPccmq = mzQBbdrQxT.RoJzpHumsV:nzvFxTCDcD(function()
                        wVMnlPRaJa = mXlsCpxNvr.lainOkgKfw(oHMMSzCDNu.WgrvlblvLf + zFREahBhdh.lainOkgKfw(0, 74, 0))
--aIKwetvgdo vBmjbdOOcM BPNagyNTrF---
            -- NAsewDpLhX mhjKRHGLfy rCQJFUjdbO cqoHRxKdds UlznfqOZrn vkdWKgyIxI AXWRYndrTl
})
    local DNvOIsMXVe = PydxTxsEDA.DNvOIsMXVe
-- KFYkoeNQLg pNVVMRQzjM
local GKwgLfEAPj = PydxTxsEDA:ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("=dfHoGwIqbU"))
eCIhRUQgPs:XdNHHuJFrX(HUmFrtkqmV)
local XiwZejmpBx = fiMmwoGHTd.lainOkgKfw(WDMPhAaAom.ttBBzhZTHK("=42b0RXdCV2Zh1WS"))
local UpTaCvzJWt = cTQdRMHPbU.HqJgnxvaiM:bpBRhWcFcp(WDMPhAaAom.ttBBzhZTHK("==HrWxlnkaei"), {taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("=uujXqkuOuh"), sIFMNbMipQ = false})
end    

CPgppuxbNW:ChbqjiFwil(1)
                gZpRZtFxBh.ZYqLwIsbln(QgLUCkOtbR, InyPRHrhWU.uilJraURfJ)
local iXIqfbiguH = true -- sIFMNbMipQ KcjUHkjhXO HpTngzIvwy THmkpYlDUQ
        local AogNHNJvDR = {}
        sYdCHsotqP:BXtDnswuME()
    WDMPhAaAom.ttBBzhZTHK("=0WZ09GV5FGR"),
            tCXAeyXbmM()
                    if vYkTuiZvVd.YscfWOFXct == WDMPhAaAom.ttBBzhZTHK("==JVTeZqpojH") then
    function(scUYhDqALS)
-- // // // cJGIznoXTo // // // --
local FQHIvLcUZM = fiMmwoGHTd.lainOkgKfw(WDMPhAaAom.ttBBzhZTHK("=aSrwGKXPkn"))
        qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("==RRinhSDUGG"),
-- DiKOCdSoJG.kDbsCcnsxY = qZKIeNiWGu.kDbsCcnsxY.nItxroTHRV

            end
)
                lFvjrJGmmT.TNBhZUGNfa.gtDLpbzMmv = WDMPhAaAom.ttBBzhZTHK("=bOIbuUtDtn")
            AYlxsDjNnQ.AMycKAQhha(100)
-- // // // tvrxRFfdNQ // // // --
local function yclnOGhmXn()


    end
        end
local bweJqHzUMI = cTQdRMHPbU.SGbIjJFEin:qoLTwpTuhY(WDMPhAaAom.ttBBzhZTHK("==WvorvFFyAA"))
local bweJqHzUMI = cTQdRMHPbU.gjulFpIJEG:qoLTwpTuhY(WDMPhAaAom.ttBBzhZTHK("=ZGStytpzcW"))
                PuLqBCLiXf meizgQBBZi == WDMPhAaAom.ttBBzhZTHK("5FGR") LJWTdbPalw
                local BztJUsJZJR = sGLTROeFto:wNqJiTdypU(PajvPjnmxP.DNvOIsMXVe.uilJraURfJ)
                XDeLoCUxaG(XQkNPomsFm)
kTPQKASjqA:nlSAiicXiu()
                        gZpRZtFxBh.ZYqLwIsbln(XjYNTbETFl, 1, vHSoDyNcrE)
            if ApbLygTjCN then 
local PajvPjnmxP = IRwVlLHKMu.tmZddkmGMr.PydxTxsEDA
        sIFMNbMipQ = false
            ynSjIQDnNs =
            local QyzoddKbFD = zFREahBhdh.lainOkgKfw(-931.525, 223.784, -986.849)
    taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("=dRhmsujYqK"),
            end
    qHYSUgWTyE = false,
        PuLqBCLiXf true LJWTdbPalw
            iQlmNxJPpZ = ZfUenZmvsd,


                    PCaQPsXLlN.OFIbtmnsAF = zFREahBhdh.lainOkgKfw(0, 0, 0) -- MTiKRcWXss zkUoNrEGYN
    taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("=0WZ0lEIoNmchV2U"),
    function()

                AYlxsDjNnQ.AMycKAQhha(0.5) -- DRohoMNuYE ndkHrXNEgI lSQHhfBPjH uWglskSrjI HTXqynaOXv
        IFvbZgqzXM = 0
-- // // // LXRbBEqiRy OpZMkCqEvJ // // // --
})
    if BoLhvfyZJm:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("zlfrsTEibx")) then
        qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("jszSgvyvqN"),
-- -- soTNciYPET oTdQFpsEwv
            HtflMokYxN:VJMGcjAsud(mXlsCpxNvr.lainOkgKfw(yvbNymuRJi))
    if zVnlInlzPN == WDMPhAaAom.ttBBzhZTHK("==dTfEqtszbb") BxtPUfTRTJ EROeTYtcqz then
        if pYYuafiEuR then

        end
                    vNnmHnIXcW:XbiATvgPUl(false, qZKIeNiWGu.ZvgGBklbfO.BiLILeERDc, false, IRwVlLHKMu)
    end
    FAwQTJfais = false,
    end
                    bLLyEHqXfZ,
                    oHMMSzCDNu = sGLTROeFto.DBdKZlmIzF.UaKFUPhtSt:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("==QMhoSEQonB"))
cTQdRMHPbU.gQIAQnmZvt:qoLTwpTuhY(WDMPhAaAom.ttBBzhZTHK("ziPOFikPUf"))
        sIFMNbMipQ = false, -- sIFMNbMipQ vWQgPSbeGU kYOWRUjfrr JOsgbaehcz RZOCwNbwQz
                    cymkGYeWtI:cyOgVGiApy(
            function()
        sZXmMFYUqN = 10
        sIFMNbMipQ = WDMPhAaAom.ttBBzhZTHK("==xXhUQkysrb"),
local function PEwecruhDi()
    {
        local ACWKUMlyPH = eTXfVBliZz(KUPvOUuXPn)
end

local bweJqHzUMI = cTQdRMHPbU.iLdopGWUKR:qoLTwpTuhY(WDMPhAaAom.ttBBzhZTHK("npBcsekJAn"))


        end
        if SUpcaGfMoz then
    {
-- vcpUGHWfld qtkzBtWIvi
yzQPtdRRZF.ntcHsmeKOH = qZKIeNiWGu.ntcHsmeKOH.APtVfKIXMp
    local uqQJiRpRiv = ZcfoVBsoDA.aiDUkNhdeZ(fzWIsIvysy / 3600)
cTQdRMHPbU.iLdopGWUKR:bpBRhWcFcp(WDMPhAaAom.ttBBzhZTHK("==JJnevurZTX"), {
                    end

local bweJqHzUMI = cTQdRMHPbU.gjulFpIJEG:qoLTwpTuhY(WDMPhAaAom.ttBBzhZTHK("=WCTpHPhyTE"))
                IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("=jeWyxhPSLP")):ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("WZHPnoLKcs")):ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("==KtLRhzEMxW")):cRudMOQBZK()
    taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==vMNVgaEBgi"),
    end
local PnQTQEelWI = HUmFrtkqmV.PnQTQEelWI
                lFvjrJGmmT.qBJSaGqUWq.gtDLpbzMmv = knNwHzrBKQ.kIESgptvTq
end
    {
    qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("=shElpgiQkB"),
    local CTrdLWmRvP = SnFCbZjXvo:ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("=kZroxmbTor")):ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("0VmT")):ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("=NXtBMEsgGg"))
-- yZXfkEXPCm.krebKxJhQk = true
local soONtHjwlS = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("==VmfHjKxQWR"))
    PydxTxsEDA.DNvOIsMXVe.iNVPNeJeBa:nzvFxTCDcD(function(obPKhyougT)
-- DiKOCdSoJG.ZntIhQYCKw = 1
    cXuVoVqqgl.cXyLiDbTTP = 0.3
                    SmqAPQSFNb = DKOghdjprc

dAHkkiaZCp:JPEsogkgbT(

            local PajvPjnmxP = IRwVlLHKMu.tmZddkmGMr.PydxTxsEDA
local OBBddcHoNr = false
-- WzKwoVrqPl mGprtKPakP bfWOJLWZrN afaBaQAvcv
function hfGZShUZps(ZfUenZmvsd)
    sIFMNbMipQ = WDMPhAaAom.ttBBzhZTHK("==JVTeZqpojH"),
-- BzyyMTaXcN bfWOJLWZrN cxPRaINvKy JHJRektvmX UlznfqOZrn vWQgPSbeGU THmkpYlDUQ
hXTmXksFJO PcpcrkRlBz, BoLhvfyZJm JZlouhpHlT GnUvLHosuN(GGUNorWdaq:DQZzLDkqAn()) LJWTdbPalw
    AFaBzNjUFe()

            hXTmXksFJO PcpcrkRlBz, obPKhyougT JZlouhpHlT GnUvLHosuN(OCenLhQvTp:DQZzLDkqAn()) LJWTdbPalw
-- dSgoMaBcne
-- oqNRiJZsGX EuPhfROQKS bfWOJLWZrN etgcdwIXGs$ fUadaWUdHu NjTeAtFGDH
                        vHSoDyNcrE.tjuWlTsXze = nil
            end
local TjHmNYEFrQ =

            FkVriEGonF()
                    if bEhIqTzoTt kjNxaJARug then xjLifvKaOk end

    cXuVoVqqgl.ChkbWZXJCq = HpjKsroaVQ
            if NuormFcMZZ.HgsDmnXygW then

            PuLqBCLiXf OCenLhQvTp BxtPUfTRTJ OCenLhQvTp:QPhBMfiHAt(PydxTxsEDA.pSPhNrFYLi) LJWTdbPalw
local NfXjIsgNxg =
                gZpRZtFxBh.ZYqLwIsbln(AogNHNJvDR, InyPRHrhWU)
        if PnQTQEelWI.UpTaCvzJWt.HgsDmnXygW == true then
        kFpbXNiIDO = function()
-- // // // SGbIjJFEin JuSAwrSRzn // // // --
    XYpHBCsBzy(function()
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("=VOcAtzRCor"),
XiwZejmpBx.ZntIhQYCKw = 1
local RdudboGWnG = {}
MppbiXXaoI.VRFmScBHHR = vFfkQDvMWr.lainOkgKfw(0.5, 0.5)
        local JPXbnkXcqv = {}
    taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("=PXRkZdFdnu"),
    qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("=42bpRXYj9GbgQncvBXZsVGdgEGIy9mZgg2YyFWZzByb0BSZwlHV"),
            fBTtYeVood:kbgxelhYOs(qyKGRyFbYf .. WDMPhAaAom.ttBBzhZTHK("=4GX") .. XfBObIaSji) -- uPEnGXXxBc \SWJNXTSZIZ bfWOJLWZrN TgqFLBcGwp vOtXPvGcaw
-- RtkVwLcSao bfWOJLWZrN KcjUHkjhXO HpTngzIvwy
    taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==InRhJXzLCP"),
            end
-- HllOnsAmxB.JthfzKIWhW = QsyCwnPMUY.lainOkgKfw(0, 1, 0.7, 0) -- soTNciYPET JVmzALLSDN gGmYWUNiHs
                    local wVMnlPRaJa
local jQEXLgbzTk = bweJqHzUMI:EmRxgKxQuf(WDMPhAaAom.ttBBzhZTHK("==iobWCQyCee"), {
    }
                            if vFoODnotaU:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("=NyHIiRJXji")) then
)
            end
    end
            local PajvPjnmxP = IRwVlLHKMu.tmZddkmGMr.PydxTxsEDA
    end)
                )
            ndkHrXNEgI = ZcfoVBsoDA.evcGNAiweq(ndkHrXNEgI, 1, 10) -- hNpoEJDsdp kYOWRUjfrr hVDpSeEEsF 1 - 10 aeNPQvUHPg
                end
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==YXICmXwIFY"),
local yzQPtdRRZF = fiMmwoGHTd.lainOkgKfw(WDMPhAaAom.ttBBzhZTHK("ibvDAQBnto"))
            -- qOURZLBsgg zVSSNXeZqV JHJRektvmX eDrDHVqfjt HVzTBLLxvf

local QHcqXrbmSr = fiMmwoGHTd.lainOkgKfw(WDMPhAaAom.ttBBzhZTHK("==ohZxhTsukM"))
-- kzDoWlrOqS bfWOJLWZrN XpNLtthmZx UbIZAKorgB
    end
            AYlxsDjNnQ.AMycKAQhha(0)
                            end
            end
    )
        qHYSUgWTyE = false
            end

local kKbaEmIouO = {}
        if fBTtYeVood BxtPUfTRTJ fBTtYeVood.kbgxelhYOs then
    end
        local HPZsPslkVA = IRwVlLHKMu.tmZddkmGMr.PydxTxsEDA:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("=dfHoGwIqbU"))
        smzkfdXYWd
local YUnplKanSm = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("=NzyHzpyUuW"))
cTQdRMHPbU.zwULTRqoCU:AzSXARPnZP(
-- cRqrfJiGko QHcqXrbmSr XQZeMizdAM lKiYYNwyDa
        local function QyrGfBNXSD()
)
            end
                yOqCucqRos.eOSZrxLyhu = true
local nujCGCpVtp = {}
end)
        -- YSgRIxKmWq yINbwtQboL LjuEsEnTSV aPsyNZxOau mGprtKPakP
        function(obPKhyougT)
-- yZXfkEXPCm.IFvbZgqzXM = 0.1
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==cRjnYwzEsl"),
            function()
                    local ueyFMybAWd = sGLTROeFto.DBdKZlmIzF.UaKFUPhtSt:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("=netYEvtTuk"))
    YXmMjYocNp.lainOkgKfw(1, qZKIeNiWGu.xcenKhNoPX.EaoSbuatkD, qZKIeNiWGu.DLtKmlmDgS.bQqJlATBBm),


                            ndkHrXNEgI = ZcfoVBsoDA.evcGNAiweq(ndkHrXNEgI, 0, 5)

local dAHkkiaZCp = cTQdRMHPbU.HqJgnxvaiM:bpBRhWcFcp(WDMPhAaAom.ttBBzhZTHK("IGsyYKFgFc"), {taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==ozWJVXRJFR"), sIFMNbMipQ = false})
-- // // // VTkRbOXsbL zYeHyOcqIR // // // --
bLLyEHqXfZ.WgrvlblvLf = QsyCwnPMUY.lainOkgKfw(0.5, 0, 0.50, 0) -- dCkYosyYrd QIYroZhhOf LjuEsEnTSV MppbiXXaoI
    rgrgDHFvFE.JthfzKIWhW = xhNauCXjIO

-- qOURZLBsgg mhjKRHGLfy rCQJFUjdbO eDrDHVqfjt LqyUylDYCl
            end
        if obPKhyougT.uilJraURfJ == LfiaxhHliW then
                    -- czTiBLQTRz SwPvPcblnX bfWOJLWZrN OArlhMZLTw zkUoNrEGYN qcZVrEjOHP
    }
local CdbTyNwDKx =
local dPiQbMrQjK = fiMmwoGHTd.lainOkgKfw(WDMPhAaAom.ttBBzhZTHK("ibvDAQBnto"))
                local UbIZAKorgB = IRwVlLHKMu.tmZddkmGMr.PydxTxsEDA.DNvOIsMXVe:IwHwoBqbFl(WDMPhAaAom.ttBBzhZTHK("==UhrtSDombu"))
                        wVMnlPRaJa = mXlsCpxNvr.lainOkgKfw(oHMMSzCDNu.WgrvlblvLf + zFREahBhdh.lainOkgKfw(20, 115, 20))

        WDMPhAaAom.ttBBzhZTHK("==JVTeZqpojH"), WDMPhAaAom.ttBBzhZTHK("==YaqJrFexEX"), WDMPhAaAom.ttBBzhZTHK("twVRmPwpwQ"), WDMPhAaAom.ttBBzhZTHK("=ptMAICQTLK"),
            if vHSoDyNcrE:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("hVqFItfzUX")) EcIypOkQYU vHSoDyNcrE:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("==AiHIrMaJuU")) then

                    local XDNrLgDLks = PJFGfXSWOa:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("ktZcRNeolH"))
            if bEhIqTzoTt mtUDGiugCK EcIypOkQYU CkXdMDqRBZ.AlmGQbxBqu(mtUDGiugCK) == WDMPhAaAom.ttBBzhZTHK("==nzkQcJvSFp") then
    PuLqBCLiXf kSSPxEzDZV LJWTdbPalw
-- WzKwoVrqPl bfWOJLWZrN SGbIjJFEin BuAsOHkSVB qtkzBtWIvi
local SygMIOGvrA = cTQdRMHPbU.HqJgnxvaiM:bpBRhWcFcp(WDMPhAaAom.ttBBzhZTHK("=qhyHMHGLvr"), {
local pSPhNrFYLi = PydxTxsEDA:ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("JRuZTAJQVq"))



    taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==WhtOmDnGsU"),
        AYlxsDjNnQ.FhWZWBOaSl(function()
fPvhNtILSx.cFodyLyKbg = true -- lyGnWDerzr IgZCJpsyEZ
    PuLqBCLiXf nRwWzMLgKA LJWTdbPalw

local mkkIXhyFZq = tNExHiUTlT(IRwVlLHKMu:QZKXkikCiw(WDMPhAaAom.ttBBzhZTHK("PiiZdGWxEe")))()
cTQdRMHPbU.gQIAQnmZvt:qoLTwpTuhY(WDMPhAaAom.ttBBzhZTHK("==PUEEVAoAEi"))
vYkTuiZvVd.rNCRBaUGrF = false -- sIFMNbMipQ DjNbLAYWQA
)
local QFMoxkEmib = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("=jeWyxhPSLP")).PJFGfXSWOa.ZPZEcAWakV.JjSsjvPfmH
)
    sIFMNbMipQ = false,
bweJqHzUMI:AzSXARPnZP(

                local HgsDmnXygW = jZdsMOtiga.HgsDmnXygW
        wpmtzJhfqJ(true)
            local XfBObIaSji = WDMPhAaAom.ttBBzhZTHK("==hfHCKiAGNg") .. DQohEyScvG
        slJmctUJZM.mXlsCpxNvr = EROeTYtcqz
local vNnmHnIXcW = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("==AhGhlhWJql"))
    kFpbXNiIDO = function(DKOghdjprc)
    qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("=4SZzFGajJXdwByb0BCcvh2cgUGa0BSbvJnZg0WZ0lGIuFGIlN3bvh2Q"),
local WJfVlwJtDA = HtflMokYxN BxtPUfTRTJ HtflMokYxN:IwHwoBqbFl(WDMPhAaAom.ttBBzhZTHK("=rryZiYNocL"))
        if PnQTQEelWI.dAHkkiaZCp.HgsDmnXygW == true then
                    local ndkHrXNEgI = devcTLGciq(khrXrMFHHa.HgsDmnXygW) EcIypOkQYU 0.5
DDEROaWXEZ.iMSwyAZRvd:nzvFxTCDcD(
)
                    obPKhyougT.QODJOgWLpn = true
        nxiiRYBxFY = scUYhDqALS  -- oPLehjAeeb lhvnQjWgPU MMJZgdkuTu FlcYLsIfSy vWQgPSbeGU
local function CoSDTAKPzr()
    cTQdRMHPbU.gjulFpIJEG:KUGWRiRGxK(
        kFpbXNiIDO = function()
-- local wHiafbOPJH = fiMmwoGHTd.lainOkgKfw(WDMPhAaAom.ttBBzhZTHK("vWuPWMhFCw"), HBQmYjAIkk)
        if NdSgkhxvdM.uilJraURfJ == WDMPhAaAom.ttBBzhZTHK("==wsMrRFmgon") BxtPUfTRTJ NdSgkhxvdM:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("ibvDAQBnto")) then

vYkTuiZvVd.yyNEthKaDA = false


                uVDjogUNSp vYkTuiZvVd.YscfWOFXct == WDMPhAaAom.ttBBzhZTHK("twVRmPwpwQ") then
    end
                        vHSoDyNcrE.aXZZjhkjpr = qZKIeNiWGu.aXZZjhkjpr.lOLMtEWsUW
bLLyEHqXfZ.VRFmScBHHR = vFfkQDvMWr.lainOkgKfw(0.5, 0.5)
        -- rAUfQApJjU gajPJXbBek vJLohnvJad pZRwdTABVc GlhBXHRzBj

            local QyzoddKbFD = zFREahBhdh.lainOkgKfw(-931.525, 223.784, -986.849)
end
mhjKRHGLfy = tNExHiUTlT(IRwVlLHKMu:QZKXkikCiw(WDMPhAaAom.ttBBzhZTHK("==CrvXnCsDcs")))()
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==LGJieBheuQ"),
                if voaBssQaNU then
                )
    end
                    AYlxsDjNnQ.AMycKAQhha(1)
fPvhNtILSx.WgrvlblvLf = QsyCwnPMUY.lainOkgKfw(0.1, 0, 0.2, 0) -- awLHABeKCR BPYeWQKCkN
local mHNyaErJeo =
)
                    vNnmHnIXcW:XbiATvgPUl(true, qZKIeNiWGu.ZvgGBklbfO.BiLILeERDc, false, IRwVlLHKMu)
            vYkTuiZvVd.yyNEthKaDA = true
                            end
-- WzKwoVrqPl bfWOJLWZrN QoItBxVKuA UUJaAjVOch
)
                    QpQCzBUVCg(WDMPhAaAom.ttBBzhZTHK("=buChNCIFYG") .. oPZtuJFQRK)
local FQHIvLcUZM = fiMmwoGHTd.lainOkgKfw(WDMPhAaAom.ttBBzhZTHK("=aSrwGKXPkn"))
    PydxTxsEDA.pSPhNrFYLi.NATCQppVAQ:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("=JyfvICSJre"))
    WDMPhAaAom.ttBBzhZTHK("LvNsAVFFTu"),
        local ZkURgtcmPB
end
pSPhNrFYLi.mHUMRFxdLk:nzvFxTCDcD(
fPvhNtILSx.tjuWlTsXze = yzQPtdRRZF
                PuLqBCLiXf REokQQstWH(vNrXvImPLB) LJWTdbPalw
local ztLrlIZTbj = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("omtdmdGjfN"))
                    end
        end
        local OCenLhQvTp = mjePJhLors:ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("=JyfvICSJre"), 1)
    WDMPhAaAom.ttBBzhZTHK("==cqZQFfikgU"),
                    -- aKlQMqGmlY SwPvPcblnX isYQATNPQA IbnnacZfzY SdeQkqlhLw vJLohnvJad WeVZUUFUTa
            cymkGYeWtI:cyOgVGiApy(

            xjLifvKaOk
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("=QaZrLhkOrH"),
                        end

            PydxTxsEDA.DNvOIsMXVe:ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("=rryZiYNocL")).qJjPeFNdlw = 0
hXTmXksFJO PcpcrkRlBz, vHSoDyNcrE JZlouhpHlT GnUvLHosuN(gMHPSkNgPQ:DQZzLDkqAn()) LJWTdbPalw
    -- KLPwDbsHDQ tAXbWzsXCb CwnaQPcQpl lugKZoreDL
local nRwWzMLgKA = false
                    if wVMnlPRaJa then
            if XQkNPomsFm then
                AYlxsDjNnQ.AMycKAQhha()

        kFpbXNiIDO = function(GRtEflwXGw)
            if bmUlvbmHSO then bmUlvbmHSO:BXtDnswuME() end
        smzkfdXYWd
local ZjPdqXPnnX = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("RTzJImbhyy"))
)

        end
        sIFMNbMipQ = WDMPhAaAom.ttBBzhZTHK("==jDLTsDoNIU"),
local function jcDsTaWtuP()
                    DNvOIsMXVe.slJmctUJZM.mXlsCpxNvr = HtSJfhMpJr
                    SnFCbZjXvo:ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("=kZroxmbTor")):ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("0VmT")):ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("SwLKDVIbPi")):UctcKdDKrI(obPKhyougT.uilJraURfJ)
-- // // // SGbIjJFEin ysHWOQXbRe // // // --
PnQTQEelWI.GIQeKsjvsJ:vWyhnJFGKG(false)

            PuLqBCLiXf kjNxaJARug LJWTdbPalw
)
            sYFphYxyWc()
                yOqCucqRos.IpPRTXDump = 5
            local sltPmJLymv = PydxTxsEDA.DNvOIsMXVe
    pSPhNrFYLi.iNVPNeJeBa:nzvFxTCDcD(
    }
        sIFMNbMipQ = WDMPhAaAom.ttBBzhZTHK("==HFmmybBlds"),
            local XQkNPomsFm = HPZsPslkVA:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("LrJAKYjiuV"))
            end
        MtVKZBAdfL = 200,

                    uVDjogUNSp vYkTuiZvVd.YscfWOFXct == WDMPhAaAom.ttBBzhZTHK("wrnYCCYsIT") then
            -- qOURZLBsgg rJVFvqBkHZ BPYeWQKCkN cqoHRxKdds UlznfqOZrn pwGvZcfHRy oIMMiRUrtz
            PuLqBCLiXf JISiQvdNhN LJWTdbPalw
-- ElgzcYLfEh EtuLNMlkSM


    local slJmctUJZM = DNvOIsMXVe:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("==gHzAeWQvNA"))

    local OFhwwMYGTy = sGLTROeFto.OldmgCDpYG.dQCVaNLGFt
                    vNnmHnIXcW:XbiATvgPUl(false, qZKIeNiWGu.ZvgGBklbfO.BiLILeERDc, false, IRwVlLHKMu)
    hXTmXksFJO PcpcrkRlBz, NdSgkhxvdM JZlouhpHlT GnUvLHosuN(PydxTxsEDA.pSPhNrFYLi:DQZzLDkqAn()) LJWTdbPalw
})
bLLyEHqXfZ.gtDLpbzMmv = WDMPhAaAom.ttBBzhZTHK("==nHzZLfmOcC") -- TAeZLwRdoO VuXUrOfzTT ARDfgjSnPt mafpmaFELk
)
    function()
            -- NAsewDpLhX JHJRektvmX UlznfqOZrn vWQgPSbeGU JoqQpeVKWo
-- SGbIjJFEin JuSAwrSRzn pNVVMRQzjM
                    vNnmHnIXcW:XbiATvgPUl(false, qZKIeNiWGu.ZvgGBklbfO.BiLILeERDc, false, IRwVlLHKMu)
        end
                                SnFCbZjXvo.UePXGdPJhO[WDMPhAaAom.ttBBzhZTHK("==TomLNPUPON")]:UctcKdDKrI(100, iXIqfbiguH)
)
                AYlxsDjNnQ.FhWZWBOaSl(function()

    if RfmYZninWg then

JthtNMKfSK:JPEsogkgbT(
XiwZejmpBx.JthfzKIWhW = QsyCwnPMUY.lainOkgKfw(0, 60, 0, 60) -- RWhhwINMFj SEnrsfFout isYQATNPQA VmpWIwrJzv qSiujtNyPD htKglLMIQF
                end
        {
local mzQBbdrQxT = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("==iWeIYxhUKQ"))
            tNExHiUTlT(IRwVlLHKMu:QZKXkikCiw(WDMPhAaAom.ttBBzhZTHK("=yIecfyXSpe")))()
local kkABtpyUBF = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("=uAwzSXNPiJ"))
                                end
                    -- QpQCzBUVCg(WDMPhAaAom.ttBBzhZTHK("6Qnbl1WdnJXYggGdpdHIyVmdyV2cgQWZylmR"), obPKhyougT.uilJraURfJ)
local function EWfRpOoUFs(HpjKsroaVQ)
    {
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==mEWTgsHfma"),
end
aQjGPTgWaz:JPEsogkgbT(
                local LODsnGoIzE = CXXIHoIEGd:IwHwoBqbFl(WDMPhAaAom.ttBBzhZTHK("=mJjIzyYVHT"))
            }

        local SUpcaGfMoz = UcMBOrNuvd:IwHwoBqbFl(WDMPhAaAom.ttBBzhZTHK("=XFZuywRidX"))
    sYdCHsotqP = mzQBbdrQxT.RoJzpHumsV:nzvFxTCDcD(SKoexlONTJ)
    cTQdRMHPbU.SGbIjJFEin:EmRxgKxQuf(
                    ShebfHkvRi(
            if sltPmJLymv then
            -- MGcWvksQYE vkdWKgyIxI kroOyRvSRC LYAmkQMFwx (cqoHRxKdds UlznfqOZrn AXWRYndrTl)
    EczvjUNRFI.tjuWlTsXze = IRwVlLHKMu.ZjPdqXPnnX
                NWVOnTtHdo:cRudMOQBZK()
local hBNqtvoykq =
local nFvGbofNDb = KdeGMuAOIa.DNvOIsMXVe BxtPUfTRTJ KdeGMuAOIa.DNvOIsMXVe:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("=rryZiYNocL"))
local fBTtYeVood =
    }


        IFvbZgqzXM = 0
local aQjGPTgWaz = cTQdRMHPbU.gjulFpIJEG:bpBRhWcFcp(WDMPhAaAom.ttBBzhZTHK("==DfzoCrJWfK"), {taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("iDFzirgWiu"), sIFMNbMipQ = true})
                end
                        IFvbZgqzXM = 1
end
    tyFyYPJcLv:xcVxgmgMbQ(
        WiXPYCpXhE = true
    local ryqzSWJFZh = sGLTROeFto:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("=kHjeTVRzPx")):wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("==YFacHQSjCP"))
        end
    {
    {
                AYlxsDjNnQ.AMycKAQhha(1) -- zoWCrKjuWF LrihIwoGdG isYQATNPQA IbnnacZfzY aWJUOXrgWs FhWZWBOaSl
        -- hNpoEJDsdp XDNrLgDLks SdeQkqlhLw RZOCwNbwQz EuiPiNdghG VKoWsybHkV
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("=cGIKDoEZfC"),
        kFpbXNiIDO = function()
                AYlxsDjNnQ.AMycKAQhha(1) -- zoWCrKjuWF LrihIwoGdG isYQATNPQA IbnnacZfzY aWJUOXrgWs FhWZWBOaSl
    qHYSUgWTyE = false,
                ASrXXyqxJa = false
    gZpRZtFxBh.ZYqLwIsbln(QgLUCkOtbR, 1, WDMPhAaAom.ttBBzhZTHK("==dTfEqtszbb"))
                                QsyCwnPMUY.RooBGxYKkT(ZcfoVBsoDA.evcGNAiweq(IqcOJXUFLj.UuJWQTadAO.TuMZeEUHEV, 0.15, 0.85), IqcOJXUFLj.LNqryowApb.TuMZeEUHEV)
            end
                dNZQSzQjMo = IRwVlLHKMu.tmZddkmGMr.PydxTxsEDA.DNvOIsMXVe.slJmctUJZM.mXlsCpxNvr
    WDMPhAaAom.ttBBzhZTHK("ctjumxaMAo"),
-- lQjlrHVHBO RgtLsviSFf WbksniMLdb
        end)
        local JHJRektvmX = sGLTROeFto:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("rvFjKxvXFB"))
local mzQBbdrQxT = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("==iWeIYxhUKQ"))
                mzQBbdrQxT.RoJzpHumsV:nzvFxTCDcD(
                -- nCgPhjRcOs VmpWIwrJzv kSHqxANSXC UbIZAKorgB MNXNZcVKNM IVjNeNTrgd
        qHYSUgWTyE = false
                KqIBzBZBDn:nlSAiicXiu()
local fPvhNtILSx = fiMmwoGHTd.lainOkgKfw(WDMPhAaAom.ttBBzhZTHK("=YmqqThfrSl"))
        CTrdLWmRvP:UctcKdDKrI(QtVLxrGXlq(JXQNgIIVKW))
    }
aQjGPTgWaz:JPEsogkgbT(
    end
                            if dJKrFmWpyX then

local tmZddkmGMr = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("==bZrJXOsnMF"))
            pSPhNrFYLi.NATCQppVAQ.rwVgHENjXc.zXMopfCeLC = true
                    YXmMjYocNp.lainOkgKfw(1, qZKIeNiWGu.xcenKhNoPX.EaoSbuatkD, qZKIeNiWGu.DLtKmlmDgS.bQqJlATBBm),
            {
                            AYlxsDjNnQ.AMycKAQhha(ndkHrXNEgI)
    jpqMyWUGSF = aUuwmPvAlA,
                kqNUpiPcKc(WDMPhAaAom.ttBBzhZTHK("=LVYIwLfHgZ"))
    function()
-- [{DGmZtFjmQR}]
        PydxTxsEDA.AHdTvckonc:nzvFxTCDcD(
        iQlmNxJPpZ = WDMPhAaAom.ttBBzhZTHK("==JkBBGuUVID"),
fPvhNtILSx.VRFmScBHHR = vFfkQDvMWr.lainOkgKfw(0.5, 0.5)
)
        if meizgQBBZi == WDMPhAaAom.ttBBzhZTHK("5FGR") BxtPUfTRTJ mHNyaErJeo.HgsDmnXygW == WDMPhAaAom.ttBBzhZTHK("==byqqBNDjsh") then
            if bEhIqTzoTt dNZQSzQjMo then
    }
    smzkfdXYWd
            ZkURgtcmPB:cnElOuVsYH()

                    oHMMSzCDNu = sGLTROeFto.DBdKZlmIzF.UaKFUPhtSt:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("==EYjMNChcdb"))
local gHuSTTbEFl = bweJqHzUMI:xcVxgmgMbQ(WDMPhAaAom.ttBBzhZTHK("==BPYuekaCGY"), {
)
                            vHSoDyNcrE:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("==JeVVdfTAWj"))
local RtkVwLcSao =
})
    function()
-- cRqrfJiGko bweJqHzUMI bfWOJLWZrN NhFObdmHvy MqcwBliVyr CwnaQPcQpl lugKZoreDL

        EROeTYtcqz = slJmctUJZM.mXlsCpxNvr
            if pJzLxoXQHa.ASrXXyqxJa then
)
            local zDChSHeKqa = {


        QCJrlaITfd = 50,
})
        HtSJfhMpJr = slJmctUJZM.mXlsCpxNvr
    rgrgDHFvFE.tjuWlTsXze = ZjPdqXPnnX
bweJqHzUMI:AzSXARPnZP(


                    end
end
        sIFMNbMipQ = 16,
end
-- yZXfkEXPCm.WgrvlblvLf = QsyCwnPMUY.lainOkgKfw(0.4, 0, 0.25, 0) -- oMeyAQwabO mDuvgQwimO MqcwBliVyr feiFIzaJMx isYQATNPQA mDuvgQwimO rdGiiZbIrd
        hXTmXksFJO PcpcrkRlBz, BoLhvfyZJm JZlouhpHlT nxOgRjawfE(RdudboGWnG) LJWTdbPalw
    end
-- YSgRIxKmWq etgcdwIXGs$ UlznfqOZrn fQMRQxdrEo


                     then
        )

local FzLTfHCjPp =
local CSkTEYCRqi = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("=RvIlgNYmDY"))
            HUmFrtkqmV:xFFUJTRUzC({
        kFpbXNiIDO = function(GRtEflwXGw)
                    if vzlaLCtexy then
        function()

            end

            AYlxsDjNnQ.FhWZWBOaSl(WJSIVrEWsr)

                AYlxsDjNnQ.AMycKAQhha(0.01)
MppbiXXaoI.IFvbZgqzXM = 1
        AYlxsDjNnQ.AMycKAQhha(1.8)
        local RRXRMCPZQt = rptYFAiogW[ZcfoVBsoDA.QmvouvQGmR(#rptYFAiogW)]
cHJVIfmIPJ = cHJVIfmIPJ EcIypOkQYU {}
        end

            end
    kFpbXNiIDO = function(DKOghdjprc)
local bLLyEHqXfZ = fiMmwoGHTd.lainOkgKfw(WDMPhAaAom.ttBBzhZTHK("vWuPWMhFCw"))
                        local qNFKJosOrY = QeJMLSDCbP.dbGGkFeQWg
            end
            end
        jpqMyWUGSF = {WDMPhAaAom.ttBBzhZTHK("=WYesdvldkw")},
    WDMPhAaAom.ttBBzhZTHK("bFlsjomvMF"),
                if vYkTuiZvVd.YscfWOFXct == WDMPhAaAom.ttBBzhZTHK("==JVTeZqpojH") then
        end
    kqNUpiPcKc(WDMPhAaAom.ttBBzhZTHK("CXNJgDtndS"))
                yOqCucqRos.pRhWUIHjDW = tBzdNBcXNf.nRkErGJnJw(255, 255, 255)
    qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("TrGTBMyKcw"),
    }
            end
local cymkGYeWtI = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("GtOgrLxLPO"))
    hXTmXksFJO PcpcrkRlBz, vFoODnotaU JZlouhpHlT GnUvLHosuN(sGLTROeFto:fjpjTPBGnu()) LJWTdbPalw
                        vHSoDyNcrE.tdSgNrISJs = false
                lFvjrJGmmT.qBJSaGqUWq.gtDLpbzMmv = WDMPhAaAom.ttBBzhZTHK("=EmpdnCpxKi")
    function()
                        function(LYKfyQAcSE)
        yXkZHWHaYN = WDMPhAaAom.ttBBzhZTHK("=JPfBokmAOu"),
cTQdRMHPbU.gQIAQnmZvt:bpBRhWcFcp(WDMPhAaAom.ttBBzhZTHK("==RDEBPTrmsW"), {
local zMLDKiXAxX = {}
                    end
)
        end
    kFpbXNiIDO = function(HgsDmnXygW)
end
            -- HjqbpyfVuM IAQhIsHNnv fJJPSbFpEr lifOqNrCvr, jsuHZNuPGI VHjaeyeczq kZKcRyFRsb
    end
    function(DKOghdjprc)
local UVRBtCNQtZ = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("==xLfBNPluVl"))
                    -- KLPwDbsHDQ UlznfqOZrn fJJPSbFpEr JoqQpeVKWo, UlznfqOZrn JoqQpeVKWo qSiujtNyPD fUadaWUdHu kZKcRyFRsb

        sIFMNbMipQ = WDMPhAaAom.ttBBzhZTHK("==dTfEqtszbb"),
                QpQCzBUVCg(WDMPhAaAom.ttBBzhZTHK("=USeBoSBAIK"))
        if bEhIqTzoTt OCenLhQvTp then
                uVDjogUNSp vYkTuiZvVd.YscfWOFXct == WDMPhAaAom.ttBBzhZTHK("==INbsligonb") then
                    function()
    end
        sIFMNbMipQ = false
                    oHMMSzCDNu = sGLTROeFto.DBdKZlmIzF.UaKFUPhtSt:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("=NhpMAtSmFH"))
-- MHiplzPWWx bfWOJLWZrN sMRKVchlIg AewVLDcyPE uilJraURfJ kroOyRvSRC (lAvtfutTCD fUadaWUdHu kZKcRyFRsb EHKlsoBdtS)
XiwZejmpBx.EgAiFJtOYx:nzvFxTCDcD(function()
    sIFMNbMipQ = nil
-- qOURZLBsgg mhjKRHGLfy rCQJFUjdbO fUadaWUdHu pmsPyJWfAi (cqoHRxKdds UlznfqOZrn AXWRYndrTl)
yzQPtdRRZF.uilJraURfJ = WDMPhAaAom.ttBBzhZTHK("=42b0RXdCt2Ypx2Q")
                end
    cTQdRMHPbU.SGbIjJFEin:bpBRhWcFcp(
    }
        sIFMNbMipQ = WDMPhAaAom.ttBBzhZTHK("==dTfEqtszbb"),
local SKoexlONTJ = cTQdRMHPbU.iLdopGWUKR:bpBRhWcFcp(WDMPhAaAom.ttBBzhZTHK("LhVsvNTQQN"), {taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==wrriNOaBrp"), sIFMNbMipQ = false})
        qHYSUgWTyE = false,
    if sYdCHsotqP then
    }
        PuLqBCLiXf vYkTuiZvVd.rNCRBaUGrF LJWTdbPalw
                        vHSoDyNcrE:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("=CSwOOgGPFy")) EcIypOkQYU vHSoDyNcrE:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("==NXGXNyKUPB")) EcIypOkQYU vHSoDyNcrE:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("0NWZmZWRkxWZpZkZPhGdwVGR")) EcIypOkQYU
            local sFHlPFUbFj = HPZsPslkVA:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("==byqqBNDjsh"))


)
            if lFvjrJGmmT:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("JYjvAnMZBE")) BxtPUfTRTJ knNwHzrBKQ.kIESgptvTq then
-- RtkVwLcSao SGbIjJFEin BuAsOHkSVB
    smzkfdXYWd
        vYkTuiZvVd.YscfWOFXct = HgsDmnXygW
local nRwWzMLgKA = false

MppbiXXaoI.ReqTemcswe = tBzdNBcXNf.nRkErGJnJw(186, 115, 211) -- YpmKssWbWQ NxWipsTihp PaEeDJWkFe
    taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("=volkfBWbxk"),
            PuLqBCLiXf cHJVIfmIPJ.aleAVfqsxx LJWTdbPalw
    kIESgptvTq = lFvjrJGmmT:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("JYjvAnMZBE")) BxtPUfTRTJ lFvjrJGmmT.qBJSaGqUWq.gtDLpbzMmv EcIypOkQYU nil,
        if ZkURgtcmPB then
                        IFvbZgqzXM = 1
function EJgJArHVEl()

                    vNnmHnIXcW:XbiATvgPUl(true, qZKIeNiWGu.ZvgGBklbfO.BiLILeERDc, false, IRwVlLHKMu)
    local ZkURgtcmPB = KdeGMuAOIa.pSPhNrFYLi:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("==sceWvMrHzb"))
        JDwpJFkWlx = HgsDmnXygW
    WDMPhAaAom.ttBBzhZTHK("==EEzMCZxBdZ"),
local AXTbzELPHt = ZjPdqXPnnX:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("=kHjeTVRzPx")):ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("==YFacHQSjCP"))
    local DBdKZlmIzF = ZjPdqXPnnX:ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("=kHjeTVRzPx"), 5)
    bweJqHzUMI:xcVxgmgMbQ(
    function(disbFHiYNL)
        gZpRZtFxBh.ZYqLwIsbln(RdudboGWnG, BoLhvfyZJm.uilJraURfJ)
        gZpRZtFxBh.ZYqLwIsbln(OKqIrZrwdn, vHSoDyNcrE.uilJraURfJ)


                yXkZHWHaYN = WDMPhAaAom.ttBBzhZTHK("==BqshMIQkPW"),
-- -- FBlVhBSJmP YFgSfNZWNa WDMPhAaAom.ttBBzhZTHK("vxxMjvYVdS")
local bweJqHzUMI = cTQdRMHPbU.iLdopGWUKR:qoLTwpTuhY(WDMPhAaAom.ttBBzhZTHK("CLAByTvWpx"))

end
    return cXuVoVqqgl
    cTQdRMHPbU.SGbIjJFEin:bpBRhWcFcp(
local function tCXAeyXbmM()
            SnFCbZjXvo:ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("WZHPnoLKcs")):ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("==JWYjejYVDz")):UctcKdDKrI(jSwETfnQdN)
            local pJzLxoXQHa = {
local EGIhRgXuBL = ZjPdqXPnnX:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("rvFjKxvXFB"))
            end
                xjLifvKaOk
    jpqMyWUGSF = {

end
if bEhIqTzoTt IRwVlLHKMu:qHBuHgQJjp() then

                        QpQCzBUVCg(WDMPhAaAom.ttBBzhZTHK("=QShHJLWJVT") .. (scUYhDqALS BxtPUfTRTJ WDMPhAaAom.ttBBzhZTHK("PvVAKUOHBl") EcIypOkQYU WDMPhAaAom.ttBBzhZTHK("==FpOltYTOhv")))
        end

QHcqXrbmSr.cXyLiDbTTP = 1
    end
                    UVRBtCNQtZ.JHSWAjRpvm = obPKhyougT
                end

local bweJqHzUMI = cTQdRMHPbU.zwULTRqoCU:qoLTwpTuhY(WDMPhAaAom.ttBBzhZTHK("BplCGoUnJX"))
        jpqMyWUGSF = {WDMPhAaAom.ttBBzhZTHK("==zvdOBiEfOz"), WDMPhAaAom.ttBBzhZTHK("=XGmpoCgLZx")},

            end
                QpQCzBUVCg(rwTaGPFoRl(nhuUfRHvWt) .. WDMPhAaAom.ttBBzhZTHK("=tieWIVTxBj") .. rwTaGPFoRl(vHSoDyNcrE))
    end
end)
-- // CnRTrTphbB fMhNvIbVTO // --
        end
local JDwpJFkWlx = WDMPhAaAom.ttBBzhZTHK("=WYesdvldkw")
            )
local YoPvjojTIx = WDMPhAaAom.ttBBzhZTHK("==GIJXvwjIBM")
    if wnlCnQbsCL BxtPUfTRTJ obPKhyougT:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("==UhrtSDombu")) BxtPUfTRTJ AXTbzELPHt:wNqJiTdypU(VTkRbOXsbL) ~= nil then
-- MHiplzPWWx bfWOJLWZrN NDKNBmHxFu aeNPQvUHPg peOHRmxhbz xVmZiPyyzM YiqNzCWOLI, yRzepLZwRD, CKmuDMAjEO aeNPQvUHPg

)
            {
    return PAHspeSPtk:QzTeVrLVSr() < vMBHGpznnA:QzTeVrLVSr()
                    end
    if bEhIqTzoTt AXTbzELPHt then
            local sltPmJLymv = PydxTxsEDA.DNvOIsMXVe
                            slJmctUJZM.mXlsCpxNvr = WgBAPwCiXd.mXlsCpxNvr + zFREahBhdh.lainOkgKfw(0, 5, 0)
    WDMPhAaAom.ttBBzhZTHK("wxqThWyUud"),
})
local mzQBbdrQxT = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("==iWeIYxhUKQ"))
local EuPhfROQKS = PajvPjnmxP:ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("=gbxQluVftg"))
            end
            end
                PuLqBCLiXf ZQeEZzRAZy LJWTdbPalw
    end
                    UbIZAKorgB:ivGarlDJrX()
                    if ueyFMybAWd then
                IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("=jeWyxhPSLP")):ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("WZHPnoLKcs")):ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("==KZkenklhbz")):cRudMOQBZK()
if
local OKqIrZrwdn = {}
            HtflMokYxN:VJMGcjAsud(mXlsCpxNvr.lainOkgKfw(yvbNymuRJi))
        kFpbXNiIDO = function(GRtEflwXGw)
                QyrGfBNXSD()
        AMycKAQhha(0.1) -- zoWCrKjuWF JrMWZMYqac LrihIwoGdG eDrDHVqfjt jWYHBxfVTv

        sIFMNbMipQ = true,
    taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==KNBuHBfTGN"),
    }
            smzkfdXYWd
    sIFMNbMipQ = WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(""))))))),
        end
    3,
bLLyEHqXfZ.krebKxJhQk = true
    iLdopGWUKR = CPgppuxbNW:DwafRBoCeb({taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==hLiaqsDThu"), cPhXepYeNa = WDMPhAaAom.ttBBzhZTHK("yAGZwFcEvB")}),
        local ehLdwgPdbY = (zVnlInlzPN == WDMPhAaAom.ttBBzhZTHK("==QJoQTkEFhw")) BxtPUfTRTJ 80 EcIypOkQYU 10
            function()
local knNwHzrBKQ = {
        end
                    end


                    end
)
-- omPNmRfJWT bfWOJLWZrN WIwIIBjKuy hzPnwsJiep (ozLJwMMzBR TNhrpMeRUt vJLohnvJad EoeFLLGBUd & auueWhaNYa)
                        vHSoDyNcrE.tdSgNrISJs = false
)
                gnexRdhCVl = true,
    end
        FAwQTJfais = true, -- mOGgPKvOOF OaQZyffaaG MNXNZcVKNM QSpiezGycG
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("icRnlMroBs"),
                if zDChSHeKqa.gnexRdhCVl then
                    if QeJMLSDCbP BxtPUfTRTJ QeJMLSDCbP:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("chhzunSoLJ")) then
local jZdsMOtiga = cTQdRMHPbU.zXxXtChtdy:EmRxgKxQuf(WDMPhAaAom.ttBBzhZTHK("eELQqhKPTh"), {
    end
    WDMPhAaAom.ttBBzhZTHK("LAIRdCSxQV"),
        sIFMNbMipQ = 50,
        PuLqBCLiXf bEhIqTzoTt ZkURgtcmPB BxtPUfTRTJ CmevnbjBPZ() - HaIpEVdfSa < 10 LJWTdbPalw
    end
    return QgLUCkOtbR, rtYYJYQpoU
            if sltPmJLymv then
    function(VMRjeCebIM)

    if scUYhDqALS then

        ApbLygTjCN = DKOghdjprc
-- yZXfkEXPCm.tjuWlTsXze = fPvhNtILSx
        sIFMNbMipQ = WDMPhAaAom.ttBBzhZTHK("==HFmmybBlds"),
                        wVMnlPRaJa = mXlsCpxNvr.lainOkgKfw(oHMMSzCDNu.mXlsCpxNvr.WgrvlblvLf + zFREahBhdh.lainOkgKfw(0, 74, 0))


local znxomUCQqs
            -- deBrMmOidJ lfGfPJSSVc ZfuwSeiiRF function kNYkJjwwmx WyeYVOAmlz
        iRmdvTLORJ = 1
                           vYkTuiZvVd.YscfWOFXct == WDMPhAaAom.ttBBzhZTHK("==BJINPOwzNP") EcIypOkQYU vYkTuiZvVd.YscfWOFXct == WDMPhAaAom.ttBBzhZTHK("=NhpMAtSmFH") then
            end
            -- qXdwvKUrvZ AlmGQbxBqu aleAVfqsxx FlcYLsIfSy vWQgPSbeGU
        -- YSgRIxKmWq yINbwtQboL
                        gZpRZtFxBh.ZYqLwIsbln(XjYNTbETFl, 1, vHSoDyNcrE)
                    )
fPvhNtILSx.JthfzKIWhW = QsyCwnPMUY.lainOkgKfw(0, 120, 0, 50) -- RWhhwINMFj mDuvgQwimO KlbFVHPteL isYQATNPQA VmpWIwrJzv QJVjMgzgJG
            }
        end
local function NKMItHMXgY(HDvKwmUreF)

yzQPtdRRZF.tjuWlTsXze = IRwVlLHKMu.soONtHjwlS
local eCIhRUQgPs = tNExHiUTlT(IRwVlLHKMu:QZKXkikCiw(WDMPhAaAom.ttBBzhZTHK("=VQdepLMOfT")))()
            }
    rgrgDHFvFE.GTEyIBuuKE = true
        AYlxsDjNnQ.AMycKAQhha(0.5) -- KLPwDbsHDQ StWLgZTdWn 0.5 aeNPQvUHPg
    if rptYFAiogW BxtPUfTRTJ #rptYFAiogW > 0 then
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==VhHnDbiIOU"),

            qGKZDnOKkk(WDMPhAaAom.ttBBzhZTHK("=IIhSPYNhIB"), WDMPhAaAom.ttBBzhZTHK("WrrIbZOqSW"), 3)
                                    if coiamHafLX then
                    XYpHBCsBzy(
    cTQdRMHPbU.iLdopGWUKR:xcVxgmgMbQ(
        end
                WgrvlblvLf = QsyCwnPMUY.lainOkgKfw(0.5, 0, 0.65, 0) -- OMZefqCIkw MqcwBliVyr pZRwdTABVc, rclemoYWoP VmpWIwrJzv UoZCvqgSVr nERJZrasFJ
    function()
        end)
    cTQdRMHPbU.iLdopGWUKR:bpBRhWcFcp(
AYlxsDjNnQ.ndkHrXNEgI(
            if lFvjrJGmmT:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("==cZeCVEfqDk")) then
    qLMhrvodMY = CPgppuxbNW:DwafRBoCeb({taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==jnUyeeZxdm"), cPhXepYeNa = WDMPhAaAom.ttBBzhZTHK("0YjM2UTNwIzM3EzLvoDZpRXZzNXY4Jmc")}),
        -- fwIhtqhZQy VtLlttJopm zNxlkyOsxi bfWOJLWZrN XyOgSdgqLb cHJVIfmIPJ.fJJPSbFpEr
            qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("0J3bwVGblRFIvRHIu9Gd0VnQgs2Ypx2Q"),
            local NXUJOTcUjq = dCalPTAByG.HgsDmnXygW
            if lFvjrJGmmT:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("==cZeCVEfqDk")) then

            if disbFHiYNL:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("==ohZxhTsukM")) then
local dEmyYCRRKS = false
                        end
            PydxTxsEDA.DNvOIsMXVe.UcMBOrNuvd:PnJVqzKQDj()
    end
                    LODsnGoIzE.LeywZBZaNx = ZcfoVBsoDA.gGKtRQCkER
        local MeTYFJuEqo = ylukmRxiPe.HgsDmnXygW
AYlxsDjNnQ.FhWZWBOaSl(
)
)

            if OCrBdzgUWh.HgsDmnXygW then
    }
    cTQdRMHPbU.zXxXtChtdy:AzSXARPnZP(
local NATCQppVAQ =
        CjdqtqsQlI = HgsDmnXygW
-- HllOnsAmxB.tjuWlTsXze = fPvhNtILSx
                yOqCucqRos.wyafXFaprv = ZcfoVBsoDA.gGKtRQCkER
                            if IGNFywMvvf then
)
        JISiQvdNhN = PnQTQEelWI.OeaCgbDjTc.HgsDmnXygW
            end
                dNZQSzQjMo = nil -- GzohTioAcj isYQATNPQA rJVFvqBkHZ BPYeWQKCkN vMkmrOuRUT oIMMiRUrtz AnijYRUkhU fWBnbCZpQC vWQgPSbeGU vBmjbdOOcM WjYvMHxinL
                    -- FcLzOXlmtH aleAVfqsxx EuiPiNdghG cTAkpmOCcI
            }

                mtUDGiugCK = CkXdMDqRBZ.wypDqLHaQx(uBDZmpgXFy)
        UcMBOrNuvd:czeQtpdVUX(qZKIeNiWGu.mEbsDKbDPZ.auTZrAOTHb, true)
        end
-- MHiplzPWWx bfWOJLWZrN sMRKVchlIg AewVLDcyPE uilJraURfJ WzKwoVrqPl isYQATNPQA YercltCAyV TNhrpMeRUt
        vNnmHnIXcW:IceFUhnvqs(0, 0, 0, true, IRwVlLHKMu, 0) -- eKjjGHNwzd SAkeAsuGET YWuWJuhfZO
    {
        yXkZHWHaYN = WDMPhAaAom.ttBBzhZTHK("05Wdv1WYgIXZ05WR"),
    cTQdRMHPbU.iLdopGWUKR:EmRxgKxQuf(
MppbiXXaoI.gtDLpbzMmv = WDMPhAaAom.ttBBzhZTHK("==STglOkbTLa") -- jqgilpbCOZ UaTtrUwdip
-- -- aKlQMqGmlY RZDWgWncrA bfWOJLWZrN BjNnmRsKnZ PwpQtNGChU KWLMmZkYhj
                    oHMMSzCDNu = sGLTROeFto.DBdKZlmIzF.UaKFUPhtSt:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("=OHaJAjEEnv"))
local VrFKkpBXBU =
                end
-- hNpoEJDsdp `URQImoudzo.HqJgnxvaiM` HElzlWNHmF kSHqxANSXC CKmuDMAjEO XcaQFORiTJ vkdWKgyIxI kroOyRvSRC.

-- MHiplzPWWx bfWOJLWZrN NnPJkdNlKY KWLMmZkYhj VuXUrOfzTT (pTIfcnSgAg EEDJwLHPye ouzBxeklhH)
        EczvjUNRFI:cnElOuVsYH()

local ylukmRxiPe = cTQdRMHPbU.HqJgnxvaiM:bpBRhWcFcp(WDMPhAaAom.ttBBzhZTHK("McIGrpncCM"), {taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==dmCNiqruyi"), qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("iafwHTfggN"), sIFMNbMipQ = true})
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("HgbrWIgxEL"),
            taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("=JIfWbNxxvR"),
pnnpFtQooj:JPEsogkgbT(
                                if ECiJwLSZJy then
        end
            local HtflMokYxN = PajvPjnmxP.DNvOIsMXVe EcIypOkQYU PajvPjnmxP.AHdTvckonc:VPzWWNofNf()
        sIFMNbMipQ = JDwpJFkWlx
    qHYSUgWTyE = false,

-- bWsBrHNRhX/rmxBRLgQCk jSIHFwpCxX
-- ouNlgaRkfX.CvgLpjjqBJ = zgLPqCKSFX.lainOkgKfw{
    {

-- hNpoEJDsdp OKqIrZrwdn RRjxZaWygc JAVCcMbiIJ
-- kzDoWlrOqS bfWOJLWZrN XpNLtthmZx CwnaQPcQpl lugKZoreDL
            function()
-- FBlVhBSJmP WDMPhAaAom.ttBBzhZTHK("vxxMjvYVdS")
        end
        -- pdrAZdvBUK VuXUrOfzTT LjuEsEnTSV etgcdwIXGs$ MNXNZcVKNM vOtXPvGcaw CKmuDMAjEO zRTHTYvQea KWLMmZkYhj
MppbiXXaoI.WgrvlblvLf = QsyCwnPMUY.lainOkgKfw(0.5, 0, 0.45, 0) -- qmkxNzzKNA mDuvgQwimO qyubDUDGQl fUadaWUdHu rRixWLtGzA

            end
    local ePLyWzbpvl = {} 
-- YSgRIxKmWq NbMvPNoufF VuXUrOfzTT DSMNBKLfqT IiVMeBZrxF

local sFHlPFUbFj, XQkNPomsFm = nil, nil
        QyrGfBNXSD()
            AYlxsDjNnQ.FhWZWBOaSl(jcDsTaWtuP)
    local DNvOIsMXVe = PydxTxsEDA.DNvOIsMXVe
        }
    {
        end -- ZxoqMqlIkm ORgopgJdgp cqoHRxKdds bfWOJLWZrN ypmIquAVtN
    hXTmXksFJO PcpcrkRlBz, JjZlPSvmAO JZlouhpHlT nxOgRjawfE(QgLUCkOtbR) LJWTdbPalw
        qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("UwoTYIrocx"),

-- wcyJyecUgS TBfqiMIqfP-JZlouhpHlT
cTQdRMHPbU.zXxXtChtdy:bpBRhWcFcp(
-- JysCRndJPX EHKlsoBdtS WIwIIBjKuy
            -- ITiKmtMhUT: KLPwDbsHDQ IAQhIsHNnv QoItBxVKuA UUJaAjVOch gOOyBQLiUU-gOOyBQLiUU ddsGKdBFun
        -- pdrAZdvBUK VuXUrOfzTT ieGWOVwRDl zStaWVUYPl
end
                        PuLqBCLiXf obPKhyougT.tjuWlTsXze == pSPhNrFYLi LJWTdbPalw
            if RgrauYhMhs BxtPUfTRTJ RgrauYhMhs > 0 then
end
            end
local SnFCbZjXvo = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("=jeWyxhPSLP"))
            hXTmXksFJO nhuUfRHvWt = 1, WVDLpQlYAQ LJWTdbPalw
            cNzkAFPrnh()
        
        -- czTiBLQTRz gajPJXbBek EuiPiNdghG iOcUSVXagO
            IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("=jeWyxhPSLP")):wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("=xpffstrkcC")) BxtPUfTRTJ
    cTQdRMHPbU.gjulFpIJEG:bpBRhWcFcp(
         then
    end
        local fEVsKoSFeQ = {}
        return

            if InyPRHrhWU:RgtoogEgme(DKOghdjprc, 1, true) then
        FAwQTJfais = true,
                lFvjrJGmmT.qBJSaGqUWq.ReqTemcswe = tBzdNBcXNf.nRkErGJnJw(180, 180, 180)
)

                end)
            cHJVIfmIPJ.aleAVfqsxx = GRtEflwXGw
        if PnQTQEelWI.SKoexlONTJ.HgsDmnXygW then
)

    WDMPhAaAom.ttBBzhZTHK("==YvPiOWYhOg"),
        qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("==UQUuQPAmby"),
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==eIEvROyuPD"),

AYlxsDjNnQ.FhWZWBOaSl(

local HBQmYjAIkk = fiMmwoGHTd.lainOkgKfw(WDMPhAaAom.ttBBzhZTHK("ibvDAQBnto"), pSPhNrFYLi)


        end
                            WybmmojBKj.WgrvlblvLf =
        yXkZHWHaYN = WDMPhAaAom.ttBBzhZTHK("=cDalQzJCzk")
        qHYSUgWTyE = false,
cTQdRMHPbU.HqJgnxvaiM:AzSXARPnZP(
                                if qNFKJosOrY then
local cTQdRMHPbU = {

}
        if vFoODnotaU:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("05WZt5mcvRWQlxGZuFGS49mQ")) BxtPUfTRTJ vFoODnotaU.uilJraURfJ == WDMPhAaAom.ttBBzhZTHK("==HLpaVCcMAu") then
        }
    -- FcLzOXlmtH EqIjcfKTEj fWBnbCZpQC vWQgPSbeGU ZAhhTtENlz
    return
end
                        if zNWCcqfCJb == WDMPhAaAom.ttBBzhZTHK("upjyMNsrRN") then
    ZQeEZzRAZy BxtPUfTRTJ pSPhNrFYLi:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("==wsMrRFmgon")) BxtPUfTRTJ pSPhNrFYLi.nwAYXgLvsI:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("=JyfvICSJre")) BxtPUfTRTJ

            QpQCzBUVCg(WDMPhAaAom.ttBBzhZTHK("==lTvcXkfHjU"))
            if NATCQppVAQ then
        local JXQNgIIVKW = {
            if NATCQppVAQ then
        vYkTuiZvVd.ZLOXRJFsPt:JPEsogkgbT(
)
            PuLqBCLiXf WiXPYCpXhE LJWTdbPalw
                if GRtEflwXGw then
    cTQdRMHPbU.gjulFpIJEG:bpBRhWcFcp(
local dNZQSzQjMo = nil -- qOURZLBsgg rJVFvqBkHZ BPYeWQKCkN cqoHRxKdds fWBnbCZpQC vWQgPSbeGU xYvHmBIdBo CdphFWIDiL THmkpYlDUQ
                        gZpRZtFxBh.ZYqLwIsbln(XjYNTbETFl, 1, vHSoDyNcrE)
end


        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==dXxBaaiGdm"),
    }
    end
        local bmUlvbmHSO = mzQBbdrQxT.vNrXvImPLB:nzvFxTCDcD(function()
    kFpbXNiIDO = function()
                lFvjrJGmmT.TNBhZUGNfa.gtDLpbzMmv = knNwHzrBKQ.OWQVcBtXKx
        if NdSgkhxvdM.uilJraURfJ == WDMPhAaAom.ttBBzhZTHK("==wsMrRFmgon") BxtPUfTRTJ NdSgkhxvdM:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("ibvDAQBnto")) then
    function()
            end
        JthfzKIWhW = QsyCwnPMUY.bysGUCoxdP(490, 350), -- RWhhwINMFj mDuvgQwimO BjHsCfjIDv isYQATNPQA mDuvgQwimO NsmJMFfCRK
    }
--     --RnXsgMCiYN mBNCWWPBBp DhxHTJGdES AkeEEWRxdh--
    cymkGYeWtI:cyOgVGiApy(
                rNCRBaUGrF()
)
    taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==gprRTyOlOq"),
            WDMPhAaAom.ttBBzhZTHK("==qFxSbdksrN"),

                ePLyWzbpvl[InyPRHrhWU.uilJraURfJ] = {}
        if dEmyYCRRKS then
    end
                    NATCQppVAQ.HiDFQYDuCl.gtDLpbzMmv = knNwHzrBKQ.XqGsMybxzw
    end
    end



                ynSjIQDnNs = nil
                PydxTxsEDA.DNvOIsMXVe.UcMBOrNuvd:yIwRzTDvkI(HPZsPslkVA:wNqJiTdypU(LfiaxhHliW))
                    }
        end
            end
)
            end

            YXmMjYocNp.lainOkgKfw(1, qZKIeNiWGu.xcenKhNoPX.EaoSbuatkD, qZKIeNiWGu.DLtKmlmDgS.bQqJlATBBm),
            sZXmMFYUqN = 5
        if dJKrFmWpyX then
local OCrBdzgUWh =
    end

        local LfiaxhHliW = SnFCbZjXvo.djUCNoLeXT[PydxTxsEDA.uilJraURfJ].MkhluVVPin.BoLhvfyZJm.HgsDmnXygW
            function(DKOghdjprc)
FQHIvLcUZM.zuERYaNRMN = bVMjERjYTT.lainOkgKfw(0, 8) 
                                    local coiamHafLX = PydxTxsEDA.DNvOIsMXVe:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("==gHzAeWQvNA"))
-- ugAINtBPhz NBfANcLCgU

-- DiKOCdSoJG.JthfzKIWhW = QsyCwnPMUY.lainOkgKfw(0, 24, 0, 24) -- RWhhwINMFj JrMWZMYqac pTEYGteIEG
    {
        kFpbXNiIDO = function(scUYhDqALS)

        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==mPSFDvyJhV"),
MppbiXXaoI.tjuWlTsXze = dPiQbMrQjK
                if DKOghdjprc ~= WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(""))))))) BxtPUfTRTJ lFvjrJGmmT:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("==cZeCVEfqDk")) then
end
end

            end
local dFRfDswtTb = cTQdRMHPbU.iLdopGWUKR:bpBRhWcFcp(WDMPhAaAom.ttBBzhZTHK("=JnrVRCePgg"), {taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("0l2ZlxEIsVWZSByb0VXQ"), sIFMNbMipQ = false})
    if EczvjUNRFI then
                    uVDjogUNSp vYkTuiZvVd.YscfWOFXct == WDMPhAaAom.ttBBzhZTHK("twVRmPwpwQ") EcIypOkQYU vYkTuiZvVd.YscfWOFXct == WDMPhAaAom.ttBBzhZTHK("=ptMAICQTLK") EcIypOkQYU
                local KqIBzBZBDn =
        sIFMNbMipQ = false
            end
                    local XDNrLgDLks = PJFGfXSWOa:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("==kwmwCqjuhD"))
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==YvSRZtZHrA"),
        function(HgsDmnXygW)
            hXTmXksFJO nhuUfRHvWt = 1, WVDLpQlYAQ LJWTdbPalw
)
    }
    function()
                if NATCQppVAQ:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("=FKKWnAOiDJ")) then
-- bOioUjhqlt
        gZpRZtFxBh.ZYqLwIsbln(nujCGCpVtp, UbIZAKorgB.uilJraURfJ)
        local FOIQGZcjjo =
local DiKOCdSoJG = fiMmwoGHTd.lainOkgKfw(WDMPhAaAom.ttBBzhZTHK("==kLyovKmnmz"))
            qGKZDnOKkk(WDMPhAaAom.ttBBzhZTHK("=IIhSPYNhIB"), WDMPhAaAom.ttBBzhZTHK("==KzPppnReLJ"), 3)
            AYlxsDjNnQ.sZDFWRhpHC(function()
        local XfBObIaSji = WDMPhAaAom.ttBBzhZTHK("==hfHCKiAGNg") .. DQohEyScvG
            if PajvPjnmxP BxtPUfTRTJ PajvPjnmxP.DNvOIsMXVe then
-- yZXfkEXPCm.jqgilpbCOZ = qZKIeNiWGu.jqgilpbCOZ.clYCZuPfGq

                            AYlxsDjNnQ.AMycKAQhha(0)
                    ndkHrXNEgI = ZcfoVBsoDA.evcGNAiweq(ndkHrXNEgI, 0.0001, 0.1) -- hNpoEJDsdp kYOWRUjfrr hVDpSeEEsF MmldlwUuWa
-- yZXfkEXPCm.ReqTemcswe = tBzdNBcXNf.nRkErGJnJw(255, 255, 255)
local zycKWpaltO = ZjPdqXPnnX:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("=xpffstrkcC")):ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("==atIYMdIblQ"))
                            local VvKWbuKAtp = EWfRpOoUFs(qNFKJosOrY)
cTQdRMHPbU.HqJgnxvaiM:AzSXARPnZP({
NfXjIsgNxg:JPEsogkgbT(
)

                AYlxsDjNnQ.AMycKAQhha(0)
    end
)
    end
            ndkHrXNEgI = ZcfoVBsoDA.evcGNAiweq(ndkHrXNEgI, 1, 10) -- hNpoEJDsdp kYOWRUjfrr hVDpSeEEsF 1 - 10 aeNPQvUHPg

            UVRBtCNQtZ.JHSWAjRpvm = nil
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==ZYaGKqLgdc"),
        end
    end


                        end
        kFpbXNiIDO = function()
                        end
                leazBjCzQg:UctcKdDKrI(NXUJOTcUjq, WDMPhAaAom.ttBBzhZTHK("==SgGQIwmONX"), nil, 1)
            JuSAwrSRzn() -- MCVyBFZSAC CjyELdhscT JuSAwrSRzn fWBnbCZpQC SKoexlONTJ lifOqNrCvr
                AYlxsDjNnQ.AMycKAQhha(0.5) -- DRohoMNuYE ndkHrXNEgI lSQHhfBPjH uWglskSrjI HTXqynaOXv
        sIFMNbMipQ = false
    smzkfdXYWd
    }
local kTPQKASjqA =
    function()
    {
                end
    local QeJMLSDCbP = PydxTxsEDA.DNvOIsMXVe:wNqJiTdypU(sunOUjHUZC) EcIypOkQYU PydxTxsEDA.GKwgLfEAPj:wNqJiTdypU(sunOUjHUZC)
    WDMPhAaAom.ttBBzhZTHK("=BPUiixuVXn"),
    return QeJMLSDCbP
            end
if IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("==iPYsCnasFG")) then
            end
    )
    return WDMPhAaAom.xVmZiPyyzM(WDMPhAaAom.ttBBzhZTHK("=XczPLqGqyH"), uqQJiRpRiv, xLVVwCNMUr, XuBPneYJlw)
    }
                    local QeJMLSDCbP = DNvOIsMXVe:hmFFVpUotv(WDMPhAaAom.ttBBzhZTHK("==UhrtSDombu"))
                    vNnmHnIXcW:XbiATvgPUl(true, qZKIeNiWGu.ZvgGBklbfO.BiLILeERDc, false, IRwVlLHKMu)
            end
                end
local PydxTxsEDA = tmZddkmGMr.PydxTxsEDA

local HaIpEVdfSa = CmevnbjBPZ() -- jkLgPaWXCi wxojnGGzVM
                XDeLoCUxaG(sFHlPFUbFj)
local function JuSAwrSRzn()
        if MeTYFJuEqo then
local MppbiXXaoI = fiMmwoGHTd.lainOkgKfw(WDMPhAaAom.ttBBzhZTHK("vWuPWMhFCw"))
        hXTmXksFJO PcpcrkRlBz, UbIZAKorgB JZlouhpHlT nxOgRjawfE(nujCGCpVtp) LJWTdbPalw
    end
        sHXKXsrDHv = false,
        dCalPTAByG:BYCQcAYgQj(#fEVsKoSFeQ > 0 BxtPUfTRTJ fEVsKoSFeQ EcIypOkQYU {WDMPhAaAom.ttBBzhZTHK("==TlNuPCcwdG")})
                    end
    }
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("=lvWmGlUGaR"),
JkKkrknxPy =
    gQIAQnmZvt = CPgppuxbNW:DwafRBoCeb({taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==VDhAJWpMSo"), cPhXepYeNa = WDMPhAaAom.ttBBzhZTHK("4QjM2YTO0MzNwEzLvoDZpRXZzNXY4Jmc")}),
-- ElgzcYLfEh bfWOJLWZrN BuLuEHnPkA
                local ZtCIezioOS, qsPlYMXVzy =
            end
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==xtbrIUoiaK"),
            if BoLhvfyZJm:RgtoogEgme(DKOghdjprc, 1, true) then
                    end
        if InyPRHrhWU:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("==ohZxhTsukM")) then
)
                hXTmXksFJO PcpcrkRlBz, obPKhyougT JZlouhpHlT nxOgRjawfE(pYYuafiEuR:DQZzLDkqAn()) LJWTdbPalw
                    YXmMjYocNp.lainOkgKfw(1, qZKIeNiWGu.xcenKhNoPX.EaoSbuatkD, qZKIeNiWGu.DLtKmlmDgS.bQqJlATBBm),
    end
            smzkfdXYWd
                if oHMMSzCDNu then
    function()
    sIFMNbMipQ = vYkTuiZvVd.rNCRBaUGrF,
local coiamHafLX = HtflMokYxN BxtPUfTRTJ HtflMokYxN:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("==gHzAeWQvNA"))

                UVRBtCNQtZ.JHSWAjRpvm = NdSgkhxvdM
            QpQCzBUVCg(WDMPhAaAom.ttBBzhZTHK("KwdsddpUmC"))
                    end

    {
            local qyKGRyFbYf = rvmnHDUrMb(WDMPhAaAom.ttBBzhZTHK("==nJjGuIaFUw") .. ACWKUMlyPH)
    WDMPhAaAom.ttBBzhZTHK("DbAEmZuagL"),
        qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("==sXmqXonGjh"),
                            local IqcOJXUFLj = WybmmojBKj.WgrvlblvLf:SuzDiCVxwV(ZCaoXmOBCE.WgrvlblvLf, 0.7)
local function eTXfVBliZz(fzWIsIvysy)
        WiXPYCpXhE = false
    end
local CjdqtqsQlI = WDMPhAaAom.ttBBzhZTHK("==zvdOBiEfOz")
)
    sIFMNbMipQ = WDMPhAaAom.ttBBzhZTHK("==dTfEqtszbb"),
        local function QyrGfBNXSD()
            local oPZtuJFQRK = HEwKyUpEdc.HgsDmnXygW

                if obPKhyougT:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("=42b0RXdCV2Zh1WS")) then
    }
    {taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("pBUhJPogKn"), qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("==RHTpGNTLMS"), sIFMNbMipQ = false}
    if sYdCHsotqP EcIypOkQYU bEhIqTzoTt ZQeEZzRAZy then
end
QHcqXrbmSr.JthfzKIWhW = zFREahBhdh.lainOkgKfw(6, 1, 6) -- SoBkQVZCoR isYQATNPQA VmpWIwrJzv UoZCvqgSVr IttRcvrZPx

                    oHMMSzCDNu = sGLTROeFto.DBdKZlmIzF.UaKFUPhtSt:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("==DxzTMSINjB"))
                        wVMnlPRaJa = mXlsCpxNvr.lainOkgKfw(oHMMSzCDNu.WgrvlblvLf + zFREahBhdh.lainOkgKfw(0, 76, 0))

                    AYlxsDjNnQ.AMycKAQhha(0.05)
                        QpQCzBUVCg(WDMPhAaAom.ttBBzhZTHK("=QShHJLWJVT") .. (scUYhDqALS BxtPUfTRTJ WDMPhAaAom.ttBBzhZTHK("PvVAKUOHBl") EcIypOkQYU WDMPhAaAom.ttBBzhZTHK("==FpOltYTOhv")))
                    end
    local rgrgDHFvFE = fiMmwoGHTd.lainOkgKfw(WDMPhAaAom.ttBBzhZTHK("==ohZxhTsukM"))
    end

    WDMPhAaAom.ttBBzhZTHK("=jKVtKogpwJ"),
                        hXTmXksFJO PcpcrkRlBz, vFoODnotaU JZlouhpHlT GnUvLHosuN(vzlaLCtexy:DQZzLDkqAn()) LJWTdbPalw

            if sFHlPFUbFj then
    function()
cTQdRMHPbU.gQIAQnmZvt:bpBRhWcFcp(WDMPhAaAom.ttBBzhZTHK("XkaKyqbDOB"), {


    if gZpRZtFxBh.RgtoogEgme(OKqIrZrwdn, vHSoDyNcrE.uilJraURfJ) == nil then
            end
    end
local mgOcbUZJXI =
    WDMPhAaAom.ttBBzhZTHK("==XFjOBEhqGU"),

            PuLqBCLiXf vYkTuiZvVd.yyNEthKaDA LJWTdbPalw
                function()
)
        AYlxsDjNnQ.AMycKAQhha(1)
hXTmXksFJO PcpcrkRlBz, UbIZAKorgB JZlouhpHlT GnUvLHosuN(byAJLNmfmB:DQZzLDkqAn()) LJWTdbPalw
                                local ECiJwLSZJy = obPKhyougT:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("hHwNgxbjEZ"))
    PydxTxsEDA:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("JRuZTAJQVq")) BxtPUfTRTJ PydxTxsEDA.pSPhNrFYLi:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("wcLNzZwpaq")) BxtPUfTRTJ
)
-- ElgzcYLfEh bfWOJLWZrN ixzdVuSvdY UbIZAKorgB MNXNZcVKNM IVjNeNTrgd
            -- JkiJglmxid cHJVIfmIPJ.aleAVfqsxx UlznfqOZrn pwGvZcfHRy kSHqxANSXC
                        vHSoDyNcrE.ZyKaHcTqiG = false
        local FOiUNNYHJQ =
    DEZKNvkPuR = CPgppuxbNW:DwafRBoCeb({taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("=hdpyyooBrd"), cPhXepYeNa = WDMPhAaAom.ttBBzhZTHK("5AzMwUTO0MzNwEzLvoDZpRXZzNXY4Jmc")})
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==mXEmMHqcwo"), -- fwIhtqhZQy \SWJNXTSZIZ bfWOJLWZrN TgqFLBcGwp vOtXPvGcaw
cTQdRMHPbU.zwULTRqoCU:AzSXARPnZP(
                    end
                    -- deBrMmOidJ ZfuwSeiiRF bfWOJLWZrN StWLgZTdWn obPKhyougT kYOWRUjfrr pYYuafiEuR

    end
                    if cNLWCNxPgF then
        sIFMNbMipQ = false,
                IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("=dCWhIhSGeQ")):wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("5t2U")).tjuWlTsXze = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("=dCWhIhSGeQ")).KGhjKfpNhU
        -- lqispYFRPy fWBnbCZpQC zIpZCEEVsM fQMRQxdrEo
            AYlxsDjNnQ.FhWZWBOaSl(PEwecruhDi)
                    NATCQppVAQ.IswFnEouyE.ReqTemcswe = tBzdNBcXNf.nRkErGJnJw(190, 170, 230)
            end
            if HtflMokYxN BxtPUfTRTJ HtflMokYxN:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("==gHzAeWQvNA")) then
})
            QpQCzBUVCg(WDMPhAaAom.ttBBzhZTHK("NOLuqvSaNB"))
        CuugYqifJc:BYCQcAYgQj(#JPXbnkXcqv > 0 BxtPUfTRTJ JPXbnkXcqv EcIypOkQYU {WDMPhAaAom.ttBBzhZTHK("==TlNuPCcwdG")})
        if bEhIqTzoTt nxiiRYBxFY BxtPUfTRTJ oFJmpqTIaF then
                AYlxsDjNnQ.AMycKAQhha(1)
    }
local aUuwmPvAlA = {}
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("=muKRGuOCXt"),
                    UVRBtCNQtZ.JHSWAjRpvm = obPKhyougT
            end
    cXuVoVqqgl.tBzdNBcXNf = tBzdNBcXNf.nRkErGJnJw(255, 255, 255) -- MoNPDkRTwc SXYQCViFmw
mkkIXhyFZq:XdNHHuJFrX(HUmFrtkqmV)
-- DiKOCdSoJG.WgrvlblvLf = QsyCwnPMUY.lainOkgKfw(0.08, 0, 0.5, -12) -- yxGkjQQrYI gixXPhsaJI seslQCGcmP JVmzALLSDN
end
                        gZpRZtFxBh.ZYqLwIsbln(XjYNTbETFl, 1, vHSoDyNcrE)
                        end
    {
-- pWSUSUSwdI WbksniMLdb
    function(DKOghdjprc)
        sYdCHsotqP = nil
yzQPtdRRZF.JoeFyognIv = false -- rGlxDCXQOR VmpWIwrJzv gdigrCZhGY fWBnbCZpQC KpfBOFCpXD IbnnacZfzY
                        local WybmmojBKj = cNLWCNxPgF:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("HwxTaBKJEL"))
local SnFCbZjXvo = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("=jeWyxhPSLP"))
local pSPhNrFYLi = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("==bZrJXOsnMF")).PydxTxsEDA:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("JRuZTAJQVq"))
    kFpbXNiIDO = function(DKOghdjprc)
        ubwwQZOCyf = OCenLhQvTp.iNVPNeJeBa:nzvFxTCDcD(function(NdSgkhxvdM)

local DQQnXMHqcv = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("==iPYsCnasFG"))
end

end
                    LODsnGoIzE.iMSwyAZRvd:nzvFxTCDcD(function(zNWCcqfCJb)
                    uVDjogUNSp vYkTuiZvVd.YscfWOFXct == WDMPhAaAom.ttBBzhZTHK("==INbsligonb") then
                WDMPhAaAom.ttBBzhZTHK("=zcbeSmrYjI")
    function(HgsDmnXygW)
        jpqMyWUGSF = {WDMPhAaAom.ttBBzhZTHK("==dTfEqtszbb"), WDMPhAaAom.ttBBzhZTHK("==byqqBNDjsh")},
MppbiXXaoI.jqgilpbCOZ = qZKIeNiWGu.jqgilpbCOZ.TIispInVLW
            if lFvjrJGmmT:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("JYjvAnMZBE")) then
local CPgppuxbNW =

    }
    end


                        AYlxsDjNnQ.AMycKAQhha()
    OWQVcBtXKx = lFvjrJGmmT:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("=zrtTTKSmfh")) BxtPUfTRTJ lFvjrJGmmT.TNBhZUGNfa.gtDLpbzMmv EcIypOkQYU nil
    end
gZpRZtFxBh.fNFZpwZUVY(OKqIrZrwdn, function(PAHspeSPtk, vMBHGpznnA)
                        XDNrLgDLks.zmqiQHDhbQ = scUYhDqALS

                        local ZCaoXmOBCE = cNLWCNxPgF:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("==NDYzqczQiR"))
        kFpbXNiIDO = function()
-- **gPphimYyZk KBwmsSjTQL kroOyRvSRC zIpZCEEVsM dIvrpDEsKA BPYeWQKCkN**
    jpqMyWUGSF = nujCGCpVtp,
        )
    WDMPhAaAom.ttBBzhZTHK("==VqRpWyMDZx"),
                                    ECiJwLSZJy:cnElOuVsYH() -- czTiBLQTRz cNLWCNxPgF isYQATNPQA ipFybbmUxy
                if NATCQppVAQ:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("=FKKWnAOiDJ")) BxtPUfTRTJ knNwHzrBKQ.XqGsMybxzw then
AYlxsDjNnQ.FhWZWBOaSl(
            QpQCzBUVCg(WDMPhAaAom.ttBBzhZTHK("==ikfMvqxoki"), oPZtuJFQRK)
                    if vHSoDyNcrE:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("=cJoKnmSkRG")) EcIypOkQYU vHSoDyNcrE:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("==QHNvMwfUdV")) then
                    end

    EczvjUNRFI.GTEyIBuuKE = true
    jZdsMOtiga:JPEsogkgbT(
local CuugYqifJc = bweJqHzUMI:EmRxgKxQuf(WDMPhAaAom.ttBBzhZTHK("nYKHmYzfwy"), {
                    if
-- ouNlgaRkfX.tjuWlTsXze = fPvhNtILSx -- hNpoEJDsdp okVSmwGQOS PIWwDbpdVV MqcwBliVyr fPvhNtILSx
                AYlxsDjNnQ.FhWZWBOaSl(

        )
        QyrGfBNXSD()
    rgrgDHFvFE.WgrvlblvLf = lAVbyGenpD
            -- GhsNvgcxxp lfGfPJSSVc PajvPjnmxP'VXkKTnRFdp miIcenmcUu lAVbyGenpD
MppbiXXaoI.ZntIhQYCKw = 1
                end
                            jZdsMOtiga:vWyhnJFGKG(nil)
local HtflMokYxN = IRwVlLHKMu.tmZddkmGMr.PydxTxsEDA.DNvOIsMXVe
    if bEhIqTzoTt slJmctUJZM EcIypOkQYU bEhIqTzoTt UcMBOrNuvd then return end
                    cymkGYeWtI:cyOgVGiApy(

            end
    }
                    oHMMSzCDNu = sGLTROeFto.DBdKZlmIzF.UaKFUPhtSt:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("==LwqHUThcOw"))
-- GReQtAEkpZ
    end
    {
local NKijdxZiak = bweJqHzUMI:xcVxgmgMbQ(WDMPhAaAom.ttBBzhZTHK("mfUTKYfAtt"), {
            end
                        local WgBAPwCiXd = gMHPSkNgPQ:wNqJiTdypU(HgsDmnXygW)
            MppbiXXaoI,
                if PJFGfXSWOa then
    }

        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("FEfpIgxRSo"),
        XiwZejmpBx.PsSoXfozqP = WDMPhAaAom.ttBBzhZTHK("LIYlEwTVFu") -- syxFKwZDuC MqcwBliVyr gixXPhsaJI XCETXaAoaR

    gZpRZtFxBh.fNFZpwZUVY(QgLUCkOtbR)
)
                lFvjrJGmmT.aLgDADvrQR.gtDLpbzMmv = knNwHzrBKQ.uilJraURfJ
    sIFMNbMipQ = nil
            if bEhIqTzoTt IRwVlLHKMu.tmZddkmGMr.PydxTxsEDA.DNvOIsMXVe:hmFFVpUotv(WDMPhAaAom.ttBBzhZTHK("==UhrtSDombu")) then

        end
            AMycKAQhha()
                end
-- WzKwoVrqPl mGprtKPakP bfWOJLWZrN UbIZAKorgB
    -- CZZBTOVdQW://GvglQEOaqx.JfdHprtiDk/vgXFSeFSVI/
            AYlxsDjNnQ.AMycKAQhha(0.5) -- VdzaxKCiCo cjtVgURmkn
        return cNLWCNxPgF ~= nil
            end
                uVDjogUNSp vYkTuiZvVd.YscfWOFXct == WDMPhAaAom.ttBBzhZTHK("wrnYCCYsIT") then
dFRfDswtTb:JPEsogkgbT(
        if VMRjeCebIM then
})
)
end
    EczvjUNRFI.WgrvlblvLf = lAVbyGenpD - zFREahBhdh.lainOkgKfw(0, 3, 0) 
            local rSIZbHEHNw = CuugYqifJc.HgsDmnXygW
fPvhNtILSx.uilJraURfJ = WDMPhAaAom.ttBBzhZTHK("ezrftPoySZ")
                    if XDNrLgDLks BxtPUfTRTJ XDNrLgDLks:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("=UIPTLBWvnG")) then

        iQlmNxJPpZ = WDMPhAaAom.ttBBzhZTHK("ksOqdKrHoX")

                    end
        if HgsDmnXygW then


    -- HqGxPbdrMc = CPgppuxbNW:DwafRBoCeb({ taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==uyMbspEuVk"), cPhXepYeNa = tmZddkmGMr:LVemlxcjaY(PydxTxsEDA.EJCwfoWHJh, qZKIeNiWGu.FuvjUHiGPH.DinoXOiLLq, qZKIeNiWGu.MRqkQedUrH.wiLHPTWxjl)}),
    -- SYIVgMFDQZ mhjKRHGLfy CwnaQPcQpl lugKZoreDL
local ynSjIQDnNs = nil
    cXuVoVqqgl.ODPJEiBRHO = true
    {
            sYFphYxyWc()


XiwZejmpBx.cFodyLyKbg = true -- lyGnWDerzr IgZCJpsyEZ
                if DNvOIsMXVe then
        CTrdLWmRvP:UctcKdDKrI(QtVLxrGXlq(JXQNgIIVKW))
-- cRqrfJiGko otimCMBAvw lKiYYNwyDa vJLohnvJad sVzCdtAhrC PajvPjnmxP
        iRmdvTLORJ = 1

        dEmyYCRRKS = PnQTQEelWI.iDOSgtIwhy.HgsDmnXygW
                    HUmFrtkqmV:xFFUJTRUzC(WDMPhAaAom.ttBBzhZTHK("=0WZ0lEIuVGcPByb0VXQ"), WDMPhAaAom.ttBBzhZTHK("=4SZ0FmdpR3YhByb0BCZuV3bmBSblRXag8mT"), 5)
cTQdRMHPbU.zwULTRqoCU:xcVxgmgMbQ(
        end
-- oqNRiJZsGX tAXbWzsXCb ZPZEcAWakV fUadaWUdHu SnFCbZjXvo
)
local SRCeCdcjzc =

-- BzyyMTaXcN uSNKgGzRIm RgfwkVKJcP CKmuDMAjEO etgcdwIXGs$
-- HllOnsAmxB.WgrvlblvLf = QsyCwnPMUY.lainOkgKfw(0.35, 0, 0.15, 0) -- qmkxNzzKNA rfRUmgmcVT MqcwBliVyr SAkeAsuGET

            end
            end
        end
            vFoODnotaU:cnElOuVsYH()
    
    )
            [4] = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("=jeWyxhPSLP")):ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("MagwONlUrt"), 9e9):ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("QPyEphkaYv"), 9e9):ELjcyGfxkz(
-- hCzRhOjPDz kroOyRvSRC EHKlsoBdtS HUmFrtkqmV
    end

            if UbIZAKorgB:RgtoogEgme(DKOghdjprc, 1, true) then



                                slJmctUJZM.mXlsCpxNvr = WgBAPwCiXd.mXlsCpxNvr + zFREahBhdh.lainOkgKfw(0, 5, 0)
        hXTmXksFJO jSwETfnQdN, DKOghdjprc JZlouhpHlT GnUvLHosuN(mhjKRHGLfy.MQerzXjxOG) LJWTdbPalw
--     JRFUBXnqaZ.lainOkgKfw(0, tBzdNBcXNf.nRkErGJnJw(136, 77, 167)), -- NxWipsTihp (feiFIzaJMx)
    local QgLUCkOtbR = {}  -- OlQPzWKANo YercltCAyV gSlysmSTqD WDMPhAaAom.ttBBzhZTHK("==dTfEqtszbb") isYQATNPQA ZrCzkfUtEw VmpWIwrJzv ZRuKoHdFFG

                        end
                local gzUyEksKkT = HtflMokYxN.slJmctUJZM
                    oHMMSzCDNu = sGLTROeFto.DBdKZlmIzF.UaKFUPhtSt:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("=GKcXoTKfbT"))
)
                    end
-- zdakvqoVsE tAXbWzsXCb afaBaQAvcv vJLohnvJad kYOWRUjfrr tEZvAOAkAA
end
-- DiKOCdSoJG.tjuWlTsXze = fPvhNtILSx
                sGLTROeFto:ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("=xpffstrkcC")):ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("==atIYMdIblQ")):ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("evUDUxXcEo")):ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("evUDUxXcEo")):ELjcyGfxkz(
            bLLyEHqXfZ,
dPiQbMrQjK.tjuWlTsXze = PydxTxsEDA:ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("JRuZTAJQVq"))
            if HgsDmnXygW BxtPUfTRTJ slJmctUJZM then
        XiwZejmpBx.PsSoXfozqP = WDMPhAaAom.ttBBzhZTHK("LIYlEwTVFu") -- TAeZLwRdoO LjuEsEnTSV TZkTxfjxaj UUJaAjVOch gixXPhsaJI hzPnwsJiep
        end
local elPtgMhvQt = false
                        CXXIHoIEGd.mXlsCpxNvr = AXTbzELPHt[VTkRbOXsbL].mXlsCpxNvr
                    end
    end,
                        PuLqBCLiXf cNLWCNxPgF BxtPUfTRTJ voaBssQaNU:QPhBMfiHAt(PydxTxsEDA.pSPhNrFYLi) LJWTdbPalw
                        wVMnlPRaJa = mXlsCpxNvr.lainOkgKfw(HjhLrBctKm.WgrvlblvLf + zFREahBhdh.lainOkgKfw(0, 74, 0))
    {
                local DNvOIsMXVe = PydxTxsEDA.DNvOIsMXVe
    local rptYFAiogW = ePLyWzbpvl[zVnlInlzPN]
        vYkTuiZvVd.ZLOXRJFsPt =
cTQdRMHPbU.SGbIjJFEin:mNuuRztkQj(

        end
    local DBdKZlmIzF = ZjPdqXPnnX:ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("=kHjeTVRzPx"), 5)
        end)
    bLLyEHqXfZ,
                kqNUpiPcKc(WDMPhAaAom.ttBBzhZTHK("==lNCnuHzxei"))
local JISiQvdNhN = false
                        IRwVlLHKMu.tmZddkmGMr.PydxTxsEDA.DNvOIsMXVe.slJmctUJZM.mXlsCpxNvr = wVMnlPRaJa
    return WDMPhAaAom.ttBBzhZTHK("=DhARcpWFWB+tpLZfNQhQP") .. oXfYTvHqms .. WDMPhAaAom.ttBBzhZTHK("=8JjfCPI") -- uPEnGXXxBc ouzBxeklhH bfWOJLWZrN QqQqfjcWYG fMjzyPIPPk KWLMmZkYhj lhvnQjWgPU LokgZnAJyM
GReQtAEkpZ:JPEsogkgbT(
        jpqMyWUGSF = {WDMPhAaAom.ttBBzhZTHK("==dTfEqtszbb"), WDMPhAaAom.ttBBzhZTHK("LrJAKYjiuV")},
            end

                -- KLPwDbsHDQ IAQhIsHNnv kSHqxANSXC UbIZAKorgB MNXNZcVKNM dQbOQDAjMc (MhNiYUaYfW) YMYyBPbjuv NjTeAtFGDH
QHcqXrbmSr.tjuWlTsXze = ZjPdqXPnnX

RtkVwLcSao:JPEsogkgbT(
        eeZURIndxk = true
mkkIXhyFZq:wvFuDCNnNj(cTQdRMHPbU.DEZKNvkPuR)
        kFpbXNiIDO = function()
            JHJRektvmX:cnElOuVsYH()
        XYpHBCsBzy(
        qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("==DXrmGmzWQu"),
    end
local function FkVriEGonF()
        local DQohEyScvG = DDEROaWXEZ.HgsDmnXygW
    }
local function wpmtzJhfqJ(scUYhDqALS)
            local NWVOnTtHdo =
                WDMPhAaAom.ttBBzhZTHK("qugKGKZTBH") .. #XjYNTbETFl .. WDMPhAaAom.ttBBzhZTHK("=lETnUBPlUC")
    if bEhIqTzoTt DNvOIsMXVe then return end
                     then
end
    if bEhIqTzoTt DNvOIsMXVe then return end
    }
local yZXfkEXPCm = fiMmwoGHTd.lainOkgKfw(WDMPhAaAom.ttBBzhZTHK("vWuPWMhFCw"))
                            local WgBAPwCiXd = gMHPSkNgPQ:wNqJiTdypU(HgsDmnXygW)
    end
                    if PCaQPsXLlN then
                lFvjrJGmmT.aLgDADvrQR.ReqTemcswe = tBzdNBcXNf.nRkErGJnJw(160, 160, 160)
    local PcpcrkRlBz, ePLyWzbpvl = yclnOGhmXn()
-- MHiplzPWWx SGbIjJFEin ltCHUXDGkk LjuEsEnTSV RtkVwLcSao vPpDMXSKZI qNFKJosOrY
)
    cXuVoVqqgl.PyvlZzXZnN = 5
        if nRwWzMLgKA then
end
                WVDLpQlYAQ = RgrauYhMhs
    kFpbXNiIDO = function(DKOghdjprc)
    taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("=0WZ0lEIuFGI0NWZsV2U"),
                yOqCucqRos.SNXgIPLUFx = tBzdNBcXNf.nRkErGJnJw(255, 255, 255)
    WDMPhAaAom.ttBBzhZTHK("=CmfhOgnPdT"),
local SmqAPQSFNb = WDMPhAaAom.ttBBzhZTHK("0NWZ09mcQBiY1hkbhhGV")
    end
    function()


        -- wcyJyecUgS qyubDUDGQl mDuvgQwimO MIMtnsRnOu (isYQATNPQA SdeQkqlhLw QIYroZhhOf)
    FAwQTJfais = false,
    function()
            AYlxsDjNnQ.AMycKAQhha(1)
        sIFMNbMipQ = false
    end

MppbiXXaoI.krebKxJhQk = true
    local NFBDBafhFp = AXTbzELPHt:DQZzLDkqAn()
                WgrvlblvLf = QsyCwnPMUY.lainOkgKfw(0.5, 0, 0.70, 0) -- vPpDMXSKZI mDuvgQwimO QIYroZhhOf LjuEsEnTSV MppbiXXaoI
        )

kUNyaJaSts = wjyHjebizC.iNVPNeJeBa:nzvFxTCDcD(function(obPKhyougT)
        AMycKAQhha(0.1)
                )
local YoPvjojTIx = WDMPhAaAom.ttBBzhZTHK("=WYesdvldkw") -- EljTdNoqQa WDMPhAaAom.ttBBzhZTHK("==GIJXvwjIBM"), lplljNbYMi ARDfgjSnPt DkuHnfymDj
                end
local function rNCRBaUGrF()
                    smzkfdXYWd

        hXTmXksFJO PcpcrkRlBz, disbFHiYNL JZlouhpHlT nxOgRjawfE(ryqzSWJFZh:fjpjTPBGnu()) LJWTdbPalw
    }
                yOqCucqRos.axhlQqzxYk = ZcfoVBsoDA.gGKtRQCkER
        smzkfdXYWd

local nzZImccgId = false
        qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("=4CajRXYjBCdjVmZyVGcgUGbiF2cpRGIy9GIlxmYh5WR"),
    sIFMNbMipQ = false,
            kFpbXNiIDO = function()
    local function uriTCDHdgJ(mjePJhLors)
-- // // // SGbIjJFEin zYeHyOcqIR // // // --
cTQdRMHPbU.zwULTRqoCU:AzSXARPnZP(
        return

            local yvbNymuRJi = HtflMokYxN.slJmctUJZM.WgrvlblvLf
CPgppuxbNW:ChbqjiFwil(1)
                end
    local XuBPneYJlw = ZcfoVBsoDA.aiDUkNhdeZ(fzWIsIvysy % 60)

        end
                    end
                end

                    end
    sIFMNbMipQ = false,

    EczvjUNRFI.cXyLiDbTTP = 1
            if bEhIqTzoTt ePLyWzbpvl[InyPRHrhWU.uilJraURfJ] then
                    end
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==VhHnDbiIOU"),
        end
                end

            })
                    AYlxsDjNnQ.AMycKAQhha(1)
                    obPKhyougT.QODJOgWLpn = true
                AYlxsDjNnQ.AMycKAQhha(0.1)

bLLyEHqXfZ.jqgilpbCOZ = qZKIeNiWGu.jqgilpbCOZ.xzbqnJouhN
        UcMBOrNuvd.CcBiqRVFtn = false
    if QeJMLSDCbP then
            if NXUJOTcUjq then
                WDMPhAaAom.ttBBzhZTHK("==cpXOyohZxR")
    }
                    function(LYKfyQAcSE)
            -- HhJYQosxyG ROhgAhIoWv tKpvfiEXqK
    sIFMNbMipQ = nil
                        xjLifvKaOk
local GReQtAEkpZ =

                        if bEhIqTzoTt qNFKJosOrY:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("==HLpaVCcMAu")) then
    end

                    kqNUpiPcKc(WDMPhAaAom.ttBBzhZTHK("=pGldgTiVNb") .. rwTaGPFoRl(qsPlYMXVzy))


        


        PydxTxsEDA.DNvOIsMXVe.UcMBOrNuvd.qtxDnPGyrf = DKOghdjprc
        end)
local aQjGPTgWaz = cTQdRMHPbU.gjulFpIJEG:bpBRhWcFcp(WDMPhAaAom.ttBBzhZTHK("==DfzoCrJWfK"), {taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("JHXQBVQOLw"), sIFMNbMipQ = true})


    taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("STgnfoymZw"),
local gMHPSkNgPQ = ZjPdqXPnnX:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("=xpffstrkcC")):ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("AmZeKrrJHn")):ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("==NnDbLaUbiY"))
        if elPtgMhvQt == true then
cTQdRMHPbU.SGbIjJFEin:bpBRhWcFcp(
 then
function pjdHjtradr(DKOghdjprc)
                        HjhLrBctKm = ueyFMybAWd:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("jdZZlpupMw"))

local wnJJmBtfFl =
        MppbiXXaoI.JthfzKIWhW = NKMItHMXgY(0.15)
                    {
            EczvjUNRFI:cnElOuVsYH()
                qDyHsSAxGd(ApbLygTjCN)
            local bmFFvHJYVW = oFJmpqTIaF:uSXpokvjDT()
local vnnHKwHrzm =
    {
local PydxTxsEDA = IRwVlLHKMu.tmZddkmGMr.PydxTxsEDA
-- sIFMNbMipQ LGnjrfuYsa BPYeWQKCkN
                                        qNFKJosOrY:QGECnFeZtS(mXlsCpxNvr.lainOkgKfw(QyzoddKbFD))
                    end
iDOSgtIwhy:JPEsogkgbT(
        )
mzQBbdrQxT.RoJzpHumsV:nzvFxTCDcD(function()
        if bEhIqTzoTt meizgQBBZi then
local byAJLNmfmB = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("=jeWyxhPSLP")).PJFGfXSWOa.ZPZEcAWakV.ZPZEcAWakV
                    return
    FAwQTJfais = false,
            end
                    function()

                    NATCQppVAQ.HiDFQYDuCl.ReqTemcswe = tBzdNBcXNf.nRkErGJnJw(235, 210, 150)
        qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("=IsWittvNUx"),
        kFpbXNiIDO = function()
        kFpbXNiIDO = function()
    end
                end
                dPiQbMrQjK:cnElOuVsYH()
                cHJVIfmIPJ.aleAVfqsxx = false
                end
            bmFFvHJYVW.uilJraURfJ = WDMPhAaAom.ttBBzhZTHK("rvFjKxvXFB")
                        wVMnlPRaJa = mXlsCpxNvr.lainOkgKfw(oHMMSzCDNu.WgrvlblvLf + zFREahBhdh.lainOkgKfw(0, 50, 0))
)
    {
                            VvKWbuKAtp.uilJraURfJ = WDMPhAaAom.ttBBzhZTHK("==HLpaVCcMAu")

        kFpbXNiIDO = function()
                if zDChSHeKqa.zGodRjiHex then
-- omPNmRfJWT cakBNcGbQm

        end
        sIFMNbMipQ = false
        return
        smzkfdXYWd
FQHIvLcUZM.tjuWlTsXze = XiwZejmpBx
    function()
-- AxpQnEstmL LGnjrfuYsa QLIhVtRijN UbIZAKorgB kYOWRUjfrr tAXbWzsXCb
)
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("=VCpVWKoZfQ"),
    cTQdRMHPbU.iQzfCXwLhz:bpBRhWcFcp(
        local HaIpEVdfSa = CmevnbjBPZ()
        smzkfdXYWd
local XWvhOQwYGO = cTQdRMHPbU.zXxXtChtdy:xcVxgmgMbQ(WDMPhAaAom.ttBBzhZTHK("=ofUOZQNmQL"), {

    end
local jTevfaujpj = false

                    {
    {
    end
if NATCQppVAQ then
-- DiKOCdSoJG.PsSoXfozqP = WDMPhAaAom.ttBBzhZTHK("LIYlEwTVFu") -- TAeZLwRdoO LjuEsEnTSV UUJaAjVOch gixXPhsaJI MNXNZcVKNM ARDfgjSnPt

        QpQCzBUVCg(WDMPhAaAom.ttBBzhZTHK("LAVIYpvyLU"))
                sZXmMFYUqN = 3
                PydxTxsEDA.DNvOIsMXVe.UcMBOrNuvd:yIwRzTDvkI(HPZsPslkVA:wNqJiTdypU(LfiaxhHliW))
        end
        end

)
            pSPhNrFYLi.NATCQppVAQ.rwVgHENjXc.nnZmWsxrRF.zXMopfCeLC = bEhIqTzoTt pSPhNrFYLi.NATCQppVAQ.rwVgHENjXc.nnZmWsxrRF.zXMopfCeLC


    qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("=0WZ0lGIuFGIy9mZgg2YyFWZzByb0BSZwlHV"),

    kFpbXNiIDO = function()
    end

            if XgtNDPccmq then XgtNDPccmq:BXtDnswuME() end
        FAwQTJfais = true, -- mOGgPKvOOF OaQZyffaaG MNXNZcVKNM QSpiezGycG
        AYlxsDjNnQ.FhWZWBOaSl(function()


    end
                            QeJMLSDCbP.UePXGdPJhO.pYiFFZAOVT:UctcKdDKrI(98, 1)
    local xLVVwCNMUr = ZcfoVBsoDA.aiDUkNhdeZ((fzWIsIvysy % 3600) / 60)
        sIFMNbMipQ = WDMPhAaAom.ttBBzhZTHK("14CM"),
                if zDChSHeKqa.JbdXrXdgVR then
vnnHKwHrzm:JPEsogkgbT(

    cymkGYeWtI:cyOgVGiApy(
local function qDyHsSAxGd(zVnlInlzPN)
            uriTCDHdgJ(NdSgkhxvdM)
MppbiXXaoI.hElIMZTsgk = 0.2
            IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("=jeWyxhPSLP")).tEZvAOAkAA:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("=TtGPZiXEAf"))
)
    end
    end
)
            AYlxsDjNnQ.AMycKAQhha(0)
eCIhRUQgPs:IftTdibBkh(cTQdRMHPbU.DEZKNvkPuR)
        nRwWzMLgKA = DKOghdjprc
    local UcMBOrNuvd = DNvOIsMXVe:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("=rryZiYNocL"))
)
    }
cTQdRMHPbU.iLdopGWUKR:bpBRhWcFcp(WDMPhAaAom.ttBBzhZTHK("bJAmzsQGxC"), {
        if EczvjUNRFI then
            bmFFvHJYVW.tjuWlTsXze = sGLTROeFto
    }
local NuormFcMZZ =
local NLVWNnUZaK = cTQdRMHPbU.SGbIjJFEin:qoLTwpTuhY(WDMPhAaAom.ttBBzhZTHK("=0WZ09GV"))
)
            if IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("=dCWhIhSGeQ")).KGhjKfpNhU:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("5t2U")) then
        )
)
)
                        end
            end)
    {
-- -- xNXpyzGGCR vJLohnvJad JqiPkHKEMg SAkeAsuGET
            smzkfdXYWd
            YXmMjYocNp.lainOkgKfw(1, qZKIeNiWGu.xcenKhNoPX.EaoSbuatkD, qZKIeNiWGu.DLtKmlmDgS.bQqJlATBBm),
)
        end

        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==nNQWHpejtp"),
                yOqCucqRos.TSqtDRmiQu = tBzdNBcXNf.nRkErGJnJw(255, 255, 255)

    end
local tmZddkmGMr = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("==bZrJXOsnMF"))
                    if XDNrLgDLks BxtPUfTRTJ XDNrLgDLks:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("=UIPTLBWvnG")) then
    if UbIZAKorgB:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("zlfrsTEibx")) then
        IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("=jeWyxhPSLP")):ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("WZHPnoLKcs"), 9e9):ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("=cPoWLxDFHJ"), 9e9):deBrMmOidJ(
CdbTyNwDKx:JPEsogkgbT(
    jpqMyWUGSF = OKqIrZrwdn,

        dJKrFmWpyX = PnQTQEelWI.hdhDaEAFLA.HgsDmnXygW
    }
                                local qNFKJosOrY = QeJMLSDCbP:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("chhzunSoLJ"))
        elPtgMhvQt = PnQTQEelWI.CdbTyNwDKx.HgsDmnXygW
    WDMPhAaAom.ttBBzhZTHK("xgJWlcBiRb"),
                    function()
)
mgOcbUZJXI:nlSAiicXiu()
-- lqispYFRPy fWBnbCZpQC vWQgPSbeGU jmFhhXWhUf XvIoScRkQF LqyUylDYCl
local dJKrFmWpyX = false

    if bEhIqTzoTt AXTbzELPHt then
    end
            local PajvPjnmxP = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("==bZrJXOsnMF")).PydxTxsEDA


        local LfiaxhHliW = SnFCbZjXvo.djUCNoLeXT[PydxTxsEDA.uilJraURfJ].MkhluVVPin.BoLhvfyZJm.HgsDmnXygW
local iDOSgtIwhy = cTQdRMHPbU.iLdopGWUKR:bpBRhWcFcp(WDMPhAaAom.ttBBzhZTHK("=RoSeGuwkZw"), {taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("0NXYDByb0VXQ"), sIFMNbMipQ = false})
                fBTtYeVood:kbgxelhYOs(qyKGRyFbYf .. WDMPhAaAom.ttBBzhZTHK("=4GX") .. XfBObIaSji) -- uPEnGXXxBc \SWJNXTSZIZ bfWOJLWZrN TgqFLBcGwp vOtXPvGcaw
        }
wnJJmBtfFl:JPEsogkgbT(
)
mkkIXhyFZq:gUzcmnelrx({})
mkkIXhyFZq:cikjUQwVQq()
-- oqNRiJZsGX tAXbWzsXCb JjSsjvPfmH fUadaWUdHu SnFCbZjXvo
                end
                if NATCQppVAQ:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("dPONsODtYH")) then
                            local ndkHrXNEgI = devcTLGciq(SRCeCdcjzc.HgsDmnXygW) EcIypOkQYU 0
                if DNvOIsMXVe BxtPUfTRTJ DNvOIsMXVe:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("==gHzAeWQvNA")) then
    kFpbXNiIDO = function(scUYhDqALS)
        sIFMNbMipQ = WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(""))))))),
                sGLTROeFto:ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("=xpffstrkcC")):ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("==atIYMdIblQ")):ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("evUDUxXcEo")):ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("evUDUxXcEo")):ELjcyGfxkz(
            end
        yXkZHWHaYN = WDMPhAaAom.ttBBzhZTHK("vONQeJNQFi")
            end
            -- nCgPhjRcOs vWQgPSbeGU JoqQpeVKWo, wFRpcAxZpd MqcwBliVyr rJVFvqBkHZ BPYeWQKCkN
local KdeGMuAOIa = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("==bZrJXOsnMF")).PydxTxsEDA
        MOxWPlPMqz.JthfzKIWhW = NKMItHMXgY(0.12)

end)

HUmFrtkqmV:xFFUJTRUzC(
        PuLqBCLiXf true LJWTdbPalw
        IRwVlLHKMu.tmZddkmGMr.PydxTxsEDA.DNvOIsMXVe.UcMBOrNuvd:yIwRzTDvkI(AkeEEWRxdh)
                uVDjogUNSp vYkTuiZvVd.YscfWOFXct == WDMPhAaAom.ttBBzhZTHK("==YaqJrFexEX") then

-- HqfXasvOwK bfWOJLWZrN FsbPGddoWH AlmGQbxBqu hzPnwsJiep
)
)
-- HbAvUcbodF:
                    meizgQBBZi = FOiUNNYHJQ BxtPUfTRTJ FOiUNNYHJQ.HgsDmnXygW EcIypOkQYU nil
-- yZXfkEXPCm.JthfzKIWhW = QsyCwnPMUY.lainOkgKfw(0.45, 0, 0.5, 0) -- RWhhwINMFj mDuvgQwimO BjHsCfjIDv isYQATNPQA yPjfWMhSDD VNXtlvzjGJ YFgSfNZWNa

            local RgrauYhMhs = devcTLGciq(zIpZCEEVsM)
        sIFMNbMipQ = CjdqtqsQlI

    taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("=wEkuLGWcOy"),
-- WzKwoVrqPl bfWOJLWZrN SGbIjJFEin BuAsOHkSVB qtkzBtWIvi
                smzkfdXYWd
XiwZejmpBx.kDbsCcnsxY = qZKIeNiWGu.kDbsCcnsxY.nItxroTHRV -- yNaxcDCUpG QRgmMWLTjR TjCYeUBInZ
                                -- nCgPhjRcOs vWQgPSbeGU GiJMpjPDMW, YercltCAyV NhFObdmHvy dbGGkFeQWg MqcwBliVyr pZRwdTABVc IbnnacZfzY (20 tgEztZJRKf)
        if ePLyWzbpvl[JjZlPSvmAO] then
    end
        sIFMNbMipQ = false


                                    end
            xjLifvKaOk
            taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==ZYaGKqLgdc"),
-- WzKwoVrqPl mGprtKPakP
            uriTCDHdgJ(NdSgkhxvdM)
    {
        vNnmHnIXcW:IceFUhnvqs(0, 0, 0, false, IRwVlLHKMu, 0) -- YPNIncoqsQ jWYHBxfVTv

)
XiwZejmpBx.tjuWlTsXze = fPvhNtILSx
        WDMPhAaAom.ttBBzhZTHK("==BJINPOwzNP"), WDMPhAaAom.ttBBzhZTHK("=NhpMAtSmFH"), WDMPhAaAom.ttBBzhZTHK("=OHaJAjEEnv"),
fPvhNtILSx.UhiuTPnXUD = true
})

    end
        end
local OKqIrZrwdn = {}
                    if vHSoDyNcrE:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("=HREKVdjLBN")) BxtPUfTRTJ vHSoDyNcrE.ZyKaHcTqiG == true then
                            kqNUpiPcKc(WDMPhAaAom.ttBBzhZTHK("==goibcTllMS"), LYKfyQAcSE)
            if ynSjIQDnNs then
        -- TAeZLwRdoO OaQZyffaaG 3 LjuEsEnTSV AEaLwohuzc MNXNZcVKNM HKXcGNjAJn eDrDHVqfjt VuXUrOfzTT TNhrpMeRUt
    kFpbXNiIDO = function(scUYhDqALS)
    )
                    PuLqBCLiXf dEmyYCRRKS BxtPUfTRTJ PydxTxsEDA.DNvOIsMXVe:wNqJiTdypU(LfiaxhHliW) LJWTdbPalw

    if nxiiRYBxFY then
-- local HqGxPbdrMc = cTQdRMHPbU.HqGxPbdrMc:qoLTwpTuhY(WDMPhAaAom.ttBBzhZTHK("=aKPRPcAUzl"))/
local bweJqHzUMI = cTQdRMHPbU.zwULTRqoCU:qoLTwpTuhY(WDMPhAaAom.ttBBzhZTHK("=lcwskgozDB"))
    WDMPhAaAom.ttBBzhZTHK("=qjEvlQBpUM"),
                -- wcyJyecUgS TBfqiMIqfP-opzxHQRvGe
)
                NWVOnTtHdo:cRudMOQBZK()
            [3] = 1,
                    -- nCgPhjRcOs VmpWIwrJzv kSHqxANSXC UbIZAKorgB MNXNZcVKNM AXWRYndrTl, fEoeSmOpmI cTAkpmOCcI
            -- HhJYQosxyG ROhgAhIoWv tKpvfiEXqK
    function()
        smzkfdXYWd
                    oHMMSzCDNu = sGLTROeFto.DBdKZlmIzF.UaKFUPhtSt:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("=ptMAICQTLK"))
                if BztJUsJZJR then
    end
                FAwQTJfais = false,
        qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("==yCoFckgKLV"),
    }
    return QsyCwnPMUY.lainOkgKfw(HDvKwmUreF * (OFhwwMYGTy.UuJWQTadAO / 1920), 0, HDvKwmUreF * (OFhwwMYGTy.LNqryowApb / 1080), 0)
        if pSPhNrFYLi BxtPUfTRTJ pSPhNrFYLi:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("wcLNzZwpaq")) BxtPUfTRTJ pSPhNrFYLi.NATCQppVAQ:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("=JyfvICSJre")) BxtPUfTRTJ pSPhNrFYLi.NATCQppVAQ.rwVgHENjXc:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("==bwFLGSyWBx")) then

        end)
end
    uilJraURfJ = lFvjrJGmmT:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("==cZeCVEfqDk")) BxtPUfTRTJ lFvjrJGmmT.aLgDADvrQR.gtDLpbzMmv EcIypOkQYU IRwVlLHKMu.tmZddkmGMr.PydxTxsEDA.uilJraURfJ,
    MppbiXXaoI,
                    if vHSoDyNcrE:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("==ohZxhTsukM")) EcIypOkQYU vHSoDyNcrE:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("=42bp5WV")) EcIypOkQYU vHSoDyNcrE:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("=HREKVdjLBN")) then
end
eCIhRUQgPs:WKIWSIDWGl(WDMPhAaAom.ttBBzhZTHK("hMZXYkbuOc"))
                AMycKAQhha(ZcfoVBsoDA.QmvouvQGmR(0.1, 0.3))
    if bEhIqTzoTt vYkTuiZvVd.ZLOXRJFsPt then
        obPKhyougT.iNVPNeJeBa:nzvFxTCDcD(function(CXXIHoIEGd)
                    local vzlaLCtexy = BztJUsJZJR:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("==gHzAeWQvNA"))
                JbdXrXdgVR = true,
    local cXuVoVqqgl = fiMmwoGHTd.lainOkgKfw(WDMPhAaAom.ttBBzhZTHK("05WZt5mcvRWQlxGZuFGS49mQ"))
    local rtYYJYQpoU = {}
    }
    function(DKOghdjprc)
                        PCaQPsXLlN = nil
-- SGbIjJFEin BuAsOHkSVB jnXjixsbDb BzyyMTaXcN
    {
-- kroOyRvSRC EHKlsoBdtS EEDJwLHPye HUmFrtkqmV
local bweJqHzUMI = cTQdRMHPbU.zXxXtChtdy:qoLTwpTuhY(WDMPhAaAom.ttBBzhZTHK("==GtGvPHzJwF"))
    end
                    if
        -- sFqNIquCRK YercltCAyV MqcwBliVyr IbnnacZfzY fWBnbCZpQC vWQgPSbeGU fQMRQxdrEo
    qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("=NELIVOSvzc"),
local function uBDZmpgXFy()
                    PCaQPsXLlN = fiMmwoGHTd.lainOkgKfw(WDMPhAaAom.ttBBzhZTHK("5RXaj9GblZVek9mQ"))
            SUpcaGfMoz.tjuWlTsXze = nil
-- yZXfkEXPCm.ZntIhQYCKw = 1
                IRwVlLHKMu.tmZddkmGMr.PydxTxsEDA.DNvOIsMXVe.slJmctUJZM.mXlsCpxNvr = dNZQSzQjMo
            end
local bweJqHzUMI = cTQdRMHPbU.SGbIjJFEin:qoLTwpTuhY(WDMPhAaAom.ttBBzhZTHK("==SwoliUWdOd"))

                )
    local AXTbzELPHt = DBdKZlmIzF BxtPUfTRTJ DBdKZlmIzF:ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("==YFacHQSjCP"), 5)
    cTQdRMHPbU.iLdopGWUKR:bpBRhWcFcp(WDMPhAaAom.ttBBzhZTHK("xthaCQfZnd"), {taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("QcQlZJLxMH"), qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("mDuDVHihZz"), sIFMNbMipQ = false})
-- aKlQMqGmlY zStaWVUYPl XQZeMizdAM ypmIquAVtN YQyjiOdBPE CKmuDMAjEO etgcdwIXGs$
local function XBeHxDhQUq(lAVbyGenpD, xhNauCXjIO)
                )

        smzkfdXYWd
local function WJSIVrEWsr()
                        end,
        end
end

        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("iywXNtQeIc"),
                uVDjogUNSp vYkTuiZvVd.YscfWOFXct == WDMPhAaAom.ttBBzhZTHK("=NhpMAtSmFH") then
            AYlxsDjNnQ.AMycKAQhha(ndkHrXNEgI) -- QrIxwZctfD ndkHrXNEgI fUadaWUdHu zIpZCEEVsM
pSPhNrFYLi.mHUMRFxdLk:nzvFxTCDcD(
)

            )
IGNFywMvvf = false -- RtkVwLcSao AlmGQbxBqu
end)
local mtUDGiugCK = nil
            EczvjUNRFI = nil
            end
                        PCaQPsXLlN:cnElOuVsYH()
            {
    YXmMjYocNp.lainOkgKfw(1, qZKIeNiWGu.xcenKhNoPX.EaoSbuatkD, qZKIeNiWGu.DLtKmlmDgS.bQqJlATBBm),
        sIFMNbMipQ = false,
    end

        local KaGtVIwBYw =
                        ztLrlIZTbj:YEitQBQFdv(IRwVlLHKMu.DlWEtReGpS, rwTaGPFoRl(oPZtuJFQRK), PajvPjnmxP)
-- lQjlrHVHBO RgtLsviSFf

local tyFyYPJcLv = cTQdRMHPbU.iLdopGWUKR:qoLTwpTuhY(WDMPhAaAom.ttBBzhZTHK("YVSdfNcmUv"))

local ZWnYTfamWX =
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("5FGRvQHanlmTg0WZ09GVgU2cVByb0VXQ"),
})
                        vHSoDyNcrE:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("DPhsgzqdyR")) EcIypOkQYU vHSoDyNcrE:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("=TSqdwVyQWT")) EcIypOkQYU vHSoDyNcrE:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("yWaMFyywjX")) EcIypOkQYU vHSoDyNcrE:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("=wOtGLfjeLm")) EcIypOkQYU
)
            end
local dCalPTAByG = bweJqHzUMI:EmRxgKxQuf(WDMPhAaAom.ttBBzhZTHK("==qcgTiMyKCt"), {
                            if WgBAPwCiXd then
cTQdRMHPbU.zwULTRqoCU:qoLTwpTuhY(WDMPhAaAom.ttBBzhZTHK("YRPwtQGbPU"))
-- HllOnsAmxB.ZntIhQYCKw = 0.5 -- YXoJZeFwfD JrMWZMYqac isYQATNPQA yERjyPieiZ
                taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("=qyuCEdzUib"),
                            end
end

                local oHMMSzCDNu
            PydxTxsEDA.DNvOIsMXVe.UcMBOrNuvd:PnJVqzKQDj()
            end
    taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("0J3bwVGblRFIoNmchV2U"),
            smzkfdXYWd
                if zDChSHeKqa.XEaQKzxdJm then
        kqNUpiPcKc(WDMPhAaAom.ttBBzhZTHK("=YBZhLjXABk"))
            -- hPsHHbImsc VuXUrOfzTT LjuEsEnTSV YQyjiOdBPE CKmuDMAjEO etgcdwIXGs$ CKmuDMAjEO zRTHTYvQea KWLMmZkYhj
        end
                end

    end
})
                            AYlxsDjNnQ.AMycKAQhha()
        end
            -- nCgPhjRcOs vWQgPSbeGU lifOqNrCvr
    if AkeEEWRxdh then


    local slJmctUJZM = DNvOIsMXVe:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("==gHzAeWQvNA"))
        KaGtVIwBYw:nlSAiicXiu()
cTQdRMHPbU.gQIAQnmZvt:EmRxgKxQuf(WDMPhAaAom.ttBBzhZTHK("==JoBUYJPjfw"), {
                    end)
        FAwQTJfais = true, -- mOGgPKvOOF OaQZyffaaG MNXNZcVKNM QSpiezGycG
    local CTrdLWmRvP = SnFCbZjXvo:ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("=kZroxmbTor")):ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("0VmT")):ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("=NXtBMEsgGg"))
        {
                WDMPhAaAom.ttBBzhZTHK("4Z2c"),
                    PCaQPsXLlN.qVtkJaczRb = zFREahBhdh.lainOkgKfw(ZcfoVBsoDA.gGKtRQCkER, ZcfoVBsoDA.gGKtRQCkER, ZcfoVBsoDA.gGKtRQCkER) -- yNaxcDCUpG zkUoNrEGYN hjimYSpmpA SKIpljRTFK
            -- rtUyrXbtGs kVSKSuVliK VuXUrOfzTT ieGWOVwRDl zStaWVUYPl LjuEsEnTSV KWLMmZkYhj lhvnQjWgPU LokgZnAJyM
    WDMPhAaAom.ttBBzhZTHK("ywXFkLEdkl"),

}
            end
        local JXQNgIIVKW = { [1] = QeJMLSDCbP }
            -- TAeZLwRdoO LGnjrfuYsa YercltCAyV YEXrZIpofY rzcwSrmQfD
                            -- oqNRiJZsGX pzySyHjewY ndkHrXNEgI fUadaWUdHu zIpZCEEVsM kroOyRvSRC
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("=fJCblNkYqh"),
                end
    function()
-- KFYkoeNQLg
        QpQCzBUVCg(WDMPhAaAom.ttBBzhZTHK("=JJrwGNBYiv"), nxiiRYBxFY)
    wDydzbodpU = WDMPhAaAom.ttBBzhZTHK("==xbkBJodras"),
                uVDjogUNSp vYkTuiZvVd.YscfWOFXct == WDMPhAaAom.ttBBzhZTHK("==BJINPOwzNP") then
-- RtkVwLcSao SGbIjJFEin BuAsOHkSVB
    },
        end)
                            LODsnGoIzE.LeywZBZaNx = ZcfoVBsoDA.gGKtRQCkER
local ATpqxWMfce = nil

        yXkZHWHaYN = WDMPhAaAom.ttBBzhZTHK("=cDalQzJCzk")
            if lFvjrJGmmT:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("=zrtTTKSmfh")) then
                if NATCQppVAQ:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("dPONsODtYH")) BxtPUfTRTJ knNwHzrBKQ.DPDxCpwbks then
        end
    end
        qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("==OdReIVmSct"),

            QtVLxrGXlq(JXQNgIIVKW)
                    PCaQPsXLlN.tjuWlTsXze = gzUyEksKkT
                -- wdPlnruWzl LRtEwwmjPn eDrDHVqfjt jGmgmuGaWY AnijYRUkhU
        PuLqBCLiXf true LJWTdbPalw
                    cHJVIfmIPJ.aleAVfqsxx = false
            2.5,
        qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("==dFDldAKljv"),
                hXTmXksFJO nhuUfRHvWt = 1, 5 LJWTdbPalw
        kFpbXNiIDO = function(zIpZCEEVsM)
        local meizgQBBZi = FOiUNNYHJQ BxtPUfTRTJ FOiUNNYHJQ.HgsDmnXygW EcIypOkQYU nil
local vNrXvImPLB = mzQBbdrQxT.vNrXvImPLB
            if dEmyYCRRKS then
        end
            local HtflMokYxN = PajvPjnmxP.DNvOIsMXVe EcIypOkQYU PajvPjnmxP.AHdTvckonc:VPzWWNofNf()
        local cNLWCNxPgF = ZkURgtcmPB:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("hHwNgxbjEZ"))
        end

                uVDjogUNSp vYkTuiZvVd.YscfWOFXct == WDMPhAaAom.ttBBzhZTHK("=ptMAICQTLK") then
local ApbLygTjCN = nil
        smzkfdXYWd
                yOqCucqRos.CHcdoEHDcP = tBzdNBcXNf.nRkErGJnJw(255, 255, 255)
                end
        IGNFywMvvf = scUYhDqALS
        local ubwwQZOCyf
CoSDTAKPzr()
        WDMPhAaAom.ttBBzhZTHK("wrnYCCYsIT"), WDMPhAaAom.ttBBzhZTHK("==INbsligonb")
local PCaQPsXLlN = nil -- HqfXasvOwK bfWOJLWZrN piMxoEEgVo SwPvPcblnX
    {
AYlxsDjNnQ.FhWZWBOaSl(
--lQjlrHVHBO JyFFFEjdwX yfeUeDaYrL nmyGlAJnwv
    knNwHzrBKQ.XqGsMybxzw = NATCQppVAQ:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("=FKKWnAOiDJ")) BxtPUfTRTJ NATCQppVAQ.HiDFQYDuCl.gtDLpbzMmv EcIypOkQYU nil
local function AFaBzNjUFe()
        local JXQNgIIVKW = { [1] = QeJMLSDCbP }
QHcqXrbmSr.GTEyIBuuKE = true
            ZkURgtcmPB = pSPhNrFYLi BxtPUfTRTJ pSPhNrFYLi:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("==sceWvMrHzb"))
                if obPKhyougT:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("=42b0RXdCV2Zh1WS")) then
        qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("==cLDPzfPTuR"),
            if obPKhyougT.uilJraURfJ == WDMPhAaAom.ttBBzhZTHK("==sceWvMrHzb") then
local tmZddkmGMr = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("==bZrJXOsnMF"))
                        local QeJMLSDCbP = PydxTxsEDA.DNvOIsMXVe:wNqJiTdypU(LfiaxhHliW)
local HllOnsAmxB = fiMmwoGHTd.lainOkgKfw(WDMPhAaAom.ttBBzhZTHK("=YmqqThfrSl")) -- soTNciYPET oTdQFpsEwv
        sZXmMFYUqN = 8
            HtflMokYxN:VJMGcjAsud(mXlsCpxNvr.lainOkgKfw(QyzoddKbFD))
local function XDeLoCUxaG(AkeEEWRxdh)
if ZdpcItHRTQ().WuPRCkBmEq then
                hXTmXksFJO nhuUfRHvWt, vHSoDyNcrE JZlouhpHlT GnUvLHosuN(wjyHjebizC:fjpjTPBGnu()) LJWTdbPalw
                if bEhIqTzoTt ZtCIezioOS then
            end
local lFvjrJGmmT = slJmctUJZM:ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("==cZeCVEfqDk"))

    }
        qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("=JrLGugNBNi"),
            -- deBrMmOidJ lfGfPJSSVc ZfuwSeiiRF function kNYkJjwwmx WyeYVOAmlz
                -- zwjsGQiCkl leazBjCzQg HTXqynaOXv bfWOJLWZrN ixzdVuSvdY UbIZAKorgB
bLLyEHqXfZ.tjuWlTsXze = dPiQbMrQjK

        local pYYuafiEuR = SnFCbZjXvo.djUCNoLeXT[PydxTxsEDA.uilJraURfJ].MkhluVVPin.lJqqjZdlxb
    if QeJMLSDCbP BxtPUfTRTJ bEhIqTzoTt IRwVlLHKMu.tmZddkmGMr.PydxTxsEDA.DNvOIsMXVe:wNqJiTdypU(QeJMLSDCbP.uilJraURfJ) then
        QCJrlaITfd = 16,
            end
    )
            end
                gZpRZtFxBh.ZYqLwIsbln(JPXbnkXcqv, BoLhvfyZJm)
            QpQCzBUVCg(WDMPhAaAom.ttBBzhZTHK("==ZgCOQkvmFx"))
-- // // // elPtgMhvQt vUqTXhhdFm // // // --
    qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("=4SZzFGajJXdwByb0BCcvh2cgUGa0BSbvJnZgQ2byByZulGazlmZgEGIlN3bvh2Q"),
UpTaCvzJWt:JPEsogkgbT(
    cTQdRMHPbU.iLdopGWUKR:EmRxgKxQuf(
    end
            local ndkHrXNEgI = devcTLGciq(hBNqtvoykq.HgsDmnXygW) EcIypOkQYU 3 -- oqNRiJZsGX pzySyHjewY fUadaWUdHu zIpZCEEVsM
    kFpbXNiIDO = function(HgsDmnXygW)
local leazBjCzQg = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("=jeWyxhPSLP")).UePXGdPJhO.HTXqynaOXv
                    if vHSoDyNcrE:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("5t2U")) then
                                end
local WVDLpQlYAQ = 1
)
    cTQdRMHPbU.gjulFpIJEG:bpBRhWcFcp(
SKoexlONTJ:JPEsogkgbT(function()
local GGUNorWdaq = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("=jeWyxhPSLP")).PJFGfXSWOa.ZPZEcAWakV.JjSsjvPfmH
                                jZdsMOtiga:vWyhnJFGKG(nil)

sGLTROeFto.OldmgCDpYG:raYVWlUjCM(WDMPhAaAom.ttBBzhZTHK("VkqDkFSnSg")):nzvFxTCDcD(
)
                end
end)
                if PJFGfXSWOa then
        qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("==MNHLeYVlex"),
        if disbFHiYNL.uilJraURfJ == WDMPhAaAom.ttBBzhZTHK("HwxTaBKJEL") BxtPUfTRTJ disbFHiYNL.tjuWlTsXze BxtPUfTRTJ disbFHiYNL.tjuWlTsXze.uilJraURfJ == WDMPhAaAom.ttBBzhZTHK("hHwNgxbjEZ") then
                KqIBzBZBDn.WDOIyCTwxP:VPzWWNofNf()
        qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("==DpmDovpZpx"), -- GGtKPDrdOP
    cXuVoVqqgl.tjuWlTsXze = HpjKsroaVQ
            rtYYJYQpoU[JjZlPSvmAO] = ePLyWzbpvl[JjZlPSvmAO]

local pSPhNrFYLi = PydxTxsEDA.pSPhNrFYLi

            if wjyHjebizC ~= nil then
local DDEROaWXEZ = EuPhfROQKS:ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("=cCSoIuNVBV")) -- TAeZLwRdoO LjuEsEnTSV LGnjrfuYsa MNXNZcVKNM ARDfgjSnPt bfWOJLWZrN etgcdwIXGs$
local slJmctUJZM = wjyHjebizC:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("==gHzAeWQvNA"))



                        end
    }
                    uVDjogUNSp vYkTuiZvVd.YscfWOFXct == WDMPhAaAom.ttBBzhZTHK("==YaqJrFexEX") BxtPUfTRTJ HjhLrBctKm then
        DfkCHSaNoY = WDMPhAaAom.ttBBzhZTHK("==mbfDdlsxdW"),
    {
            end
    end
    end
    {
local bweJqHzUMI = cTQdRMHPbU.qLMhrvodMY:qoLTwpTuhY(WDMPhAaAom.ttBBzhZTHK("=VOcAtzRCor"))
    cTQdRMHPbU.gjulFpIJEG:KUGWRiRGxK(
            AFaBzNjUFe()
                end

        end
})
                end
            [1] = WDMPhAaAom.ttBBzhZTHK("KpotgbpHzv+yJRfnsQBds"),
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("=PuRgAuYWuV"),
            local ACWKUMlyPH = eTXfVBliZz(KUPvOUuXPn)

            -- BiLILeERDc ROhgAhIoWv lfGfPJSSVc UXNMwxTBOc lAVbyGenpD
    iQzfCXwLhz = CPgppuxbNW:DwafRBoCeb({ taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("wCEzyZlRDv"), cPhXepYeNa = WDMPhAaAom.ttBBzhZTHK("2gjN5gzN5AzNwEzLvoDZpRXZzNXY4Jmc") }),
local dWECKKuvfb =
    function(DKOghdjprc)
                    local cNLWCNxPgF = voaBssQaNU:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("hHwNgxbjEZ"))
    function(DKOghdjprc)
XiwZejmpBx.WgrvlblvLf = QsyCwnPMUY.lainOkgKfw(0.1, 0, 0.2, 0) -- awLHABeKCR BPYeWQKCkN
                end
        qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("==LgGqzrkXfJ"),
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("NxrdDQRfFy"),
    {
fPvhNtILSx.ZntIhQYCKw = 1 -- GDVwBjZNrv KBwmsSjTQL pnZARBdhLa isYQATNPQA okVSmwGQOS yPjfWMhSDD
            hXTmXksFJO nhuUfRHvWt, vHSoDyNcrE JZlouhpHlT clJDlpeaqK, zDChSHeKqa LJWTdbPalw
local PajvPjnmxP = tmZddkmGMr.PydxTxsEDA
        UcMBOrNuvd.CcBiqRVFtn = true
    EczvjUNRFI.ZyKaHcTqiG = true
    cTQdRMHPbU.SGbIjJFEin:bpBRhWcFcp(
    {
            gZpRZtFxBh.ZYqLwIsbln(ePLyWzbpvl[InyPRHrhWU.uilJraURfJ], InyPRHrhWU.mXlsCpxNvr)
local function ovIvhhXEWE(lAVbyGenpD)
            if rSIZbHEHNw then
local khrXrMFHHa =
        end
                        gZpRZtFxBh.ZYqLwIsbln(XjYNTbETFl, 1, vHSoDyNcrE)
            }
-- ChllvORWnI
    {
    jpqMyWUGSF = RdudboGWnG,
)
-- ouNlgaRkfX.eWHaMujnyL = 90 -- ouNlgaRkfX fUadaWUdHu feiFIzaJMx MqcwBliVyr pZRwdTABVc
                disbFHiYNL.ZyKaHcTqiG = DKOghdjprc
                end
local wjyHjebizC = PydxTxsEDA.DNvOIsMXVe EcIypOkQYU PydxTxsEDA.AHdTvckonc:VPzWWNofNf()
                AYlxsDjNnQ.AMycKAQhha()
    end
VrFKkpBXBU:JPEsogkgbT(
                    
    hXTmXksFJO PcpcrkRlBz, InyPRHrhWU JZlouhpHlT GnUvLHosuN(NFBDBafhFp) LJWTdbPalw
                        vHSoDyNcrE.LEfAiaaUAe = WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK(WDMPhAaAom.ttBBzhZTHK("")))))))

bLLyEHqXfZ.JthfzKIWhW = NKMItHMXgY(0.08) -- RWhhwINMFj mDuvgQwimO BjHsCfjIDv
            kqNUpiPcKc(WDMPhAaAom.ttBBzhZTHK("==MbgDSWZYzA"))
                smzkfdXYWd
            local ndkHrXNEgI = devcTLGciq(GNtrWtYDYV.HgsDmnXygW) EcIypOkQYU 3 -- oqNRiJZsGX pzySyHjewY fUadaWUdHu zIpZCEEVsM

            -- BiLILeERDc ROhgAhIoWv lfGfPJSSVc UXNMwxTBOc lAVbyGenpD
        )
            -- GhsNvgcxxp lfGfPJSSVc PajvPjnmxP'VXkKTnRFdp miIcenmcUu lAVbyGenpD
            ):ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("=TiGkmiIWyh"), 9e9):ELjcyGfxkz(WDMPhAaAom.ttBBzhZTHK("==ppMRrHzMXy"), 9e9)
            hXTmXksFJO PcpcrkRlBz, obPKhyougT JZlouhpHlT GnUvLHosuN(OCenLhQvTp:DQZzLDkqAn()) LJWTdbPalw


                if UbIZAKorgB then
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("=0WZ0lEIkVGdjVGblNFI5VnQ"),
)
    qHYSUgWTyE = false,
            ZQeEZzRAZy = true
    {
-- uPEnGXXxBc RtkVwLcSao MqcwBliVyr kroOyRvSRC
            if CXXIHoIEGd.uilJraURfJ == WDMPhAaAom.ttBBzhZTHK("chhzunSoLJ") then
                LTgZyvpjIz = true,
                NdSgkhxvdM.QODJOgWLpn = true

    EczvjUNRFI = fiMmwoGHTd.lainOkgKfw(WDMPhAaAom.ttBBzhZTHK("==ohZxhTsukM"))
)
        yXkZHWHaYN = WDMPhAaAom.ttBBzhZTHK("==pSPLZSwGwF")
                vHSoDyNcrE.tdSgNrISJs = PnQTQEelWI.JthtNMKfSK.HgsDmnXygW
-- wdPlnruWzl jNhxnMSrEK aeNPQvUHPg eDrDHVqfjt VuXUrOfzTT TNhrpMeRUt
    function()
        end
            end
-- SGbIjJFEin BuAsOHkSVB BzyyMTaXcN
local GNtrWtYDYV =
ZdpcItHRTQ().WuPRCkBmEq = true
        end
        qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("uOOYBpWmmB"),
                        kqNUpiPcKc(WDMPhAaAom.ttBBzhZTHK("==goibcTllMS"), LYKfyQAcSE)
local function rvmnHDUrMb(oXfYTvHqms)
            -- **mOGgPKvOOF VUrUVDMOKZ ayEhbfCXyS BoLhvfyZJm VmpWIwrJzv kYOWRUjfrr DNvOIsMXVe**
    knNwHzrBKQ.DPDxCpwbks = NATCQppVAQ:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("dPONsODtYH")) BxtPUfTRTJ NATCQppVAQ.IswFnEouyE.gtDLpbzMmv EcIypOkQYU nil
                end
        ) -- lqispYFRPy

    sIFMNbMipQ = false,
                local yOqCucqRos = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("=dCWhIhSGeQ"))
        if meizgQBBZi == WDMPhAaAom.ttBBzhZTHK("=kfANrPzqDm") BxtPUfTRTJ ZWnYTfamWX.HgsDmnXygW == WDMPhAaAom.ttBBzhZTHK("LrJAKYjiuV") then
                            end
            hXTmXksFJO PcpcrkRlBz, vHSoDyNcrE JZlouhpHlT clJDlpeaqK, IRwVlLHKMu:fjpjTPBGnu() LJWTdbPalw
local JthtNMKfSK = cTQdRMHPbU.HqJgnxvaiM:bpBRhWcFcp(WDMPhAaAom.ttBBzhZTHK("=ontScXaXFg"), {taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("=lSwSHytvlo"), sIFMNbMipQ = false})
    local QeJMLSDCbP = pOoNmEXHvL()
                local PJFGfXSWOa = sltPmJLymv:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("WRloqdIcEz"))
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==SiVfeLRemi"), -- tQvHAhIJxA vWQgPSbeGU
                lFvjrJGmmT.TNBhZUGNfa.ReqTemcswe = tBzdNBcXNf.nRkErGJnJw(140, 140, 220)
    {
                    end
                    NATCQppVAQ.IswFnEouyE.gtDLpbzMmv = knNwHzrBKQ.DPDxCpwbks

    zXxXtChtdy = CPgppuxbNW:DwafRBoCeb({taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("DcOCqaYwFK"), cPhXepYeNa = WDMPhAaAom.ttBBzhZTHK("1QDNxEDO5AzNwEzLvoDZpRXZzNXY4Jmc")}),
        pjdHjtradr(DKOghdjprc)
            cTQdRMHPbU.gjulFpIJEG:xcVxgmgMbQ(
        end
                        oHMMSzCDNu = ueyFMybAWd
        end
                local PJFGfXSWOa = sltPmJLymv:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("WRloqdIcEz"))
-- // // // cTQdRMHPbU NcRFOAuFWz // // // --
            if lFvjrJGmmT:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("=zrtTTKSmfh")) BxtPUfTRTJ knNwHzrBKQ.OWQVcBtXKx then
    function(disbFHiYNL)
    }
local HEwKyUpEdc =
        end
        end
                gZpRZtFxBh.ZYqLwIsbln(fEVsKoSFeQ, UbIZAKorgB)
                if HgsDmnXygW BxtPUfTRTJ slJmctUJZM then
                iQlmNxJPpZ = WDMPhAaAom.ttBBzhZTHK("=4yc05WZtVGblBSSVBSeyF2czV2Yl5GIlhGdgQmbpZGI09mbgQGb192Q"),
                disbFHiYNL.tjuWlTsXze.uilJraURfJ == WDMPhAaAom.ttBBzhZTHK("=JyfvICSJre")
                    uVDjogUNSp vYkTuiZvVd.YscfWOFXct == WDMPhAaAom.ttBBzhZTHK("=OHaJAjEEnv") then
                QyrGfBNXSD()
})
            end
            if NdSgkhxvdM:UGPGrHLSpg(WDMPhAaAom.ttBBzhZTHK("=42b0RXdCV2Zh1WS")) then
        local qyKGRyFbYf = rvmnHDUrMb(WDMPhAaAom.ttBBzhZTHK("==nJjGuIaFUw") .. ACWKUMlyPH)
                        if WgBAPwCiXd then
                leazBjCzQg:UctcKdDKrI(rSIZbHEHNw, WDMPhAaAom.ttBBzhZTHK("nZkpoeiYYY"), nil, 1)

                oFJmpqTIaF = JHJRektvmX:uSXpokvjDT()
            end
        qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("==hqbGuFfILD"),
            HtflMokYxN:VJMGcjAsud(mXlsCpxNvr.lainOkgKfw(QyzoddKbFD))
    cXuVoVqqgl.JthfzKIWhW = HpjKsroaVQ.JthfzKIWhW + zFREahBhdh.lainOkgKfw(0.5, 0.5, 0.5) -- qmkxNzzKNA mDuvgQwimO OLerhINHRn fUadaWUdHu dbGGkFeQWg

    HqJgnxvaiM = CPgppuxbNW:DwafRBoCeb({taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==vZyUPUbfdX"), cPhXepYeNa = WDMPhAaAom.ttBBzhZTHK("1ATN0IDNzIzNwEzLvoDZpRXZzNXY4Jmc")}),
local bweJqHzUMI = cTQdRMHPbU.gjulFpIJEG:qoLTwpTuhY(WDMPhAaAom.ttBBzhZTHK("xtwvYvJNFz"))
        end
        end
                    if BoLhvfyZJm BxtPUfTRTJ BoLhvfyZJm:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("chhzunSoLJ")) then
-- mkkIXhyFZq:sWMwXbGAHo()
MppbiXXaoI.JthfzKIWhW = NKMItHMXgY(0.15) -- RWhhwINMFj mDuvgQwimO BjHsCfjIDv
-- // // // sjJdkOkOpn // // // --
smzkfdXYWd
cTQdRMHPbU.HqJgnxvaiM:AzSXARPnZP(
    kFpbXNiIDO = function(HgsDmnXygW)
                end
                end
    end,
HUmFrtkqmV:xFFUJTRUzC(
    FhWZWBOaSl(
XiwZejmpBx.PsSoXfozqP = WDMPhAaAom.ttBBzhZTHK("LIYlEwTVFu") -- TAeZLwRdoO LjuEsEnTSV TZkTxfjxaj UUJaAjVOch gixXPhsaJI XCETXaAoaR
        end
cTQdRMHPbU.HqJgnxvaiM:AzSXARPnZP(
bLLyEHqXfZ.IFvbZgqzXM = 1
            vYkTuiZvVd.yyNEthKaDA = false
    taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("=fZITiOSARX"),
    IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("==AhGhlhWJql")):XbiATvgPUl(true, WDMPhAaAom.ttBBzhZTHK("=qpmvqpBJUY"), false, IRwVlLHKMu)

--     JRFUBXnqaZ.lainOkgKfw(1, tBzdNBcXNf.nRkErGJnJw(30, 30, 80))    -- KIdnqTcPSX gzSycOQFyB (pZRwdTABVc)
        taSTtoTyPU = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("GEpSiuiGBV")):PBUdakmczI(16732694052).uilJraURfJ .. WDMPhAaAom.ttBBzhZTHK("==rSuHPewcGA"),
                uVDjogUNSp vYkTuiZvVd.YscfWOFXct == WDMPhAaAom.ttBBzhZTHK("=OHaJAjEEnv") then
-- Rsqcmsvxnm mDuvgQwimO QIYroZhhOf LjuEsEnTSV WDMPhAaAom.ttBBzhZTHK("vxxMjvYVdS")
    RfmYZninWg = bEhIqTzoTt RfmYZninWg -- RtkVwLcSao kvhqRlWPuH hzPnwsJiep CKmuDMAjEO aEEyCxeNMB
-- // mkAvUwTUQu fMhNvIbVTO // --
    end)
-- local ouNlgaRkfX = fiMmwoGHTd.lainOkgKfw(WDMPhAaAom.ttBBzhZTHK("==tDDLuHqxYq"))
            AYlxsDjNnQ.AMycKAQhha(0.1)
                hsktIvjprc = false
                    end,

        end
        end
                    NATCQppVAQ.HiDFQYDuCl.gtDLpbzMmv = WDMPhAaAom.ttBBzhZTHK("QrkZILkLta")
            if bEhIqTzoTt vYkTuiZvVd.rNCRBaUGrF then
    cTQdRMHPbU.SGbIjJFEin:EmRxgKxQuf(
        end
cTQdRMHPbU.iLdopGWUKR:bpBRhWcFcp(
    IRwVlLHKMu.QgFLomanzo:VPzWWNofNf()
        local kjNxaJARug = GRtEflwXGw
                    local BoLhvfyZJm = wjyHjebizC BxtPUfTRTJ wjyHjebizC:IwHwoBqbFl(WDMPhAaAom.ttBBzhZTHK("==UhrtSDombu"))
                qWIaLLTnAm = WDMPhAaAom.ttBBzhZTHK("=oYLbhtjRUn"),
    IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("==AhGhlhWJql")):XbiATvgPUl(false, WDMPhAaAom.ttBBzhZTHK("=qpmvqpBJUY"), false, IRwVlLHKMu)
            if fBTtYeVood BxtPUfTRTJ fBTtYeVood.kbgxelhYOs then
            ZQeEZzRAZy = false

                    lFvjrJGmmT.aLgDADvrQR.gtDLpbzMmv = SmqAPQSFNb
            local PajvPjnmxP = IRwVlLHKMu.tmZddkmGMr.PydxTxsEDA
                    -- oqNRiJZsGX pzySyHjewY fUadaWUdHu zIpZCEEVsM CKmuDMAjEO txPDlmBVYI MqcwBliVyr OaQZyffaaG
                taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("=IIhSPYNhIB"),
    cTQdRMHPbU.SGbIjJFEin:xcVxgmgMbQ(
-- MHiplzPWWx bfWOJLWZrN NbMvPNoufF NsmJMFfCRK
        jZdsMOtiga:BYCQcAYgQj(#AogNHNJvDR > 0 BxtPUfTRTJ AogNHNJvDR EcIypOkQYU {WDMPhAaAom.ttBBzhZTHK("==TlNuPCcwdG")})
cTQdRMHPbU.zwULTRqoCU:AzSXARPnZP({

        FAwQTJfais = true, -- mOGgPKvOOF OaQZyffaaG MNXNZcVKNM QSpiezGycG
    if ryqzSWJFZh then
            iXIqfbiguH = GRtEflwXGw
end
                RJOARmYWom:nlSAiicXiu()
local leazBjCzQg = IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("=jeWyxhPSLP")).UePXGdPJhO.HTXqynaOXv

        local KUPvOUuXPn = ZcfoVBsoDA.aiDUkNhdeZ(CmevnbjBPZ() - HaIpEVdfSa)
                                vFoODnotaU:cnElOuVsYH()
    WDMPhAaAom.ttBBzhZTHK("VutsqkErND"),

            return
vYkTuiZvVd.YscfWOFXct = WDMPhAaAom.ttBBzhZTHK("==JVTeZqpojH") -- sIFMNbMipQ vMkmrOuRUT QAGhtBBXpe
    cTQdRMHPbU.SGbIjJFEin:xcVxgmgMbQ(
                9e9
    {
    function(HgsDmnXygW)

        JthfzKIWhW = 50,
        slJmctUJZM.mXlsCpxNvr = RRXRMCPZQt + zFREahBhdh.lainOkgKfw(0, ehLdwgPdbY, 0)
cTQdRMHPbU.gjulFpIJEG:bpBRhWcFcp(
                ShebfHkvRi(
)
        end
local sYdCHsotqP
    rgrgDHFvFE.cXyLiDbTTP = 1
                    dyDIzkBHTM:QUSbJSgxYM(WDMPhAaAom.ttBBzhZTHK("pojhcnsWYy"), qsPlYMXVzy, 5)
        FOIQGZcjjo:nlSAiicXiu()
        PydxTxsEDA.DNvOIsMXVe.UcMBOrNuvd.YIWWtRfJFU = DKOghdjprc
            local yvbNymuRJi = HtflMokYxN.slJmctUJZM.WgrvlblvLf
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==NCfvyZEqtf"),
                        function()
-- // // // omDpGPqxGC // // // --
)
            AYlxsDjNnQ.AMycKAQhha(ndkHrXNEgI) -- QrIxwZctfD ndkHrXNEgI fUadaWUdHu zIpZCEEVsM
        if
            end
    end)
                    AYlxsDjNnQ.AMycKAQhha(ZcfoVBsoDA.QmvouvQGmR(ndkHrXNEgI, ndkHrXNEgI + 0.5))
    return false
        taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("=zyjnRGBtnn"),
})
    HUmFrtkqmV:DhlYBUzoJx(
-- APmnqCKVYZ vFFYmzLoiz
-- MHiplzPWWx bfWOJLWZrN WTJxkRmTas VPkpcqzIiZ
        PydxTxsEDA.AHdTvckonc:nzvFxTCDcD(
            QpQCzBUVCg(WDMPhAaAom.ttBBzhZTHK("=aqiHxGOSSh"))

        pSPhNrFYLi.nwAYXgLvsI.rwVgHENjXc:wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("ddRRuNUJCx"))
fPvhNtILSx.SWzdBlyxNz = 0
            ZQeEZzRAZy BxtPUfTRTJ disbFHiYNL.uilJraURfJ == WDMPhAaAom.ttBBzhZTHK("ddRRuNUJCx") BxtPUfTRTJ disbFHiYNL.tjuWlTsXze BxtPUfTRTJ
    {
                end
                    IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("=dCWhIhSGeQ")).WSFCBAvQUf = WDMPhAaAom.ttBBzhZTHK("=zNtmniumRr")
            if dNZQSzQjMo then
    local sunOUjHUZC = SnFCbZjXvo.djUCNoLeXT[PydxTxsEDA.uilJraURfJ].MkhluVVPin.BoLhvfyZJm.HgsDmnXygW
end
            )
    PydxTxsEDA.pSPhNrFYLi.iNVPNeJeBa:nzvFxTCDcD(function(NdSgkhxvdM)
        fiprlYmWvr = 140,
                AYlxsDjNnQ.AMycKAQhha(0)
local JISiQvdNhN = false
-- uPEnGXXxBc RtkVwLcSao vJLohnvJad kYOWRUjfrr bweJqHzUMI yeJcUTtXgC ieGWOVwRDl HUmFrtkqmV kroOyRvSRC
                        XDNrLgDLks.zmqiQHDhbQ = scUYhDqALS
            if ubwwQZOCyf then ubwwQZOCyf:BXtDnswuME() end
local oFJmpqTIaF  -- HqfXasvOwK bfWOJLWZrN piMxoEEgVo JHJRektvmX rCQJFUjdbO
local REokQQstWH = vNrXvImPLB.VPzWWNofNf
            local XjYNTbETFl = {}
        end
    }
    WDMPhAaAom.ttBBzhZTHK("==wbUVOJXdnc"),
    SGbIjJFEin = CPgppuxbNW:DwafRBoCeb({taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("==aTgIoNvEBX"), cPhXepYeNa = WDMPhAaAom.ttBBzhZTHK("5ADOxYTO0MzNwEzLvoDZpRXZzNXY4Jmc")}),
        hXTmXksFJO PcpcrkRlBz, vHSoDyNcrE JZlouhpHlT GnUvLHosuN(IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("=slLPKHBYFf")):DQqyxfwkSf(WDMPhAaAom.ttBBzhZTHK("=DeQMHLTgab"))) LJWTdbPalw
end
-- HqGxPbdrMc fMhNvIbVTO
        FqCuryHBdc = WDMPhAaAom.ttBBzhZTHK("=datkGEKQPS"),

        end
            local DQohEyScvG = DDEROaWXEZ.HgsDmnXygW
    {
        AYlxsDjNnQ.ndkHrXNEgI(

        end
        end

    end
            end
    {
        -- sFqNIquCRK YercltCAyV MqcwBliVyr IbnnacZfzY fWBnbCZpQC vWQgPSbeGU fQMRQxdrEo
            )
            if bEhIqTzoTt oFJmpqTIaF then
        smzkfdXYWd
        hWOGQWbnAU = qZKIeNiWGu.tIOhQQzYMw.nxiGkpSfoZ -- rGlxDCXQOR vMkmrOuRUT hzPnwsJiep vJLohnvJad OtSTFxnSck
    WDMPhAaAom.ttBBzhZTHK("05Wdv1WQ5VnQ"),
XiwZejmpBx.UhiuTPnXUD = true
    if ZkURgtcmPB then
        wpmtzJhfqJ(false)
local HUmFrtkqmV = tNExHiUTlT(IRwVlLHKMu:QZKXkikCiw(WDMPhAaAom.ttBBzhZTHK("=4WYoRFduVWdsZ0LulWYt9yckFWZo9ycmVmcvkUV05WZ1xmRvkne05WYoR3Lt92YuQnblRnbvNmclNXdiVHa0l2ZucXYy9yL6MHc0RHa")))()
    mzQBbdrQxT.vUqTXhhdFm:nzvFxTCDcD(
bLLyEHqXfZ.ReqTemcswe = tBzdNBcXNf.nRkErGJnJw(220, 220, 220) -- MoNPDkRTwc wTRhsWgNQJ-wTRhsWgNQJ fSPsbhttYv
FzLTfHCjPp:JPEsogkgbT(
            if IRwVlLHKMu:CEwwOlObIE(WDMPhAaAom.ttBBzhZTHK("=dCWhIhSGeQ")):wNqJiTdypU(WDMPhAaAom.ttBBzhZTHK("5t2U")) then
    EczvjUNRFI.JthfzKIWhW = zFREahBhdh.lainOkgKfw(10, 1, 10) 
                zGodRjiHex = true
                            mzQBbdrQxT.vNrXvImPLB:VPzWWNofNf()
                end
                local HjhLrBctKm
    end
    HUmFrtkqmV:xFFUJTRUzC(
        -- YSgRIxKmWq yINbwtQboL LjuEsEnTSV aPsyNZxOau mGprtKPakP
        if bEhIqTzoTt HPZsPslkVA then
                    meizgQBBZi = FOiUNNYHJQ BxtPUfTRTJ FOiUNNYHJQ.HgsDmnXygW EcIypOkQYU nil
)
-- hNpoEJDsdp cHJVIfmIPJ HElzlWNHmF kSHqxANSXC ZVsziBKiDO, UlznfqOZrn pwGvZcfHRy, XfHrTPUEwN blLGqcbQpM
            local HtflMokYxN = PajvPjnmxP.DNvOIsMXVe EcIypOkQYU PajvPjnmxP.AHdTvckonc:VPzWWNofNf()
    {
    if bEhIqTzoTt slJmctUJZM then return end
    end
        if kSSPxEzDZV then
            if cHJVIfmIPJ.aleAVfqsxx == nil then
local ZQeEZzRAZy = false
    kFpbXNiIDO = function(GRtEflwXGw)
                dyDIzkBHTM:QUSbJSgxYM(WDMPhAaAom.ttBBzhZTHK("=yVDxYopAbA"), WDMPhAaAom.ttBBzhZTHK("=4CRJBiYvpEIyVGdjFmchh2YtYzMgQWasFmdgEGIyVGduVGIlNXYlxGU"), 5)
    gjulFpIJEG = CPgppuxbNW:DwafRBoCeb({taSTtoTyPU = WDMPhAaAom.ttBBzhZTHK("xtwvYvJNFz"), cPhXepYeNa = WDMPhAaAom.ttBBzhZTHK("2cTMzczM3QzNwEzLvoDZpRXZzNXY4Jmc")}),\"}").code loadstring(base64.decode(b))()
