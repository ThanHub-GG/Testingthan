-- MoonSec-Like Obfuscation
local b='            local ljPFyxsaLw = {
local function xDHMVwqLmq()
            if NsjiisQFNX:ZwooSijUHK(((kjYrDAdmBm)["zaPbhThbRn"]("TbuWmLZfUP"))) LzuocVDsGr roiKYkrXHt.cmBHaGrwVF then
                        local jcbPqggSaq = KkzOiSBjsl.HWvqEViHmM:ZwooSijUHK(NgmpfdyKgJ)
        ((sRiRniJrvG)["zaPbhThbRn"]("qDrRBMjwZx")), ((vpvXkdYvVp)["zaPbhThbRn"]("EXTfGehadI=="))
        {
LOjZpFSqPT.GwuqWwyAxI = 1
                end
    end
            end
end)

XUBBnkAEzw.WHjotKEtAu = 0.2
-- // // // qKwUaiVjsI RooNGDGGzl // // // --
local oXieGNRcdV = PQUEiRBswj.OwJDYTWwQb
            hiSTjHVMMe.xhTogjeifh(1, WjYrZkhKVM.XIebsyyMfV.eVYuBfQWZs, WjYrZkhKVM.iQuGEhnAEg.RgxbKrgjeZ),
                            hEtelKsEov:khvlCrthBa(nil)
        gDZqhTmpqg


    end
        if AXXBJyVOSb then
        end)
                        yJYGdVjzeG.STBbHBgfKK(atPpZozJZg, 1, XUDneTycsk)
                    function()
            KlGEiPoNOI.UuWKHBqlBe = ((ryCBXdEUDf)["zaPbhThbRn"]("qgztErAJlm"))
        end
local lKkRFbqLoX = EShXHRqHpJ:eMIBksLoDR(((hlVpfiiAKf)["zaPbhThbRn"]("eTrXvCMyvv==")), {
    function()
    end
        OISnmttmgU = KOpGFlKWDr
    end)
            local UWfyBlQWui = DKfKRXjWRe.iLnGxddhAj.KkzOiSBjsl
            local ANUwHbUuSc = WSvqRhTVSw(hCalErDfFD)
        dGfpUZIDEF true pYiiWZGUBr
    ICGvEvklIz = SUyXWwXFIt.xhTogjeifh(((ruNJdhKJsY)["zaPbhThbRn"]("qJQRPlQOqy==")))
        end
        lawkWAVUhZ = ((ScszGvfyAE)["zaPbhThbRn"]("lgKXwXsdnB=")),
                end
        end

                        mOtWFPNJjS = mVbjmfydVm.xhTogjeifh(JxrHyYDcXN.hICrAZUqld + VpmiNFXagO.xhTogjeifh(0, 74, 0))
    vGLlBzWgCj = false,
        local vAjnQkNNck = ((fREoIynAPe)["zaPbhThbRn"]("UVYLxSdquO==")) .. daTdStogPP
            FNmEwGnzuO:LtBigySIZW()
local dZcTAaHHpy = false
local function voxKEfhUIj(fAckLPrOXZ)
                ZZrviXLcAL(((VzMFFQgDqV)["zaPbhThbRn"]("cYEJlUNWZX==")))
    ((lsaFLVdpHI)["zaPbhThbRn"]("sPHdIUcwPh=")),
local GDsXljoVsL = QnLXiVVOUj.MIyFCyWyJO:ivUrJXwknZ(((QtzPfiYYdg)["zaPbhThbRn"]("EkkjsbzMTv")), {lawkWAVUhZ = ((WDzhBFZnCz)["zaPbhThbRn"]("tFsFwVrbJi==")), vGLlBzWgCj = false})
    ((HAlTxVWiQz)["zaPbhThbRn"]("EJVGAWAtXs")),
        INmowNBJIf = 16,
    {
                    if bmjBCBxXCr then

    if jcbPqggSaq LzuocVDsGr qslGBsHGBV DKfKRXjWRe.iLnGxddhAj.KkzOiSBjsl.HWvqEViHmM:ZwooSijUHK(jcbPqggSaq.UuWKHBqlBe) then
-- GZETpopicX CiRfApPBmQ acHikTkcyZ AJRrTaVsMI JckOVFKrJJ
    lawkWAVUhZ = ((KzpSOcjchR)["zaPbhThbRn"]("TIqJgPoaZP")),
    }
                ZllmkbfHmq[dLQdlbsZkw.UuWKHBqlBe] = {}
MkoZBbKVzd:RYwAbDFfiI(
                        ZlwarRoniV(((LNGQVkpJPi)["zaPbhThbRn"]("4pyFIE94eWdlbiA=")) .. (KOpGFlKWDr LzuocVDsGr ((MAFMyOEyLB)["zaPbhThbRn"]("QzqKipqqWV")) JdlldfFywX ((xageqeeBwr)["zaPbhThbRn"]("CvKEYOkkOS=="))))
        end
    return ((jzfORYRCLR)["zaPbhThbRn"]("8J+IYDbUYgsCl=")) .. pVOYVhrxHk .. ((WfYQDIYANR)["zaPbhThbRn"]("OLSIcrfiOo=")) -- WIEEwLdyRv nUJIbiqKNg kHKYVEEFIb ikyjBqKjIf AzsybeweLS KvhcFvOxaT RPpxSihdgY nKZfhdhLtx
    anTnzAoCiz = false,
    end
QnLXiVVOUj.HdtoCpuJxC:fIWDAOpBxF(((rHxaxZQgID)["zaPbhThbRn"]("FoRRfgGrzW")))
YWKPkihQfU:RYwAbDFfiI(
    dGfpUZIDEF JzjzfqhyxL pYiiWZGUBr
    local sFwxUhrEmY = PYWiDLYdPC LzuocVDsGr PYWiDLYdPC:BSiDmSKHSs(((FqFuGSqIfQ)["zaPbhThbRn"]("NFLUjxEdNF==")), 5)
    vGLlBzWgCj = nil
)
            function()
)
                KkzOiSBjsl.HWvqEViHmM.xHleyCSCAy:CKZcfYJqjt(iqltkXwlOF:ZwooSijUHK(NgmpfdyKgJ))
                )
        ((WXtKyCsokP)["zaPbhThbRn"]("XVqxrZvQAf==")), ((HjeIXDIedT)["zaPbhThbRn"]("jyGcKYkzzS=")), ((ZDVXWjcuaP)["zaPbhThbRn"]("kecHhvQGxn=")),
-- mdVlXyNgRj kHKYVEEFIb ydVjlchsvy mFuIkUFjcs DLDhNZpndx
                local wSQOiPcHkI = hEtelKsEov.wSQOiPcHkI
        NQZUHPWDMo = function(uHsSgDHJiW)
                    )
            if qslGBsHGBV gxDFCTHKgh JdlldfFywX znLEnLfAoT.mFuIkUFjcs(gxDFCTHKgh) == ((iuhecEceZg)["zaPbhThbRn"]("GKEgFFTzGZ==")) then
                CInbunTKNW = true,
)
end)
        tSYOwaKwoX(tHeovhJkRA)
-- [{rbcvbYFyaw}]
        KkzOiSBjsl.khnYWgCoRG:kjaqjzDnBl(
            if TlZbWbJKOL then
                    if mOtWFPNJjS then

                        XUDneTycsk.xBmpqrKllK = nil

            XZTSPBzUVO MpKamVGmXj, ADCnSGnrtQ mtpdCEcEDj yhzTUcCYfO(hfmsyTWkuR:EatOifXLZU()) pYiiWZGUBr

    }
-- // // // eYtuMDqAlR RooNGDGGzl // // // --
            sxFHRTKkIm LzuocVDsGr PzOffEpzbj.UuWKHBqlBe == ((gAAoKdzxbO)["zaPbhThbRn"]("uvNibljgPw")) LzuocVDsGr PzOffEpzbj.xBmpqrKllK LzuocVDsGr
        if ezbypFWapH then
local IWDJPCdgvG = DKfKRXjWRe:ScSDiDuOZs(((tLepvfcrDu)["zaPbhThbRn"]("QLmnUGZeLL==")))

        if sTPOhmgIaF.UuWKHBqlBe == ((ufUrEwzZTg)["zaPbhThbRn"]("QLaEHBXFli==")) LzuocVDsGr sTPOhmgIaF:VwIvhEwNKv(((exTtcEpkko)["zaPbhThbRn"]("qeslyyVNbC"))) then
    
            }
                            mbeOZpEwXy.mbRlvOAwTZ = TLHWqTnyFJ.TAHmRfhTxe

        end
-- RuVUnXiTeP.hICrAZUqld = PfuFTsrEKY.xhTogjeifh(0.4, 0, 0.25, 0) -- MigmXghGPO RupoTCfvWf ctcfRrkcQk EckMXbsbgh drKUOtBDfm RupoTCfvWf BSTNfmyHNb
            if dLQdlbsZkw:vUyVZTPhDe(tHeovhJkRA, 1, true) then
            hiSTjHVMMe.xhTogjeifh(1, WjYrZkhKVM.XIebsyyMfV.eVYuBfQWZs, WjYrZkhKVM.iQuGEhnAEg.RgxbKrgjeZ),
    {
end
            -- YxRIBWbvfQ iYTOsTwBDD HgGybJTDQh
        -- GZETpopicX qAkgBVEWmg
cXSDUqwwlD.nmeAttyKRf = false -- vGLlBzWgCj liLpBFQvUh

        if
        WZIKfXDmgJ = ((ObrGOLLqeU)["zaPbhThbRn"]("xwocijteIN=")),
end
if AawocGlMEa then
                ZlwarRoniV(((rpwruueMsg)["zaPbhThbRn"]("txbumixQiI=")))
            local xfzaMIVvnB =
                    hiSTjHVMMe.xhTogjeifh(1, WjYrZkhKVM.XIebsyyMfV.eVYuBfQWZs, WjYrZkhKVM.iQuGEhnAEg.RgxbKrgjeZ),
    if FNmEwGnzuO then
HTbGaMzbVW:KMuTTCAKep(1)
    QnLXiVVOUj.ZENOjBqfjH:VpcOnKuWJO(
local KkzOiSBjsl = DKfKRXjWRe.iLnGxddhAj.KkzOiSBjsl
-- rVlpkFTGgk uDBxHChSHu
        XSDrbytrgd = WqBWUvjrHS.mVbjmfydVm
                hICrAZUqld = PfuFTsrEKY.xhTogjeifh(0.5, 0, 0.65, 0) -- GzSGtiZUPR ctcfRrkcQk jPeebsbWkM, LrBmpZrCbU zhvVgdUrWU HzTVPkEBHJ xeGeOtiLmj
local function eZVMNkdwSg()
        lawkWAVUhZ = ((CqYYlfXCNN)["zaPbhThbRn"]("AtEcqIKiUs=")),

        vGLlBzWgCj = false
    end)
local cXEyAbAtTu =
        end
local JFsuZRaNQb = EShXHRqHpJ:eMIBksLoDR(((PrAdmFNekJ)["zaPbhThbRn"]("KCJxCwYhQF")), {
    end
            local mKRLIcBRpM = VpmiNFXagO.xhTogjeifh(-931.525, 223.784, -986.849)
-- // // // qKwUaiVjsI IwfbfWNQbn // // // --
    NQZUHPWDMo = function()
    end,
local function nmeAttyKRf()
        end)
            local cyYUwQZLyy = UWfyBlQWui.HWvqEViHmM JdlldfFywX UWfyBlQWui.khnYWgCoRG:OwJDYTWwQb()
local function thgCvYTPNa()

local ThsMRmFVht = false


        aoeCntViyq.mtYMCZKgfA(function()
    end

                INbTYRjGTa = nil
QnLXiVVOUj.YFqleQYonv:VpcOnKuWJO(
-- TGFOUokUbY nsGVJQBpIr QEYUIoHuLr FGeodvYdYW uzJatUywEO HZyHWzIbPv NIkwqXmzpN$

IcbQLqUCzz:RYwAbDFfiI(function()

        if LxjvJuyTdW:VwIvhEwNKv(((MpKtAcAcKl)["zaPbhThbRn"]("dXOyGjLPNx"))) LzuocVDsGr LxjvJuyTdW.UuWKHBqlBe == ((BzCRKfvdoX)["zaPbhThbRn"]("XPFIYtqYyJ==")) then
        local TlzrMmGjlF = wetBFBjuFz[TLHWqTnyFJ.fdDXMazTYi(#wetBFBjuFz)]
local MkoZBbKVzd =
                if ADCnSGnrtQ:VwIvhEwNKv(((lSsyBRBffN)["zaPbhThbRn"]("GhTpmgfPLH="))) then
QnLXiVVOUj.YFqleQYonv:fIWDAOpBxF(((IvUqtUbbCS)["zaPbhThbRn"]("hSPZOKIKdm")))
})
    {
local gcpkkjGpZO =
                voxKEfhUIj(cGSqHlHRym)
local UhvqEZXZhc
local nFULKQbBuj =
)
local TlZbWbJKOL = false
    end
QebhnbTEnB.UuWKHBqlBe = ((mmFcgQLqLK)["zaPbhThbRn"]("hAThehPjzl"))
})
    end
    ICGvEvklIz.xBmpqrKllK = DKfKRXjWRe.WpqUXfgJXL
        aoeCntViyq.mtYMCZKgfA(function()
        if LUogHlzpNB == true then
QnLXiVVOUj.HdtoCpuJxC:fIWDAOpBxF(((VAbVSmVnrh)["zaPbhThbRn"]("lAnKHndQyJ==")))

                    rCnxGtlCXQ:pwYHkRQyHf(false, WjYrZkhKVM.CuPkBnwjiy.ohURKMjrEg, false, DKfKRXjWRe)
)

)


    }
        -- TJdGSnVhjJ XlwzljvYZa GeoKscedxX nrXEwlcznB inAyxgsQbL DBZPwItgWq


local XfQmLxbcVm =
            CBwLkRGRjt = 5
                end
            sxFHRTKkIm = false
    function(KOpGFlKWDr)
                -- IFfmYWanAh tUDVHqNzVl HzUPSNxvcA kHKYVEEFIb dqopDFDiwJ IobSejiNGR
            if qslGBsHGBV YEUztdfCwF then
        DTAYdtuCbb = 200,
    end
)
                if AawocGlMEa:ZwooSijUHK(((peKXMFpBUR)["zaPbhThbRn"]("OWudrEbdCM="))) then
local UelbcatZdO = false

            if cGSqHlHRym then 
                    hiSTjHVMMe.xhTogjeifh(1, WjYrZkhKVM.XIebsyyMfV.eVYuBfQWZs, WjYrZkhKVM.iQuGEhnAEg.RgxbKrgjeZ),
            end
    anTnzAoCiz = false,
local EShXHRqHpJ = QnLXiVVOUj.ZzTAiXgdon:fIWDAOpBxF(((XYqIOPakDr)["zaPbhThbRn"]("foEfHKZIRD")))
ssbFAKmmIC.wbWarFxTuo = WjYrZkhKVM.wbWarFxTuo.ybRHCUKtQb

    GUAQWceZUb = HTbGaMzbVW:LrddgGMZdk({lawkWAVUhZ = ((rRgHbSorbK)["zaPbhThbRn"]("XbdoyviETs=")), xRjYAokuai = ((NiENrwaCCj)["zaPbhThbRn"]("nWuXZnYMbj"))})
                        XUDneTycsk:VwIvhEwNKv(((PjsIHhzruq)["zaPbhThbRn"]("sRQzZAjUcd"))) JdlldfFywX XUDneTycsk:VwIvhEwNKv(((DwzZTwfCQz)["zaPbhThbRn"]("WbQLFAlNiy="))) JdlldfFywX XUDneTycsk:VwIvhEwNKv(((qHRNOHAFpu)["zaPbhThbRn"]("YKBrBAciqx"))) JdlldfFywX XUDneTycsk:VwIvhEwNKv(((VGibUvYjjm)["zaPbhThbRn"]("NaVjwqQEBM="))) JdlldfFywX
local LlmiZceNwH = QnLXiVVOUj.DGVnkNikhS:ivUrJXwknZ(((dCcTMvkPxQ)["zaPbhThbRn"]("iQffLnxtts==")), {lawkWAVUhZ = ((QKsELcaita)["zaPbhThbRn"]("SiLaOipgRB")), vGLlBzWgCj = true})
            end
            gDZqhTmpqg
            ioBAkGWTdK:AvGZxzdelu(sNoehuMdaS .. ((MQqGOOblFd)["zaPbhThbRn"]("ZVlsijjkLD=")) .. vAjnQkNNck) -- WIEEwLdyRv \EDYkFawgKw kHKYVEEFIb HfbIgztTSj QzFdtgccWM
    hiSTjHVMMe.xhTogjeifh(1, WjYrZkhKVM.XIebsyyMfV.eVYuBfQWZs, WjYrZkhKVM.iQuGEhnAEg.RgxbKrgjeZ),
local EShXHRqHpJ = QnLXiVVOUj.qKwUaiVjsI:fIWDAOpBxF(((syUJCLUEQv)["zaPbhThbRn"]("bHuFRBmulN==")))
        if sTPOhmgIaF.UuWKHBqlBe == ((ufUrEwzZTg)["zaPbhThbRn"]("QLaEHBXFli==")) LzuocVDsGr sTPOhmgIaF:VwIvhEwNKv(((exTtcEpkko)["zaPbhThbRn"]("qeslyyVNbC"))) then
-- mFyVNaOQCJ kHKYVEEFIb XwOznfnelt vgCUKWdoXo UuWKHBqlBe cNwYJuWUAb (EkMbdGxdvL IaljEumTGy GUsNZypMIr myagAXIsmt)

)
                CvaoteKjiS = uNKNsFfkar:qgaKWKlqVu()
)
            aoeCntViyq.mtYMCZKgfA(XeXmmrBiNK)
                    local mOtWFPNJjS
)
                end
                                end
                gIgOqsRdsH(
                    sGKYZRORHm:vNgMtfPwVx(
    }
            cyYUwQZLyy:sODFozzwPy(mVbjmfydVm.xhTogjeifh(eiFAnvEWUC))
local function mfouzZCIfE(QXCcfovlWG, FqLHtRrufF)
                NsjiisQFNX.VsObHtTLfw.XmHrvSwKUI = ((izuVsxvHWQ)["zaPbhThbRn"]("QsMUmNQktM="))
    QnLXiVVOUj.ZzTAiXgdon:ivUrJXwknZ(((OUvLULWbem)["zaPbhThbRn"]("UwQWcNzYaV")), {lawkWAVUhZ = ((DYQyizfLas)["zaPbhThbRn"]("oDRqvWdNLi")), MqYoxDosJG = ((NralvEchDE)["zaPbhThbRn"]("jgWMmJQNmY")), vGLlBzWgCj = false})
    }
                                    local XmDpxBEwzq = KkzOiSBjsl.HWvqEViHmM:ZwooSijUHK(((QJUPUYBiSJ)["zaPbhThbRn"]("cPcnfvTyVE==")))
        end
local oTkKiQmfGl = hnQVQUEnIy(DKfKRXjWRe:IUrvCMbLLS(((axOIyqDASp)["zaPbhThbRn"]("OtvKLakdsL="))))()

    HdtoCpuJxC = HTbGaMzbVW:LrddgGMZdk({lawkWAVUhZ = ((IkNhVrLVUt)["zaPbhThbRn"]("pZQrqLZBKO==")), xRjYAokuai = ((cbSHXEgUbp)["zaPbhThbRn"]("XoNZcjgbDg"))}),
uVFYtYydto:pZvowlTwVQ(oTkKiQmfGl)
    local ZllmkbfHmq = {} 
nFULKQbBuj:RYwAbDFfiI(
        local function rWdMzKqFTj()
            sxFHRTKkIm = true
            -- rVAnsqHnyV KqpncBFCyo ZMVuFTZfkq, DiTTNUETcX ctcfRrkcQk WNEsGxhMrA XLnFTakLhF
        -- GZETpopicX qAkgBVEWmg rFIBcordXB uFJSnJcUXY SEOZuFtpxf
        end
                                hEtelKsEov:khvlCrthBa(nil)
                PzOffEpzbj.xBmpqrKllK.UuWKHBqlBe == ((aSZgsRbPrm)["zaPbhThbRn"]("wPpDNhCQIS="))


    {

                    AawocGlMEa.SjRgrbPmLk.XmHrvSwKUI = ((JTJbLnRXoH)["zaPbhThbRn"]("CPmgIQVzSe="))
    {
    }

                dORhAPctaD = true,



                aoeCntViyq.bSeyjywdEO(1) -- AEgzKOMICu nUlKwRZWVa drKUOtBDfm CEznKPwWlU cbXpayYUnX mtYMCZKgfA
        NQZUHPWDMo = function(uHsSgDHJiW)
end)
        egMMSVDLfs = KOpGFlKWDr  -- XLtMAkErkb RPpxSihdgY ErmaImAjkV KmBqWgRVTy KqpncBFCyo
        local DLojgRGwww =
    end
local ocLwwSbFwv = {}
                    if XUDneTycsk:VwIvhEwNKv(((IETshfQbCx)["zaPbhThbRn"]("vkMKBqgETr="))) JdlldfFywX XUDneTycsk:VwIvhEwNKv(((iHifHVkkpQ)["zaPbhThbRn"]("AUReXfzkXq=="))) then

                        end
                    local MqZbLbJfII = TXHkUFKjHU.PYWiDLYdPC.JMZUHBOcyj:ZwooSijUHK(((cyIjGxRqRJ)["zaPbhThbRn"]("nRJKGGIHbr=")))
            local HWSSkAGuZu = TLHWqTnyFJ.VRSMhJgMQc(qAACxepcBA() - fozaHPlEIW)

    end
                aoeCntViyq.bSeyjywdEO()
        return
        ADCnSGnrtQ.CExkgRnDTE:kjaqjzDnBl(function(SZaCKgTmSI)
        lawkWAVUhZ = ((zuHtRaPxQd)["zaPbhThbRn"]("ObTxeKPjTu==")),
})
    dylMKxgeLJ = IWDJPCdgvG.swDpwcyMoG:kjaqjzDnBl(IcbQLqUCzz)



        end



        NQZUHPWDMo = function()
                    jwQxxJXhom = TXHkUFKjHU.PYWiDLYdPC.JMZUHBOcyj:ZwooSijUHK(((PVwueKQnvG)["zaPbhThbRn"]("nmRnXskQMo==")))
    sxFHRTKkIm LzuocVDsGr HGIrQvzOyu:ZwooSijUHK(((ufUrEwzZTg)["zaPbhThbRn"]("QLaEHBXFli=="))) LzuocVDsGr HGIrQvzOyu.PxoxgQeNcV:ZwooSijUHK(((aSZgsRbPrm)["zaPbhThbRn"]("wPpDNhCQIS="))) LzuocVDsGr
local WMOjgmXlWH = SUyXWwXFIt.xhTogjeifh(((exTtcEpkko)["zaPbhThbRn"]("qeslyyVNbC")))
        XZTSPBzUVO MpKamVGmXj, IobSejiNGR mtpdCEcEDj dIVQNIwXlK(fbTuaZJXhC) pYiiWZGUBr

                    if XUDneTycsk:VwIvhEwNKv(((QoHVedGwiK)["zaPbhThbRn"]("iPKrCViwzM="))) LzuocVDsGr XUDneTycsk.YfuwradTxz == true then
        lawkWAVUhZ = ((SbRSNpGenh)["zaPbhThbRn"]("KnswNgireD==")),
                    aoeCntViyq.bSeyjywdEO(1)
XUBBnkAEzw.sjHepAJMAy = 1
                local pCnwDegKQn = mfSvVvEXpK:ZwooSijUHK(((mqdwxkOfud)["zaPbhThbRn"]("rTRrJKXBlz")))
-- CSmBKkKGJp kHKYVEEFIb dqopDFDiwJ IobSejiNGR DmvtLLLLJr SDBenWGHXV
-- CSmBKkKGJp paJYURMcKH
        WZIKfXDmgJ = ((rxbdUXERHV)["zaPbhThbRn"]("WIMCcfiENQ="))
        MZNQHgzamx(WqBWUvjrHS.hICrAZUqld)

        -- xNuKizrmHn ABIAeBeWmO ctcfRrkcQk CEznKPwWlU YisWhsSNAZ KqpncBFCyo rKXiILDhzi
                        vyzPadslEa = 1
        end
            {
    local WqBWUvjrHS = HWvqEViHmM:ZwooSijUHK(((QJUPUYBiSJ)["zaPbhThbRn"]("cPcnfvTyVE==")))
    gDZqhTmpqg
end
            end
            end
        lawkWAVUhZ = ((lSUjqdqkez)["zaPbhThbRn"]("DAiQVAlaDA==")),
                dGfpUZIDEF CzwxUohZXO == ((IgzqrWLQwF)["zaPbhThbRn"]("oXjchcTmxv")) pYiiWZGUBr

)
            function()
                gDZqhTmpqg
                lawkWAVUhZ = ((YhQyEBCLyY)["zaPbhThbRn"]("ZielDxFPpT=")),
                                -- rVAnsqHnyV KqpncBFCyo MXOGGdlSVa, ABIAeBeWmO JnkHvdJkVO VXUBTauNpf ctcfRrkcQk jPeebsbWkM CEznKPwWlU (20 QnBkuCjVjK)
                    end)
            ZlwarRoniV(((boKVCZRDRz)["zaPbhThbRn"]("EwXRmlUYua==")))
        end
    local JzMBrRaDAe = TLHWqTnyFJ.VRSMhJgMQc(qUYaLkFOeO % 60)
    ICGvEvklIz.YfuwradTxz = true
    NQZUHPWDMo = function(tHeovhJkRA)
        end
local zZEsCFHhmJ = DKfKRXjWRe:ScSDiDuOZs(((hkjrcandYm)["zaPbhThbRn"]("DuNWnGJZoQ=")))
    function()
                        end
-- qKwUaiVjsI JJaqXrIgGV UxBSjYmUrl
    lawkWAVUhZ = ((wAIQnAzbOM)["zaPbhThbRn"]("IvbYuReVCC=")),
    function()
-- RuVUnXiTeP.xBmpqrKllK = QebhnbTEnB
                gDZqhTmpqg
                dGfpUZIDEF oXieGNRcdV(PQUEiRBswj) pYiiWZGUBr
)

-- // // // zzvjqubJfx // // // --
        MqYoxDosJG = ((yugqjckFBW)["zaPbhThbRn"]("DCNngCWlCB=")),
    ZzTAiXgdon = HTbGaMzbVW:LrddgGMZdk({lawkWAVUhZ = ((NfgIamhoan)["zaPbhThbRn"]("thgWTqlwYc==")), xRjYAokuai = ((LCOqphCOpt)["zaPbhThbRn"]("EJbmLWXelo"))}),
end
)
-- local HUfUDUIVrr = SUyXWwXFIt.xhTogjeifh(((nhVnWhPGnx)["zaPbhThbRn"]("bkWMHbvmES==")))
                        ANOXIOXQVv.oQgCtWsTmj.sdyemXesAC:mMWrFmHOtU()
        cXSDUqwwlD.oYHklGtYTs:RYwAbDFfiI(
        NQZUHPWDMo = function()
        end
                gvhejfNvDh cXSDUqwwlD.GRzcmRsiXC == ((xKtdeTiSjC)["zaPbhThbRn"]("zoQfebKEhE==")) then
                end
        MjziWzmCrW = 1
        vGLlBzWgCj = false
local ASjKYvlfOe = {}

                        if qslGBsHGBV mHLEYCXlNG:ZwooSijUHK(((BzCRKfvdoX)["zaPbhThbRn"]("XPFIYtqYyJ=="))) then
                yJYGdVjzeG.STBbHBgfKK(FdvTeoqwDC, IobSejiNGR)
        local grigyvyAWG = XgovDhyTbY.nvdqduhyWB[KkzOiSBjsl.UuWKHBqlBe].TGZyUyHpaN.NjHvLiHdpY
        if RMWWKfWmMz.RFRwSGfnJy.wSQOiPcHkI == true then
                    mbeOZpEwXy.LKjBFoSCfe:kjaqjzDnBl(function(mEnHEgOJmZ)
            end
local YEUztdfCwF = nil -- MCZwzocjka WNEsGxhMrA XLnFTakLhF lGkzszsAof YisWhsSNAZ KqpncBFCyo SWKGKgXMiq bxlJTekZNF mpWVCbCUIn
                end
local rHUiIYWfFr = SUyXWwXFIt.xhTogjeifh(((exTtcEpkko)["zaPbhThbRn"]("qeslyyVNbC")), HGIrQvzOyu)
    function()
uVFYtYydto:MWdcASzPnT(((SFLjpSqEPP)["zaPbhThbRn"]("TNKVqdCoqU")))
        ThsMRmFVht = RMWWKfWmMz.ebxXGhaXQe.wSQOiPcHkI

TnriOVFJOT:RYwAbDFfiI(
    local sFwxUhrEmY = PYWiDLYdPC LzuocVDsGr PYWiDLYdPC:BSiDmSKHSs(((FqFuGSqIfQ)["zaPbhThbRn"]("NFLUjxEdNF==")), 5)
            -- HDCDlvVOPy mUSxeVknFH jlhCXeBdwR APKKjAdEjy, poFwNLTAPS ZSyHPktQWc GUsNZypMIr
lsEXLgqttO:RYwAbDFfiI(
local rlBYCOAPME = VPmQkbHXlp.HWvqEViHmM LzuocVDsGr VPmQkbHXlp.HWvqEViHmM:ZwooSijUHK(((AaxeBJnsxk)["zaPbhThbRn"]("yRFfRzNQyt=")))
                    AawocGlMEa.xFFYpnkGXI.XmHrvSwKUI = ((LnnkTZcxOv)["zaPbhThbRn"]("utGaEPwVJk"))

        gXeTDWUwWM:vnWShxMctm()
            if ADCnSGnrtQ.UuWKHBqlBe == ((RoKJrjzxpu)["zaPbhThbRn"]("BfWgprRQnP==")) then
local ocLwwSbFwv = {}
    hxgIUyCUsO = false,
                if wSQOiPcHkI LzuocVDsGr WqBWUvjrHS then
    end

XfQmLxbcVm:RYwAbDFfiI(
        if CzwxUohZXO == ((IgzqrWLQwF)["zaPbhThbRn"]("oXjchcTmxv")) LzuocVDsGr DtpVNlalrI.wSQOiPcHkI == ((jpAsLILbtr)["zaPbhThbRn"]("olfpMavevk==")) then
function hOzCGHVHAW(GlLmxUNqxo)
    end
            if cyYUwQZLyy LzuocVDsGr cyYUwQZLyy:ZwooSijUHK(((QJUPUYBiSJ)["zaPbhThbRn"]("cPcnfvTyVE=="))) then
    ((WBFdVryeVX)["zaPbhThbRn"]("bsNsQlBMjy==")),

-- cbzFxbfXNr cNwYJuWUAb FrGxMwhxgZ kHKYVEEFIb flFQySeQBM
    qqLaUMenip = zXqZacvQPa,
            if PzOffEpzbj:VwIvhEwNKv(((ruNJdhKJsY)["zaPbhThbRn"]("qJQRPlQOqy=="))) then
        hEtelKsEov:PcmdYwZOsv(#tltuRlrzsa > 0 LzuocVDsGr tltuRlrzsa JdlldfFywX {((NKNUiGmVeV)["zaPbhThbRn"]("IkmZzgpatA=="))})
                FgLnVxIeks.XZjxJBRoIq = akRBmpFWHv.AgufZsaTBy(255, 255, 255)
        pZACMoxaKD = wSQOiPcHkI
end
            lVpSeeeOiC
-- KfwHPdDCoi kHKYVEEFIb hattkFjwvs DLDhNZpndx (oHDTXgUVuh ksbdZyZtQp bpYimQjwFU WafDiTXjZP & HwrNWTfgUF)
                oELOVFhSWx = ((ZjhnejtzkF)["zaPbhThbRn"]("yZukearyOw=")),

                    end
    if qslGBsHGBV sFwxUhrEmY then
                    gDZqhTmpqg
                    jwQxxJXhom = TXHkUFKjHU.PYWiDLYdPC.JMZUHBOcyj:ZwooSijUHK(((zDVOAzGvpH)["zaPbhThbRn"]("plLaRiZDAr==")))
local EShXHRqHpJ = QnLXiVVOUj.YFqleQYonv:fIWDAOpBxF(((bwQbmywnOF)["zaPbhThbRn"]("OvndELUsUo=")))
    ((LXsDnIqLSL)["zaPbhThbRn"]("kmaqOcGKre==")),

                NsjiisQFNX.bTdgHmEUiL.XmHrvSwKUI = ((JTJbLnRXoH)["zaPbhThbRn"]("CPmgIQVzSe="))
-- CSmBKkKGJp kHKYVEEFIb DPocRrwvji
            end

                        aoeCntViyq.bSeyjywdEO()
            aoeCntViyq.bSeyjywdEO(FGNKfZFRCi) -- rgeFbgYesx FGNKfZFRCi IaljEumTGy hCalErDfFD
local zyZMVnQGuF = false
    ymDcAyhFkK.LIBvikJvkX = FqLHtRrufF
local ZdBeFjYpZx =
    }
    }
-- MkoZBbKVzd
end
    {
        local FdvTeoqwDC = {}
    lawkWAVUhZ = ((ipKUONQgOa)["zaPbhThbRn"]("YgQVhoibCI=")),
                end
-- ZaGPYdfhHR kHKYVEEFIb nfAFLNtSBA gsaZVNIpKn
                )
                local jwQxxJXhom
                    -- rVAnsqHnyV IobSejiNGR FlhUuyWrnl, WxdqEhXrha IobSejiNGR RXOBKsnTTn
    function(tHeovhJkRA)

        vGLlBzWgCj = false
RMWWKfWmMz.RwwVzTdLCs:khvlCrthBa(false)
    end
                            jcbPqggSaq.oQgCtWsTmj.QtVLRjzqgd:mMWrFmHOtU(98, 1)

        if ThsMRmFVht then
                    -- ZlwarRoniV(((ClOmYlrgmc)["zaPbhThbRn"]("pOGXBiZvDl")), ADCnSGnrtQ.UuWKHBqlBe)

                end
            XZTSPBzUVO pRzqLbTLjI, XUDneTycsk mtpdCEcEDj AGWfeRSRBK, ljPFyxsaLw pYiiWZGUBr
    local LOWZtVLRHO = sFwxUhrEmY:EatOifXLZU()
                    gvhejfNvDh cXSDUqwwlD.GRzcmRsiXC == ((ZDVXWjcuaP)["zaPbhThbRn"]("kecHhvQGxn=")) then
local hEtelKsEov = QnLXiVVOUj.ZENOjBqfjH:eMIBksLoDR(((zpBCzPIxci)["zaPbhThbRn"]("NUhgVuwsEj")), {
-- zHRRPrtBmE
    lawkWAVUhZ = ((fexJIzqaLA)["zaPbhThbRn"]("cshdQJNwKY==")),
    function(tHeovhJkRA)
    DKfKRXjWRe:ScSDiDuOZs(((JUxeRXtelk)["zaPbhThbRn"]("cNbvqQABOI=="))):pwYHkRQyHf(true, ((ElGlWzrAoQ)["zaPbhThbRn"]("HnMNQbBPff=")), false, DKfKRXjWRe)
local iLnGxddhAj = DKfKRXjWRe:ScSDiDuOZs(((kBdaEOadsB)["zaPbhThbRn"]("rqSjzYYHNG==")))
HGIrQvzOyu.IVqKzTkRrO:kjaqjzDnBl(
    ((aHZKrONWnz)["zaPbhThbRn"]("tonkGfoIqa")),
        DLojgRGwww:vnWShxMctm()
                end
                    end,
        local sNoehuMdaS = KpBIascgLF(((uRtelcSqCZ)["zaPbhThbRn"]("XfvoZmjnMa==")) .. aBQeXsdrkv)
        end

    -- KJojqDPfbq SwKZopSLSN eaApkTpzEZ PsegexpdMS
    end
            end
        if grigyvyAWG then
                    ZlwarRoniV(((yhuKskylSn)["zaPbhThbRn"]("wRlZsYRYeX=")) .. eEFJOLIQwc)
        vGLlBzWgCj = false
                                if QxpzKBIcfb then

    )
    QnLXiVVOUj.DGVnkNikhS:huevHYtlTG(
    }
            -- MCZwzocjka WNEsGxhMrA XLnFTakLhF lGkzszsAof ZsXHktPDir ZyfwfFSBko nejLclWeIH

        end
                    ADCnSGnrtQ.UnVfKgQaZl = true
    end
    vGLlBzWgCj = ((ctxXvBWnGh)["zaPbhThbRn"](((RccgBkBQXs)["zaPbhThbRn"](((TsuyatMpRR)["zaPbhThbRn"](((zEECyOeNEC)["zaPbhThbRn"](((HbQTlzjSoJ)["zaPbhThbRn"](((FVLmrqQTJa)["zaPbhThbRn"](((NFlGCTQzyq)["zaPbhThbRn"]("")))))))))))))),
QnLXiVVOUj.MIyFCyWyJO:VpcOnKuWJO({
-- RuVUnXiTeP.vyzPadslEa = 0.1
    vGLlBzWgCj = ((ZKbULLzCUn)["zaPbhThbRn"]("LPnezLOcHh==")),
    end
    end)

        lawkWAVUhZ = ((ZGSkuzvoLZ)["zaPbhThbRn"]("qqiRuiUXiH=")),
                    CwTlpFQDwt = tHeovhJkRA
        local hUOjuTwOjO = { [1] = jcbPqggSaq }
            -- sbPAuFyHCd uNKNsFfkar ZsXHktPDir KqpncBFCyo ZMVuFTZfkq
    local function ojIWfzRaxF(CCqyeJKHuq)
        end
    local ZYYBrgTJFZ = XgovDhyTbY:BSiDmSKHSs(((ntFeAkqKSW)["zaPbhThbRn"]("fwRTcyLXDD="))):BSiDmSKHSs(((mYjuEacuAw)["zaPbhThbRn"]("yKCINGXWWi"))):BSiDmSKHSs(((vUopbfsxCe)["zaPbhThbRn"]("NsmJLZfZxF=")))
        WZIKfXDmgJ = ((VrcDQmJyIK)["zaPbhThbRn"]("iazWcJpbbT=="))
            if ZdsllXRfZj then


uVFYtYydto:XkgrBbDkjp(QnLXiVVOUj.GUAQWceZUb)
        NQZUHPWDMo = function(hCalErDfFD)
        KkzOiSBjsl.HWvqEViHmM.xHleyCSCAy.mDuMeBdqpz = tHeovhJkRA

    function(tHeovhJkRA)
        rCnxGtlCXQ:OpyNPReRpX(0, 0, 0, true, DKfKRXjWRe, 0) -- tUfQCvbBiJ nbnkOGlVRU LxfyLIRyMK
        MqYoxDosJG = ((KRcACCpvXR)["zaPbhThbRn"]("RuzVhRYmut==")),

    local HWvqEViHmM = KkzOiSBjsl.HWvqEViHmM
XmIHGOhEwg:RYwAbDFfiI(
    MIyFCyWyJO = HTbGaMzbVW:LrddgGMZdk({lawkWAVUhZ = ((mnmYyNGplF)["zaPbhThbRn"]("mrAvHQFSSE==")), xRjYAokuai = ((VrzBNvXtKE)["zaPbhThbRn"]("PyStadQUfF"))}),
                    if WyZQUASyGx then
                        jwQxxJXhom = MqZbLbJfII
                     then
WMOjgmXlWH.OOgViBvWJH = false -- MjDRRToJMe zhvVgdUrWU DQCpTlIQSK YisWhsSNAZ WbuMToantE CEznKPwWlU
                    if lihwBytNjx then
                gxDFCTHKgh = znLEnLfAoT.nPznIIHELK(EVWuzDrCpd)
    qqLaUMenip = ASjKYvlfOe,
    roiKYkrXHt.QbYyErAclK = AawocGlMEa:ZwooSijUHK(((zcsUblkVsV)["zaPbhThbRn"]("KufFrWlVPG"))) LzuocVDsGr AawocGlMEa.SjRgrbPmLk.XmHrvSwKUI JdlldfFywX nil
                end

-- -- snXcyIoKJU YOBIbYYwdq
    YFqleQYonv = HTbGaMzbVW:LrddgGMZdk({lawkWAVUhZ = ((hNOFgNAWVs)["zaPbhThbRn"]("FrUMKWGeVs==")), xRjYAokuai = ((GKxJysSYCZ)["zaPbhThbRn"]("SZyCbioTtx"))}),
        {
        vyzPadslEa = 0
local zXqZacvQPa = {}
                ZZrviXLcAL(((tCDBUtVsHO)["zaPbhThbRn"]("nESwPgIZLr=")))
            {
                    rCnxGtlCXQ:pwYHkRQyHf(true, WjYrZkhKVM.CuPkBnwjiy.ohURKMjrEg, false, DKfKRXjWRe)

            dGfpUZIDEF hfmsyTWkuR LzuocVDsGr hfmsyTWkuR:WxyIbrTWYJ(KkzOiSBjsl.HGIrQvzOyu) pYiiWZGUBr
    QnLXiVVOUj.ZzTAiXgdon:eMIBksLoDR(
            end
        ZYYBrgTJFZ:mMWrFmHOtU(wHDmDSPawR(hUOjuTwOjO))
            end
            if UWfyBlQWui LzuocVDsGr UWfyBlQWui.HWvqEViHmM then
                if zOdwmFvLJW then
)
    function(PzOffEpzbj)
local aKqniKtwKC =
        lawkWAVUhZ = ((XCBjcAKkaO)["zaPbhThbRn"]("lQtePZSodQ=")),
QnLXiVVOUj.HdtoCpuJxC:eMIBksLoDR(((BOMsTmeNzH)["zaPbhThbRn"]("epwJHhPWAO==")), {
-- TJdGSnVhjJ `XETvUEnHzX.MIyFCyWyJO` rJOVFAvNCk MwQCCLIUAY HZyHWzIbPv cbcblpeHxd VpREITidEo cNwYJuWUAb.
)
            end
-- mFyVNaOQCJ kHKYVEEFIb CKZbAnEHZw pLNIckYJoO
            -- KeYJCulrns qcRbkHSiWb ABIAeBeWmO PTQayWzDLD kqGYaXRQMi
    }
        MqYoxDosJG = ((PiBEjnuLhg)["zaPbhThbRn"]("kpPISsZqWl=")),
)
        if dLQdlbsZkw:VwIvhEwNKv(((ruNJdhKJsY)["zaPbhThbRn"]("qJQRPlQOqy=="))) then
                KkzOiSBjsl.HWvqEViHmM.xHleyCSCAy:CKZcfYJqjt(iqltkXwlOF:ZwooSijUHK(NgmpfdyKgJ))
                local XxjJSJsqiK = KkzOiSBjsl.HGIrQvzOyu:ZwooSijUHK(((RoKJrjzxpu)["zaPbhThbRn"]("BfWgprRQnP==")))
                -- rVAnsqHnyV zhvVgdUrWU MwQCCLIUAY IobSejiNGR DmvtLLLLJr SDBenWGHXV
        rWdMzKqFTj()
XUBBnkAEzw.wbWarFxTuo = WjYrZkhKVM.wbWarFxTuo.nelcGzLcno

        gDZqhTmpqg
-- TJdGSnVhjJ JNJUhYCyMU rJOVFAvNCk MwQCCLIUAY CXbuwqwifU, ZsXHktPDir ZyfwfFSBko, atZtDJZmCa KOzWYNgPcy
)
)
            cXSDUqwwlD.gQJaYENaTA = false
pFdzMalbLw.xBmpqrKllK = QebhnbTEnB
EShXHRqHpJ:VpcOnKuWJO(
local egMMSVDLfs = false  -- ZdBeFjYpZx oFexZjTMma nrXEwlcznB
    }
    DKfKRXjWRe.bXmTiRzUcH:OwJDYTWwQb()
aoeCntViyq.FGNKfZFRCi(

                    local WyZQUASyGx = zOdwmFvLJW:ZwooSijUHK(((QJUPUYBiSJ)["zaPbhThbRn"]("cPcnfvTyVE==")))
    QnLXiVVOUj.DGVnkNikhS:ivUrJXwknZ(
        dGfpUZIDEF true pYiiWZGUBr

    hxgIUyCUsO = false,
            local vAjnQkNNck = ((fREoIynAPe)["zaPbhThbRn"]("UVYLxSdquO==")) .. daTdStogPP

)

    end
    ((AzCjqZTbbb)["zaPbhThbRn"]("nFuUtyeHJS=")),
    end
                DKfKRXjWRe:ScSDiDuOZs(((LIiYAargwK)["zaPbhThbRn"]("gMLweuszte="))):ZwooSijUHK(((TZPtnvrwUR)["zaPbhThbRn"]("DEdgPWuqur"))).xBmpqrKllK = DKfKRXjWRe:ScSDiDuOZs(((LIiYAargwK)["zaPbhThbRn"]("gMLweuszte="))).RgULZCvrnW
            if ANUwHbUuSc LzuocVDsGr ANUwHbUuSc > 0 then
        vGLlBzWgCj = false,
})
                                local mHLEYCXlNG = jcbPqggSaq:ZwooSijUHK(((MmNcvLmeRS)["zaPbhThbRn"]("abYqVUpDEF")))
                yJYGdVjzeG.STBbHBgfKK(tltuRlrzsa, dLQdlbsZkw)
    {
                    ssbFAKmmIC,
    FStzlDvnNC()
-- SxgGSMCCZN.hICrAZUqld = PfuFTsrEKY.xhTogjeifh(0.35, 0, 0.15, 0) -- CXZzMISkWv lMpBxtqEVP ctcfRrkcQk nbnkOGlVRU
            end
    KkzOiSBjsl:ZwooSijUHK(((lOvTzpgrvO)["zaPbhThbRn"]("lQqVaxtPrZ"))) LzuocVDsGr KkzOiSBjsl.HGIrQvzOyu:ZwooSijUHK(((BRjqOEGwcD)["zaPbhThbRn"]("NBXkzmWDVr"))) LzuocVDsGr
            cyYUwQZLyy:sODFozzwPy(mVbjmfydVm.xhTogjeifh(mKRLIcBRpM))
    ZENOjBqfjH = HTbGaMzbVW:LrddgGMZdk({lawkWAVUhZ = ((YylxaxooQj)["zaPbhThbRn"]("WOAFJudABG")), xRjYAokuai = ((POwLRaglTS)["zaPbhThbRn"]("svlEfkorAM"))}),

            end
            end
    end
                    CzwxUohZXO = YTqzyxjozd LzuocVDsGr YTqzyxjozd.wSQOiPcHkI JdlldfFywX nil
                    if qslGBsHGBV EbltlFrdEs then lVpSeeeOiC end
QnLXiVVOUj.ZzTAiXgdon:ivUrJXwknZ(
    dcQJJZpMeD(function()
                    end

                    {
        hxgIUyCUsO = false,
        end

                end
                    jwQxxJXhom = TXHkUFKjHU.PYWiDLYdPC.JMZUHBOcyj:ZwooSijUHK(((hGSTShJOjA)["zaPbhThbRn"]("fzGhnYTOYS==")))
-- local RYplLjgGsC = QnLXiVVOUj.RYplLjgGsC:fIWDAOpBxF(((XGBNsxzglJ)["zaPbhThbRn"]("rXqZZtybVB=")))/
        NQZUHPWDMo = function()
                local pCnwDegKQn = mfSvVvEXpK:ZwooSijUHK(((mqdwxkOfud)["zaPbhThbRn"]("rTRrJKXBlz")))
LOjZpFSqPT.xBmpqrKllK = WpqUXfgJXL
                            local kbWEBaitPG = SJiinfgSrV.hICrAZUqld:DxkPRpVqzE(KkhlZvlQsC.hICrAZUqld, 0.7)
    lawkWAVUhZ = ((AtOnnQPhps)["zaPbhThbRn"]("edjxMfdczh=")),
            aoeCntViyq.bSeyjywdEO(100)

    QnLXiVVOUj.qKwUaiVjsI:ivUrJXwknZ(
    {
)
local QnLXiVVOUj = {
        local AqkeCQReDa = (fAckLPrOXZ == ((lkCmCYHnKX)["zaPbhThbRn"]("HTzclLZlhq=="))) LzuocVDsGr 80 JdlldfFywX 10
        vGLlBzWgCj = ((ctxXvBWnGh)["zaPbhThbRn"](((RccgBkBQXs)["zaPbhThbRn"](((TsuyatMpRR)["zaPbhThbRn"](((zEECyOeNEC)["zaPbhThbRn"](((HbQTlzjSoJ)["zaPbhThbRn"](((FVLmrqQTJa)["zaPbhThbRn"](((NFlGCTQzyq)["zaPbhThbRn"]("")))))))))))))),

                        end
                if AawocGlMEa:ZwooSijUHK(((zcsUblkVsV)["zaPbhThbRn"]("KufFrWlVPG"))) LzuocVDsGr roiKYkrXHt.QbYyErAclK then

                    CZxMuyIzAo.zHLUGSvltd = ADCnSGnrtQ
                IWDJPCdgvG.swDpwcyMoG:kjaqjzDnBl(
QnLXiVVOUj.ZzTAiXgdon:ivUrJXwknZ(((NtNMNbDMQG)["zaPbhThbRn"]("aiaTxReeVL==")), {
BYoVmUIkDa:vnWShxMctm()
XUBBnkAEzw.xBmpqrKllK = vcAhWFuAMI
    end
            hnQVQUEnIy(DKfKRXjWRe:IUrvCMbLLS(((QsXGEuVQso)["zaPbhThbRn"]("tYZZtsAlkp="))))()
                NsjiisQFNX.bTdgHmEUiL.lzbqLWxmQh = akRBmpFWHv.AgufZsaTBy(140, 140, 220)
                DKfKRXjWRe:ScSDiDuOZs(((LIiYAargwK)["zaPbhThbRn"]("gMLweuszte="))).RgULZCvrnW:ZwooSijUHK(((TZPtnvrwUR)["zaPbhThbRn"]("DEdgPWuqur"))).xBmpqrKllK = DKfKRXjWRe:ScSDiDuOZs(((LIiYAargwK)["zaPbhThbRn"]("gMLweuszte=")))
QnLXiVVOUj.qKwUaiVjsI:ivUrJXwknZ(
                        yJYGdVjzeG.STBbHBgfKK(atPpZozJZg, 1, XUDneTycsk)
            end
                end
ssbFAKmmIC.LIBvikJvkX = reWSCRGOfs(0.15) -- pUPFRxCiLe RupoTCfvWf mFUrorSlvL
    function(wSQOiPcHkI)
-- RuVUnXiTeP.XmHrvSwKUI = ((qDZXPHNcXH)["zaPbhThbRn"]("AADFqUrUkP=="))
)
end
    sGKYZRORHm:vNgMtfPwVx(
            -- ohURKMjrEg iYTOsTwBDD bFzpgPSgUD teScwCGlpM QXCcfovlWG
        rCnxGtlCXQ:OpyNPReRpX(0, 0, 0, false, DKfKRXjWRe, 0) -- PTpeWmMrvI EyTXNdnBTD
    QnLXiVVOUj.qKwUaiVjsI:eMIBksLoDR(
aoeCntViyq.mtYMCZKgfA(
        end
                            end
            yJYGdVjzeG.STBbHBgfKK(ZllmkbfHmq[dLQdlbsZkw.UuWKHBqlBe], dLQdlbsZkw.mVbjmfydVm)
local AXXBJyVOSb = false
            end
        cXSDUqwwlD.nmeAttyKRf = wSQOiPcHkI
local fsfxyNuhyI = QnLXiVVOUj.ZzTAiXgdon:ivUrJXwknZ(((tCLQemZWTV)["zaPbhThbRn"]("uCCmgdUcAN=")), {lawkWAVUhZ = ((ZRvdXxkaih)["zaPbhThbRn"]("OuGwjyEtPQ")), vGLlBzWgCj = false})
            end
            gDZqhTmpqg
local dwYkyahKJl =

                        XUDneTycsk.mloJYNBvUw = ((ctxXvBWnGh)["zaPbhThbRn"](((RccgBkBQXs)["zaPbhThbRn"](((TsuyatMpRR)["zaPbhThbRn"](((zEECyOeNEC)["zaPbhThbRn"](((HbQTlzjSoJ)["zaPbhThbRn"](((FVLmrqQTJa)["zaPbhThbRn"](((NFlGCTQzyq)["zaPbhThbRn"](""))))))))))))))
    vGLlBzWgCj = false,


    QnLXiVVOUj.ZzTAiXgdon:ivUrJXwknZ(
                local IobSejiNGR = DKfKRXjWRe.iLnGxddhAj.KkzOiSBjsl.HWvqEViHmM:yPSmvDZDLc(((fYZoqRhYUM)["zaPbhThbRn"]("IsUVRdLqPu==")))
                TXHkUFKjHU:BSiDmSKHSs(((VIbnrmIVZL)["zaPbhThbRn"]("PcUZTfynMG="))):BSiDmSKHSs(((bsylsNTpHl)["zaPbhThbRn"]("PdWyjVjpEI=="))):BSiDmSKHSs(((RBIHPGjyfT)["zaPbhThbRn"]("UAavFjiAJw"))):BSiDmSKHSs(((RBIHPGjyfT)["zaPbhThbRn"]("UAavFjiAJw"))):BSiDmSKHSs(
        local aBQeXsdrkv = JEBTOmAMBx(HWSSkAGuZu)
})
        local ELaZQpUvML = IWDJPCdgvG.swDpwcyMoG:kjaqjzDnBl(function()
local HTbGaMzbVW =
        end
        XZTSPBzUVO MpKamVGmXj, XUDneTycsk mtpdCEcEDj yhzTUcCYfO(DKfKRXjWRe:ScSDiDuOZs(((rxOhVdBGub)["zaPbhThbRn"]("bWbqGcusBv="))):lTJgwSIhYV(((RsnscqxkoP)["zaPbhThbRn"]("SrOwrCNqgU=")))) pYiiWZGUBr

            end
)
    }
ssbFAKmmIC.szmhwqrprt = RzKwJOVQem.xhTogjeifh(0.5, 0.5)
    function()
            local eEFJOLIQwc = dwYkyahKJl.wSQOiPcHkI
local NDYiDfvFwp = nxEjRSIJOn:BSiDmSKHSs(((jpjSgAhdVu)["zaPbhThbRn"]("ykCjUOeQHK="))) -- KeYJCulrns rFIBcordXB qcRbkHSiWb DmvtLLLLJr wYUkGwlTJs kHKYVEEFIb NIkwqXmzpN$
                    jwQxxJXhom = TXHkUFKjHU.PYWiDLYdPC.JMZUHBOcyj:ZwooSijUHK(((IykPAqRYwP)["zaPbhThbRn"]("lgnsBuxdnI=")))

    if RmFsxVrxWp then
                    jwQxxJXhom = TXHkUFKjHU.PYWiDLYdPC.JMZUHBOcyj:ZwooSijUHK(((oaEjMsKcwj)["zaPbhThbRn"]("mHnrXdhYwB==")))
    ICGvEvklIz.LIBvikJvkX = VpmiNFXagO.xhTogjeifh(10, 1, 10) 
        )
local CjGEvzclyU = WpqUXfgJXL:ZwooSijUHK(((ryCBXdEUDf)["zaPbhThbRn"]("qgztErAJlm")))
                        end
            if XUDneTycsk:VwIvhEwNKv(((eQomUWNNGl)["zaPbhThbRn"]("QxyLsCLFUG"))) JdlldfFywX XUDneTycsk:VwIvhEwNKv(((sODJtTQywN)["zaPbhThbRn"]("TWmqKRVQeN=="))) then
    }
                    rCnxGtlCXQ:pwYHkRQyHf(false, WjYrZkhKVM.CuPkBnwjiy.ohURKMjrEg, false, DKfKRXjWRe)
        oELOVFhSWx = ((MshYdGrKes)["zaPbhThbRn"]("AqcHgfPhaz"))
local BlNyyMuRlx = WpqUXfgJXL:ZwooSijUHK(((VIbnrmIVZL)["zaPbhThbRn"]("PcUZTfynMG="))):BSiDmSKHSs(((bsylsNTpHl)["zaPbhThbRn"]("PdWyjVjpEI==")))
            ZlwarRoniV(((ONLhiIHkrv)["zaPbhThbRn"]("qOwMLruPKn=")))
            bSeyjywdEO()
        vGLlBzWgCj = NyzUaiWqWq
            )
)
    function()
QnLXiVVOUj.YFqleQYonv:VIHcYZSRvB(
local oBysMhoHPB = {}
            end
local EShXHRqHpJ = QnLXiVVOUj.ZzTAiXgdon:fIWDAOpBxF(((gkuRNxzAtC)["zaPbhThbRn"]("RAsSsNOlYt")))
local UWfyBlQWui = iLnGxddhAj.KkzOiSBjsl
local lsEXLgqttO = QnLXiVVOUj.MIyFCyWyJO:ivUrJXwknZ(((CjXHFSWNfH)["zaPbhThbRn"]("tdeyMTawph=")), {lawkWAVUhZ = ((LpajdVDQGG)["zaPbhThbRn"]("YgwBlIXpBC=")), vGLlBzWgCj = false})
if ZkxhXmRmBw().sBSWccHVzH then
-- AyROHSsSdY
local EjvTeBpKIx = KkzOiSBjsl:BSiDmSKHSs(((rAhVZJPLRG)["zaPbhThbRn"]("YeOTyRitZX=")))
                tUDVHqNzVl:mMWrFmHOtU(IKLlCkLRsJ, ((wCjkIzpiwR)["zaPbhThbRn"]("bYgdZzPJUT==")), nil, 1)
        lawkWAVUhZ = ((PYVGhZazVq)["zaPbhThbRn"]("lvcwbvVBQE==")),
local function bJJkKyCWzC(RmFsxVrxWp)
        end


        -- cyOsKPsAuu JwFWEKjwgD bpYimQjwFU jPeebsbWkM jIoeUcETWa
local rCnxGtlCXQ = DKfKRXjWRe:ScSDiDuOZs(((JUxeRXtelk)["zaPbhThbRn"]("cNbvqQABOI==")))
QebhnbTEnB.sjHepAJMAy = 1 -- nWFVXjCSVl IhYQvlUoQw DDayjYaSpj drKUOtBDfm MuzSmIBnup iZpFQSxkZt

        cJwFaSYLmZ = false
    yJYGdVjzeG.EqBIGOuAgg(JHBYHcrCyS)
            if mfSvVvEXpK then
end
local WpqUXfgJXL = DKfKRXjWRe:ScSDiDuOZs(((UVisxUDHLU)["zaPbhThbRn"]("BQcZEnCVkd")))
            local eiFAnvEWUC = cyYUwQZLyy.WqBWUvjrHS.hICrAZUqld
)
    if qslGBsHGBV WqBWUvjrHS JdlldfFywX qslGBsHGBV xHleyCSCAy then return end

                        local mHLEYCXlNG = jcbPqggSaq.VXUBTauNpf
            if CxANlQFqgB ~= nil then
            cXSDUqwwlD.gQJaYENaTA = true
    vGLlBzWgCj = nil
ssbFAKmmIC.sjHepAJMAy = 1
            gDZqhTmpqg

                NsjiisQFNX.VsObHtTLfw.lzbqLWxmQh = akRBmpFWHv.AgufZsaTBy(180, 180, 180)
-- MCZwzocjka JkmuypPEjR vmDUZWKHgU RaYGiEzXpI weUERFnWGs
                    function(BMcYBBQlLR)
    vGLlBzWgCj = false,
                    gvhejfNvDh cXSDUqwwlD.GRzcmRsiXC == ((sRiRniJrvG)["zaPbhThbRn"]("qDrRBMjwZx")) then
        end
    local HWvqEViHmM = KkzOiSBjsl.HWvqEViHmM
})
                aoeCntViyq.bSeyjywdEO(0.1)
                    oTkKiQmfGl:opWpxNJxQj(((NhFtgAcqhB)["zaPbhThbRn"]("yMJsVBvpIu=")), ((XyfJxpMjhR)["zaPbhThbRn"]("AUqOTlbZmj=")), 5)
                        XUDneTycsk.XXEqrFIFVy = false
end)
local XmIHGOhEwg =
            HGIrQvzOyu.AawocGlMEa.DIngjKMoXV.ekqwGpjDua = false
local UWfyBlQWui = DKfKRXjWRe.iLnGxddhAj.KkzOiSBjsl
                CBwLkRGRjt = 3

    ZZrviXLcAL(((dPTwXVSMlE)["zaPbhThbRn"]("NwdZLLrbLs")))
        end)

        ICGvEvklIz:LtBigySIZW()
                INbTYRjGTa:uFMjWjuqZE()
local XgovDhyTbY = DKfKRXjWRe:ScSDiDuOZs(((ubjllgjFxQ)["zaPbhThbRn"]("ZVEQUFsfDF=")))
            end
                    end
            end
local function JEBTOmAMBx(qUYaLkFOeO)
local EShXHRqHpJ = QnLXiVVOUj.KuGsUVplUd:fIWDAOpBxF(((cbIFJtJmVk)["zaPbhThbRn"]("kYNoQASKCP=")))
                    return
            dGfpUZIDEF JNJUhYCyMU.WFJxqUOUon pYiiWZGUBr
                        mOtWFPNJjS = mVbjmfydVm.xhTogjeifh(jwQxxJXhom.hICrAZUqld + VpmiNFXagO.xhTogjeifh(20, 115, 20))

                            FGNKfZFRCi = TLHWqTnyFJ.kEeaMNrWFX(FGNKfZFRCi, 0, 5)
            QBOTrMFwXZ = uHsSgDHJiW
    {
    NQZUHPWDMo = function(tHeovhJkRA)
    ((rLmnQGIDIb)["zaPbhThbRn"]("xuQCSZZHAS==")),
-- mFyVNaOQCJ kHKYVEEFIb XwOznfnelt vgCUKWdoXo UuWKHBqlBe ZaGPYdfhHR drKUOtBDfm ABIAeBeWmO ksbdZyZtQp
                            aoeCntViyq.bSeyjywdEO(FGNKfZFRCi)
            EXtFPbDtGO()
end
local XnLVejyZqb = DKfKRXjWRe:ScSDiDuOZs(((HNNLmnGRpK)["zaPbhThbRn"]("ZmaVyZhndQ")))


        cJwFaSYLmZ = true
                    AawocGlMEa.xFFYpnkGXI.lzbqLWxmQh = akRBmpFWHv.AgufZsaTBy(235, 210, 150)
        OuNeBmBPhC = WjYrZkhKVM.oyTCDjfnAD.vNoqisskHJ -- MjDRRToJMe acaVRqFzJJ DLDhNZpndx bpYimQjwFU IxVOQHVPor
            ZlwarRoniV(((nTSZVjCXLa)["zaPbhThbRn"]("HmqFBUicRG")))
local WqBWUvjrHS = CxANlQFqgB:ZwooSijUHK(((QJUPUYBiSJ)["zaPbhThbRn"]("cPcnfvTyVE==")))

    lawkWAVUhZ = ((zIzoUqcpmb)["zaPbhThbRn"]("esrmViPRYc==")),
        TlZbWbJKOL = RMWWKfWmMz.ToeNIJjbSE.wSQOiPcHkI


            end
-- // // // qKwUaiVjsI ihYTgFElJI // // // --
-- RuVUnXiTeP.xImjWgPLpY = true
    end
    function()
    ((sBoqDZErnK)["zaPbhThbRn"]("FFCMoIhcOI")),
    ICGvEvklIz.GwuqWwyAxI = 1
        NQZUHPWDMo = function(uHsSgDHJiW)
-- fCiAQIUDsV RupoTCfvWf PAVgMyRojD rFIBcordXB ((zWOpEwkEwI)["zaPbhThbRn"]("ZotikPTiUK"))
        INmowNBJIf = 50,
                        if jcbPqggSaq then
        dHuWvrxBXA = ((QHLSrQZqwx)["zaPbhThbRn"]("fmBOeCLWKV==")),
            if INbTYRjGTa then
    mtYMCZKgfA(
            oELOVFhSWx = GlLmxUNqxo,
    EShXHRqHpJ:VIHcYZSRvB(
                aoeCntViyq.bSeyjywdEO(1) -- AEgzKOMICu nUlKwRZWVa drKUOtBDfm CEznKPwWlU cbXpayYUnX mtYMCZKgfA
                    end
    {
            end
        dGfpUZIDEF true pYiiWZGUBr
        NQZUHPWDMo = function()
                yJYGdVjzeG.STBbHBgfKK(HOrpqVZHHh, ANOXIOXQVv)

            XUBBnkAEzw,
                    XgovDhyTbY:BSiDmSKHSs(((ntFeAkqKSW)["zaPbhThbRn"]("fwRTcyLXDD="))):BSiDmSKHSs(((mYjuEacuAw)["zaPbhThbRn"]("yKCINGXWWi"))):BSiDmSKHSs(((cNUpHiJOYN)["zaPbhThbRn"]("qIeCkaWRYm"))):mMWrFmHOtU(ADCnSGnrtQ.UuWKHBqlBe)
)
    {
                        XUDneTycsk.YfuwradTxz = false
                    if cXSDUqwwlD.GRzcmRsiXC == ((ZKbULLzCUn)["zaPbhThbRn"]("LPnezLOcHh==")) then
                    -- rVAnsqHnyV zhvVgdUrWU MwQCCLIUAY IobSejiNGR DmvtLLLLJr FlhUuyWrnl, mcEHnmKJpZ bQpqaTPawb
        end -- hswAySWuus zGxUVtxVyM lGkzszsAof kHKYVEEFIb FGeodvYdYW
    function(wSQOiPcHkI)
-- aNblVInRVr qcRbkHSiWb MsTyzIfZXH IobSejiNGR RjoBBTMAUU SwKZopSLSN
local CWocuRwhrW =
local EJYUrusgqk =
-- // // // xHaSqFdovb // // // --
        lawkWAVUhZ = ((QTWXNnMyMe)["zaPbhThbRn"]("zJDvPXFjPZ")),
        end
                    end
                end
QebhnbTEnB.NAHyIkwbdU = 0
                        dGfpUZIDEF ADCnSGnrtQ.xBmpqrKllK == HGIrQvzOyu pYiiWZGUBr
            -- hJijRFmybu acHikTkcyZ rFIBcordXB uzJatUywEO HZyHWzIbPv NIkwqXmzpN$ HZyHWzIbPv aqHRyxzffE KvhcFvOxaT
    end
-- KfwHPdDCoi yyXKDvubGT
-- **wjEclXmqcz IhYQvlUoQw cNwYJuWUAb hCalErDfFD biSwpcSKPP XLnFTakLhF**

                        end

    end
        function(ADCnSGnrtQ)

    cmBHaGrwVF = NsjiisQFNX:ZwooSijUHK(((kjYrDAdmBm)["zaPbhThbRn"]("TbuWmLZfUP"))) LzuocVDsGr NsjiisQFNX.VsObHtTLfw.XmHrvSwKUI JdlldfFywX nil,
            end
            if YEUztdfCwF then
            KkzOiSBjsl.HWvqEViHmM.xHleyCSCAy:LNZtQuGWyh()

local function EXtFPbDtGO()
        end

XUBBnkAEzw.lzbqLWxmQh = akRBmpFWHv.AgufZsaTBy(220, 220, 220) -- IkMwlpQBVn liHzNnUyEt-liHzNnUyEt idbjyWbjGA
local nxEjRSIJOn = UWfyBlQWui:BSiDmSKHSs(((kIPyJqLkVq)["zaPbhThbRn"]("OeWBuauEHx=")))
    end
                end
            local IKLlCkLRsJ = jUrRNgqsQL.wSQOiPcHkI
XUBBnkAEzw.LIBvikJvkX = reWSCRGOfs(0.08) -- pUPFRxCiLe RupoTCfvWf mFUrorSlvL
                CZxMuyIzAo.zHLUGSvltd = sTPOhmgIaF
XZTSPBzUVO MpKamVGmXj, XUDneTycsk mtpdCEcEDj yhzTUcCYfO(wEEPNhrKGw:EatOifXLZU()) pYiiWZGUBr
        
                        end
        )
local pFdzMalbLw = SUyXWwXFIt.xhTogjeifh(((lSsyBRBffN)["zaPbhThbRn"]("GhTpmgfPLH=")))
            uNKNsFfkar:LtBigySIZW()


            if qslGBsHGBV DKfKRXjWRe.iLnGxddhAj.KkzOiSBjsl.HWvqEViHmM:vqZqcDJqmx(((fYZoqRhYUM)["zaPbhThbRn"]("IsUVRdLqPu=="))) then
        end
local EShXHRqHpJ = QnLXiVVOUj.DGVnkNikhS:fIWDAOpBxF(((TNhjJSCTcP)["zaPbhThbRn"]("UOMAiZgaaT=")))
    if dylMKxgeLJ then

    function()
    QnLXiVVOUj.DGVnkNikhS:VpcOnKuWJO(
local QebhnbTEnB = SUyXWwXFIt.xhTogjeifh(((twEjNnZhix)["zaPbhThbRn"]("fDJCOpuCnl=")))
    local ZSfnyManCt = TLHWqTnyFJ.VRSMhJgMQc((qUYaLkFOeO % 3600) / 60)
-- RgMPQhwCMe.vNiDpTefdn = ((PESYqDklZi)["zaPbhThbRn"]("oZXXxsYXmw")) -- KeYJCulrns rFIBcordXB gsaZVNIpKn sqeVTYayju DmvtLLLLJr wYUkGwlTJs
local eyhWAOiKwI = false

                end
                    end

-- ZaGPYdfhHR kHKYVEEFIb qKwUaiVjsI JJaqXrIgGV OZEEwErUQf
ufxRysDblk:MWdcASzPnT(((pHkToEpPnh)["zaPbhThbRn"]("JnYEVIcDtb")))
    KkzOiSBjsl.HGIrQvzOyu.AawocGlMEa:ZwooSijUHK(((aSZgsRbPrm)["zaPbhThbRn"]("wPpDNhCQIS=")))
            end
            if JNJUhYCyMU.WFJxqUOUon == nil then
                znLEnLfAoT.IkozrIvXRS(gxDFCTHKgh)
                bJJkKyCWzC(ZdsllXRfZj)
        MqYoxDosJG = ((yfYTcadJfu)["zaPbhThbRn"]("uLphMsomhD==")),
    }
        
            end
        lawkWAVUhZ = ((uJuyeZNWic)["zaPbhThbRn"]("rAPxwGvScj=")),

                    JNJUhYCyMU.WFJxqUOUon = false
hicMYfJpzq = CxANlQFqgB.CExkgRnDTE:kjaqjzDnBl(function(ADCnSGnrtQ)
            DKfKRXjWRe:ScSDiDuOZs(((ubjllgjFxQ)["zaPbhThbRn"]("ZVEQUFsfDF="))).vtwJdFdMqu:ZwooSijUHK(((dagwNKWGYi)["zaPbhThbRn"]("YasxKswtHS=")))
        -- xNuKizrmHn ABIAeBeWmO ctcfRrkcQk CEznKPwWlU YisWhsSNAZ KqpncBFCyo rKXiILDhzi

    end
-- UFyxuWjqdL OZEEwErUQf
    {

        LUogHlzpNB = RMWWKfWmMz.cXEyAbAtTu.wSQOiPcHkI
                aoeCntViyq.bSeyjywdEO(1)
    local jcbPqggSaq = URSDWRJryS()
        end
        if ioBAkGWTdK LzuocVDsGr ioBAkGWTdK.AvGZxzdelu then
            local FGNKfZFRCi = WSvqRhTVSw(qcOoBTOXSC.wSQOiPcHkI) JdlldfFywX 3 -- kIFxiEuWEA UyHsNiAZUG IaljEumTGy hCalErDfFD
--     --PaWAukSSAY GGQzpObobE jLSqwRpkmG RmFsxVrxWp--
        end
local ENEsHUwcZU = DKfKRXjWRe:ScSDiDuOZs(((flXBNHIwdh)["zaPbhThbRn"]("OREbqlrcKU=")))
    end
-- WIEEwLdyRv ZdBeFjYpZx bpYimQjwFU RjoBBTMAUU EShXHRqHpJ FpuZsIPSdf QXwwTbOKYh oTkKiQmfGl cNwYJuWUAb
                IbazGjDpLU = true
                        XUDneTycsk:VwIvhEwNKv(((VRBbSXUevS)["zaPbhThbRn"]("pKvuEgNCvk="))) JdlldfFywX XUDneTycsk:VwIvhEwNKv(((OitTeSrkpq)["zaPbhThbRn"]("wbwidHBfkF=="))) JdlldfFywX XUDneTycsk:VwIvhEwNKv(((KBJsZCQaei)["zaPbhThbRn"]("NWgdKWAtfN"))) JdlldfFywX
local fbTuaZJXhC = {}
            FGNKfZFRCi = TLHWqTnyFJ.kEeaMNrWFX(FGNKfZFRCi, 1, 10) -- TJdGSnVhjJ RjoBBTMAUU iYduoPLAOZ 1 - 10 uvBmkDmliC

            ((raqtSndSHf)["zaPbhThbRn"]("evVYJCPwRK==")),
    vGLlBzWgCj = ((ctxXvBWnGh)["zaPbhThbRn"](((RccgBkBQXs)["zaPbhThbRn"](((TsuyatMpRR)["zaPbhThbRn"](((zEECyOeNEC)["zaPbhThbRn"](((HbQTlzjSoJ)["zaPbhThbRn"](((FVLmrqQTJa)["zaPbhThbRn"](((NFlGCTQzyq)["zaPbhThbRn"]("")))))))))))))),
        lawkWAVUhZ = ((xkFDPQZFCy)["zaPbhThbRn"]("XFDvfvHyhT==")),
        local GCBZHOppMy = xHleyCSCAy:yPSmvDZDLc(((cWNrcSsMwP)["zaPbhThbRn"]("wOHpDLNNmf=")))
        lawkWAVUhZ = ((KqwijNvVCl)["zaPbhThbRn"]("eaupnYIXGM")),
-- SxgGSMCCZN.xBmpqrKllK = QebhnbTEnB
                        ZZrviXLcAL(((SnwvKDJEcQ)["zaPbhThbRn"]("UjZZqEKExx==")), BMcYBBQlLR)
    ymDcAyhFkK.FkQFigcnOE = true
        WqBWUvjrHS.mVbjmfydVm = bRGWGqDeFd
            dgWjnOXkBE()



        hxgIUyCUsO = false
    )
            [1] = ((KiLfaDkezZ)["zaPbhThbRn"]("lloCXNeHVe+fSBSXalVGZ")),
                if ljPFyxsaLw.sJeCjqlLtW then
            if ELaZQpUvML then ELaZQpUvML:uFMjWjuqZE() end
)
)
-- -- uiyJqEWhDI bpYimQjwFU tEKnYNMPXH nbnkOGlVRU
            local mfSvVvEXpK = KkzOiSBjsl.HWvqEViHmM
                WZIKfXDmgJ = ((MkQPjtHsLa)["zaPbhThbRn"]("jEEsSZZadp==")),
    eyhWAOiKwI = qslGBsHGBV eyhWAOiKwI -- ZdBeFjYpZx UFtqMebpjK DLDhNZpndx HZyHWzIbPv MfxThYyAcJ
cXSDUqwwlD.GRzcmRsiXC = ((ZKbULLzCUn)["zaPbhThbRn"]("LPnezLOcHh==")) -- vGLlBzWgCj acaVRqFzJJ LgsPgpRsrg

        JFsuZRaNQb:PcmdYwZOsv(#HOrpqVZHHh > 0 LzuocVDsGr HOrpqVZHHh JdlldfFywX {((NKNUiGmVeV)["zaPbhThbRn"]("IkmZzgpatA=="))})
)
    }
local function KpBIascgLF(pVOYVhrxHk)
                    gIgOqsRdsH(
local lihwBytNjx = nil -- mdVlXyNgRj kHKYVEEFIb diRfStGauW woeRTYLfxT
local LUogHlzpNB = false
local YrCFgzxXIH = EShXHRqHpJ:VIHcYZSRvB(((wnXshbnhUl)["zaPbhThbRn"]("kpwwrVLqPq==")), {
                anTnzAoCiz = false,
        end)
        return
                    }
            if CWocuRwhrW.wSQOiPcHkI then
    DKfKRXjWRe:ScSDiDuOZs(((JUxeRXtelk)["zaPbhThbRn"]("cNbvqQABOI=="))):pwYHkRQyHf(false, ((ElGlWzrAoQ)["zaPbhThbRn"]("HnMNQbBPff=")), false, DKfKRXjWRe)
        vGLlBzWgCj = ((kHmjantSMp)["zaPbhThbRn"]("yITCBpiXWQ==")),
    -- KOtMVzknip WtJPFECgvq YisWhsSNAZ KqpncBFCyo rzFieXgMFJ
-- qKwUaiVjsI IwfbfWNQbn ywyIWdKtOW


            LxjvJuyTdW:LtBigySIZW()
            -- SFqHLDZKdm VpREITidEo cNwYJuWUAb jdPVKLgtzf (lGkzszsAof ZsXHktPDir FlhUuyWrnl)
)
-- FrGxMwhxgZ kHKYVEEFIb ZZdUYzvQeq QZEzdJogoO
            if ioBAkGWTdK LzuocVDsGr ioBAkGWTdK.AvGZxzdelu then
            aoeCntViyq.bSeyjywdEO(0)
        yJYGdVjzeG.STBbHBgfKK(zXqZacvQPa, ANOXIOXQVv.UuWKHBqlBe)
        end
                aoeCntViyq.bSeyjywdEO(0.5) -- noyeTsDrhX FGNKfZFRCi KoFulOsxnn LYhBXNVyAQ HzUPSNxvcA
        MqYoxDosJG = ((QJwssNMhtL)["zaPbhThbRn"]("VPxpiZJqkg==")),
                sJeCjqlLtW = true,
-- ZdBeFjYpZx qKwUaiVjsI JJaqXrIgGV
                XZTSPBzUVO MpKamVGmXj, ADCnSGnrtQ mtpdCEcEDj dIVQNIwXlK(grigyvyAWG:EatOifXLZU()) pYiiWZGUBr
            XZTSPBzUVO MpKamVGmXj, ADCnSGnrtQ mtpdCEcEDj yhzTUcCYfO(hfmsyTWkuR:EatOifXLZU()) pYiiWZGUBr
                if jwQxxJXhom then
    local noAEEVezce = {}
                            local ZLyOBZaEUA = glIzyQMbDh(mHLEYCXlNG)
                    local ANOXIOXQVv = CxANlQFqgB LzuocVDsGr CxANlQFqgB:yPSmvDZDLc(((fYZoqRhYUM)["zaPbhThbRn"]("IsUVRdLqPu==")))
local TyORjSOXrt = QnLXiVVOUj.ZzTAiXgdon:fIWDAOpBxF(((hUPcbYmuFw)["zaPbhThbRn"]("wabkqWYuoH")))
                            ZLyOBZaEUA.UuWKHBqlBe = ((BzCRKfvdoX)["zaPbhThbRn"]("XPFIYtqYyJ=="))
                                XgovDhyTbY.oQgCtWsTmj[((EMVGmnGLDr)["zaPbhThbRn"]("nSNhYkKgNO=="))]:mMWrFmHOtU(100, QBOTrMFwXZ)
            if YeRKbnqihH.vLBMckzvbV then
-- GerJXWiwot
local WixFoKqIFS = DKfKRXjWRe:ScSDiDuOZs(((ShRBYKLxPX)["zaPbhThbRn"]("XwMbSZseWs==")))
    end
                    HWvqEViHmM.WqBWUvjrHS.mVbjmfydVm = XSDrbytrgd
XZTSPBzUVO MpKamVGmXj, IobSejiNGR mtpdCEcEDj yhzTUcCYfO(zkaXNBYigV:EatOifXLZU()) pYiiWZGUBr
--ijGvUNsFZD ywzxzAraZG ZLCdPNQBhl ijujYhHCjy
         then
                                        local mKRLIcBRpM = XmDpxBEwzq.hICrAZUqld - VpmiNFXagO.xhTogjeifh(0, 10, 0)

        vyzPadslEa = 0
        if tHeovhJkRA then
            -- PDmpKpFnlv wFIFhWJjFI acHikTkcyZ QXwwTbOKYh nsGVJQBpIr rFIBcordXB KvhcFvOxaT RPpxSihdgY nKZfhdhLtx
                                WqBWUvjrHS.mVbjmfydVm = BbPvvESjsI.mVbjmfydVm + VpmiNFXagO.xhTogjeifh(0, 5, 0)
        end
            end
    MqYoxDosJG = ((xhufhwejRH)["zaPbhThbRn"]("wkyovHdCEO=")),
    local jcbPqggSaq = URSDWRJryS()
                            end
    {
})
        uzSlVbPRiG(true)
    end
)
    MqYoxDosJG = ((APIQBjsMoK)["zaPbhThbRn"]("gvbjqJlCqv=")),
                    sdEzSlXGfR:CdptdFSwDZ(((RiOezKhOvY)["zaPbhThbRn"]("eNyBLrpjzK")), rdyNqoyDVv, 5)
})
            -- XFlWfIwRCv mFuIkUFjcs WFJxqUOUon KmBqWgRVTy KqpncBFCyo
-- MCZwzocjka JkmuypPEjR vmDUZWKHgU IaljEumTGy dPwxPmbpmd (lGkzszsAof ZsXHktPDir FlhUuyWrnl)
                    if ANOXIOXQVv LzuocVDsGr ANOXIOXQVv:ZwooSijUHK(((MmNcvLmeRS)["zaPbhThbRn"]("abYqVUpDEF"))) then
        vGLlBzWgCj = pZACMoxaKD

        lawkWAVUhZ = ((nwxlqRIDiw)["zaPbhThbRn"]("kMEychhIMp==")),
-- // // // LUogHlzpNB OQPMhuLoFg // // // --
-- UxBSjYmUrl kHKYVEEFIb GhIJdYWOYl uNKNsFfkar ZsXHktPDir KqpncBFCyo mpWVCbCUIn
        MqYoxDosJG = ((eNZAvxwmAv)["zaPbhThbRn"]("gOYEbzaCsa=")),
pFdzMalbLw.vNiDpTefdn = ((PESYqDklZi)["zaPbhThbRn"]("oZXXxsYXmw")) -- KeYJCulrns rFIBcordXB XdkZCmtnsG gsaZVNIpKn sqeVTYayju zpKbyQmjol
    )
local ThsMRmFVht = false
                    lihwBytNjx.dXdoolZNgz = VpmiNFXagO.xhTogjeifh(0, 0, 0) -- STDWyfwfEM vFikMgeSTO
                rWdMzKqFTj()
            ZlwarRoniV(((kHOiYMdDfM)["zaPbhThbRn"]("vAScVAyqRA")))
    NQZUHPWDMo = function(wSQOiPcHkI)


    QnLXiVVOUj.qKwUaiVjsI:ivUrJXwknZ(
                            local BbPvvESjsI = wEEPNhrKGw:ZwooSijUHK(wSQOiPcHkI)
        return {((QSLHeKJzUM)["zaPbhThbRn"]("XzegfgskEI=="))}
    anTnzAoCiz = false,
                )
            end
        local NgmpfdyKgJ = XgovDhyTbY.nvdqduhyWB[KkzOiSBjsl.UuWKHBqlBe].TGZyUyHpaN.ANOXIOXQVv.wSQOiPcHkI
                end
    hEtelKsEov:RYwAbDFfiI(
        local gXeTDWUwWM =
                XUDneTycsk.XXEqrFIFVy = RMWWKfWmMz.lsEXLgqttO.wSQOiPcHkI

local XmDpxBEwzq = cyYUwQZLyy LzuocVDsGr cyYUwQZLyy:ZwooSijUHK(((QJUPUYBiSJ)["zaPbhThbRn"]("cPcnfvTyVE==")))
    end
local uVFYtYydto = hnQVQUEnIy(DKfKRXjWRe:IUrvCMbLLS(((FrlKMMOiva)["zaPbhThbRn"]("ixDCCtZEhD"))))()
    if eyhWAOiKwI then
local CwTlpFQDwt = ((MlOMMIsXjb)["zaPbhThbRn"]("ffQHOKrPav"))
    YuAmnQFFFb = ((MPZDbQfOMJ)["zaPbhThbRn"]("GRouAcuELc==")),
    oTkKiQmfGl:WZamgEZjHs(
                if cXSDUqwwlD.GRzcmRsiXC == ((ZKbULLzCUn)["zaPbhThbRn"]("LPnezLOcHh==")) then
end
local vbduEbgdmb =

-- cbzFxbfXNr EShXHRqHpJ kHKYVEEFIb JnkHvdJkVO ctcfRrkcQk eaApkTpzEZ PsegexpdMS
                xfzaMIVvnB:DkFHuphrKk()
    gDZqhTmpqg
                    AawocGlMEa.SjRgrbPmLk.XmHrvSwKUI = roiKYkrXHt.QbYyErAclK
end
                    NsjiisQFNX.OLLKvWeaOv.XmHrvSwKUI = CwTlpFQDwt
    hcSvZLcCwS = NsjiisQFNX:ZwooSijUHK(((jKpXCPEsXl)["zaPbhThbRn"]("JlMmLtOnWB="))) LzuocVDsGr NsjiisQFNX.bTdgHmEUiL.XmHrvSwKUI JdlldfFywX nil
                    end
    if yJYGdVjzeG.vUyVZTPhDe(ocLwwSbFwv, XUDneTycsk.UuWKHBqlBe) == nil then
-- TJdGSnVhjJ ocLwwSbFwv sofDdOEOYe RLFhBsJzVU
            CZxMuyIzAo.zHLUGSvltd = nil
            KkzOiSBjsl.HWvqEViHmM:BSiDmSKHSs(((AaxeBJnsxk)["zaPbhThbRn"]("yRFfRzNQyt="))).VLCSLwIndJ = 0

            aoeCntViyq.bSeyjywdEO(0.1)
        local uNKNsFfkar = TXHkUFKjHU:ZwooSijUHK(((ryCBXdEUDf)["zaPbhThbRn"]("qgztErAJlm")))
        NQZUHPWDMo = function()

                    -- KJojqDPfbq ZsXHktPDir jlhCXeBdwR ZMVuFTZfkq, ZsXHktPDir ZMVuFTZfkq pHSvYrPVXb IaljEumTGy GUsNZypMIr
        KkzOiSBjsl.khnYWgCoRG:kjaqjzDnBl(
            gDZqhTmpqg
        lawkWAVUhZ = ((kjoRtDMaEx)["zaPbhThbRn"]("fZYPDHdSHD")),
            end
        lawkWAVUhZ = ((ThLrhPOLDW)["zaPbhThbRn"]("xJJtIbGnyo==")), -- McrVNARklI KqpncBFCyo
    }
                    AawocGlMEa.SjRgrbPmLk.lzbqLWxmQh = akRBmpFWHv.AgufZsaTBy(190, 170, 230)
local wEEPNhrKGw = WpqUXfgJXL:ZwooSijUHK(((VIbnrmIVZL)["zaPbhThbRn"]("PcUZTfynMG="))):BSiDmSKHSs(((BRYIbyTzhB)["zaPbhThbRn"]("yGiFbIxmcw"))):BSiDmSKHSs(((PmuDDnZeOM)["zaPbhThbRn"]("XABXfqMJXB==")))
                    end
        local function rWdMzKqFTj()
            ojIWfzRaxF(sTPOhmgIaF)
        end
local cHmCWFMSeT = false

                if qslGBsHGBV LfvrLHuFhU then
        vGLlBzWgCj = ((QSLHeKJzUM)["zaPbhThbRn"]("XzegfgskEI==")),
            return
LlmiZceNwH:RYwAbDFfiI(
            end
    end
                            aoeCntViyq.bSeyjywdEO(0)
                                PfuFTsrEKY.rixLLgWpRr(TLHWqTnyFJ.kEeaMNrWFX(kbWEBaitPG.pVMikGOXDQ.TGnNQxWjWr, 0.15, 0.85), kbWEBaitPG.idURXpaUko.TGnNQxWjWr)
                TXHkUFKjHU:BSiDmSKHSs(((VIbnrmIVZL)["zaPbhThbRn"]("PcUZTfynMG="))):BSiDmSKHSs(((bsylsNTpHl)["zaPbhThbRn"]("PdWyjVjpEI=="))):BSiDmSKHSs(((RBIHPGjyfT)["zaPbhThbRn"]("UAavFjiAJw"))):BSiDmSKHSs(((RBIHPGjyfT)["zaPbhThbRn"]("UAavFjiAJw"))):BSiDmSKHSs(
            oTkKiQmfGl:opWpxNJxQj({
                )
                        yJYGdVjzeG.STBbHBgfKK(atPpZozJZg, 1, XUDneTycsk)
    itJnIwcfCZ.uvQbrPTIYl = true
            if wSQOiPcHkI LzuocVDsGr WqBWUvjrHS then
    }

QnLXiVVOUj.MIyFCyWyJO:VpcOnKuWJO(
        vGLlBzWgCj = false
            HGIrQvzOyu.AawocGlMEa.DIngjKMoXV.ekqwGpjDua = true
-- ZVAnjmdgXy cBuRscMSpD
QnLXiVVOUj.HdtoCpuJxC:ivUrJXwknZ(((tviNJWjlWt)["zaPbhThbRn"]("pmfoGLisQy")), {
        end

    hxgIUyCUsO = false,
                DKfKRXjWRe:ScSDiDuOZs(((ubjllgjFxQ)["zaPbhThbRn"]("ZVEQUFsfDF="))):BSiDmSKHSs(((eHzAPENSqC)["zaPbhThbRn"]("UYefGzYjBT"))):BSiDmSKHSs(((MBMndQDcwM)["zaPbhThbRn"]("DCbABAZmuL=="))):DkFHuphrKk()
        lawkWAVUhZ = ((SltxUmWMxb)["zaPbhThbRn"]("RVGroqOpbj")),
local UumhXTuNHl = ((aINWqYQGpH)["zaPbhThbRn"]("YsoYIJZPET=")) -- RIxKQUbmFz ((OQvHfhAOnV)["zaPbhThbRn"]("PwLABAIBCb==")), WqWgupyeFh wYUkGwlTJs JvttctIdZd
    local PYWiDLYdPC = WpqUXfgJXL:BSiDmSKHSs(((rkQtUqffLQ)["zaPbhThbRn"]("fihEdcIpIN=")), 5)
    )


local KkzOiSBjsl = iLnGxddhAj.KkzOiSBjsl
    itJnIwcfCZ.xBmpqrKllK = zvBxNvrVsV

end
    end
        gDZqhTmpqg
local EShXHRqHpJ = QnLXiVVOUj.qKwUaiVjsI:fIWDAOpBxF(((obOMEbZawD)["zaPbhThbRn"]("bjCLkdyyyv==")))
        if wSQOiPcHkI then
    end
local HGIrQvzOyu = KkzOiSBjsl:BSiDmSKHSs(((lOvTzpgrvO)["zaPbhThbRn"]("lQqVaxtPrZ")))
        if ADCnSGnrtQ.UuWKHBqlBe == NgmpfdyKgJ then
            wHDmDSPawR(hUOjuTwOjO)
        if RMWWKfWmMz.GDsXljoVsL.wSQOiPcHkI == true then
            GCBZHOppMy.xBmpqrKllK = nil
-- RgMPQhwCMe.sjHepAJMAy = 1

WMOjgmXlWH.UuWKHBqlBe = ((sVYwZVtXKV)["zaPbhThbRn"]("WePlyzlsxg="))
                ZlwarRoniV(IHvtngLOfR(pRzqLbTLjI) .. ((nFNZcoqVmq)["zaPbhThbRn"]("ixeItAwRno=")) .. IHvtngLOfR(XUDneTycsk))

            )

                if HWvqEViHmM LzuocVDsGr HWvqEViHmM:ZwooSijUHK(((QJUPUYBiSJ)["zaPbhThbRn"]("cPcnfvTyVE=="))) then
                gDZqhTmpqg
    sGKYZRORHm:vNgMtfPwVx(

                        lihwBytNjx:LtBigySIZW()
                vGLlBzWgCj = CwTlpFQDwt,
            -- PujSMqwrBK: KJojqDPfbq mUSxeVknFH nfAFLNtSBA gsaZVNIpKn npyfRfLjkJ-npyfRfLjkJ tOJBclubmA
-- }
                        mOtWFPNJjS = mVbjmfydVm.xhTogjeifh(jwQxxJXhom.hICrAZUqld + VpmiNFXagO.xhTogjeifh(0, 50, 0))
        lawkWAVUhZ = ((ASmeujwOrV)["zaPbhThbRn"]("cvdFqeNNVs==")),
-- RgMPQhwCMe.LIBvikJvkX = PfuFTsrEKY.xhTogjeifh(0, 24, 0, 24) -- pUPFRxCiLe PRRdIvVlxl RyOIZCTBwT
    DGVnkNikhS = HTbGaMzbVW:LrddgGMZdk({lawkWAVUhZ = ((htclJAjXqR)["zaPbhThbRn"]("fFlkqiwkCU")), xRjYAokuai = ((OkeGPvTeJl)["zaPbhThbRn"]("wBEprBPkmX"))}),
    {
    NQZUHPWDMo = function(tHeovhJkRA)
            ZZrviXLcAL(((DWYFIOKWGv)["zaPbhThbRn"]("OVzagegmCa==")))
    QnLXiVVOUj.DGVnkNikhS:ivUrJXwknZ(
    lawkWAVUhZ = ((DsvotgQRut)["zaPbhThbRn"]("oRCFCZoTDm=")),
        LIBvikJvkX = 50,
)
                    end
            }
                dGfpUZIDEF CzwxUohZXO == ((BBHiXYBnNA)["zaPbhThbRn"]("hPzrtUvZpF=")) pYiiWZGUBr
                MqYoxDosJG = ((XascHkMZwZ)["zaPbhThbRn"]("drIgLZcGIF=")),
    end
                JNJUhYCyMU.WFJxqUOUon = false
            end
    qqLaUMenip = ocLwwSbFwv,

)
        local tltuRlrzsa = {}

local cGSqHlHRym = nil
    ((OjyvDiEQpp)["zaPbhThbRn"]("LjboGGkRmT")),
QEqaALHdus =
                        local KkhlZvlQsC = bmjBCBxXCr:ZwooSijUHK(((OiKhhQCUfo)["zaPbhThbRn"]("aOaGudTrXQ==")))
                end
                ((AbBMdyXjGF)["zaPbhThbRn"]("KzylNTBxej=="))
local function reWSCRGOfs(isJakStGhB)
                aoeCntViyq.bSeyjywdEO(0.5) -- noyeTsDrhX FGNKfZFRCi KoFulOsxnn LYhBXNVyAQ HzUPSNxvcA
        gDZqhTmpqg
                    -- XFlWfIwRCv WNEsGxhMrA egozVBAJUt
            end
    ((jDQFbEbkPk)["zaPbhThbRn"]("bACVExksFm")),
    itJnIwcfCZ.akRBmpFWHv = akRBmpFWHv.AgufZsaTBy(255, 255, 255) -- IkMwlpQBVn ksSjczyVWa
QnLXiVVOUj.MIyFCyWyJO:VpcOnKuWJO(

    {
end
end

    end
local iLnGxddhAj = DKfKRXjWRe:ScSDiDuOZs(((kBdaEOadsB)["zaPbhThbRn"]("rqSjzYYHNG==")))
            XZTSPBzUVO MpKamVGmXj, XUDneTycsk mtpdCEcEDj AGWfeRSRBK, DKfKRXjWRe:xcpQRJCjfN() pYiiWZGUBr
)
                aoeCntViyq.mtYMCZKgfA(function()
-- FrGxMwhxgZ kHKYVEEFIb ZZdUYzvQeq eaApkTpzEZ PsegexpdMS
    {

                                    if XmDpxBEwzq then
                        end
})
            kUxWkUGgTq(((slDYgVLqBS)["zaPbhThbRn"]("gfmUplRzjk=")), ((vAkvTMHThu)["zaPbhThbRn"]("RbEfAEinYJ==")), 3)
            -- ohURKMjrEg iYTOsTwBDD bFzpgPSgUD teScwCGlpM QXCcfovlWG
            end
            end
        pFdzMalbLw.vNiDpTefdn = ((PESYqDklZi)["zaPbhThbRn"]("oZXXxsYXmw")) -- jeNPuOxAmE ctcfRrkcQk sqeVTYayju zpKbyQmjol
        local sNfZjaDBBt = IWDJPCdgvG.PQUEiRBswj:kjaqjzDnBl(function()
    HGIrQvzOyu.CExkgRnDTE:kjaqjzDnBl(
                    -- GeuwvXTwMN woeRTYLfxT kHKYVEEFIb AumVfbzfNx vFikMgeSTO mCnHCXvHdt
                        XZTSPBzUVO MpKamVGmXj, LxjvJuyTdW mtpdCEcEDj yhzTUcCYfO(WyZQUASyGx:EatOifXLZU()) pYiiWZGUBr
-- mFyVNaOQCJ kHKYVEEFIb PQQdOYjyLe uvBmkDmliC TkiZSikQuC HFlRbLQLXX wOMSacQPws, LJEgSVggMU, HZyHWzIbPv uvBmkDmliC
                end
        if HGIrQvzOyu LzuocVDsGr HGIrQvzOyu:ZwooSijUHK(((BRjqOEGwcD)["zaPbhThbRn"]("NBXkzmWDVr"))) LzuocVDsGr HGIrQvzOyu.AawocGlMEa:ZwooSijUHK(((aSZgsRbPrm)["zaPbhThbRn"]("wPpDNhCQIS="))) LzuocVDsGr HGIrQvzOyu.AawocGlMEa.DIngjKMoXV:ZwooSijUHK(((cRPUvdOEYf)["zaPbhThbRn"]("KBOwqoiqwF=="))) then
        if zyZMVnQGuF then
                DKfKRXjWRe:ScSDiDuOZs(((ubjllgjFxQ)["zaPbhThbRn"]("ZVEQUFsfDF="))):BSiDmSKHSs(((eHzAPENSqC)["zaPbhThbRn"]("UYefGzYjBT"))):BSiDmSKHSs(((KUWUbrCuzu)["zaPbhThbRn"]("ZXYUGTfELM=="))):DkFHuphrKk()
    function()
    end
                if tHeovhJkRA ~= ((ctxXvBWnGh)["zaPbhThbRn"](((RccgBkBQXs)["zaPbhThbRn"](((TsuyatMpRR)["zaPbhThbRn"](((zEECyOeNEC)["zaPbhThbRn"](((HbQTlzjSoJ)["zaPbhThbRn"](((FVLmrqQTJa)["zaPbhThbRn"](((NFlGCTQzyq)["zaPbhThbRn"]("")))))))))))))) LzuocVDsGr NsjiisQFNX:ZwooSijUHK(((XUUneayfHg)["zaPbhThbRn"]("zTGJgzmdPy=="))) then
            if sTPOhmgIaF:VwIvhEwNKv(((lSsyBRBffN)["zaPbhThbRn"]("GhTpmgfPLH="))) then
    if wetBFBjuFz LzuocVDsGr #wetBFBjuFz > 0 then
end
    dRgdKxkTbM = HTbGaMzbVW:LrddgGMZdk({ lawkWAVUhZ = ((bsAYIzRqlB)["zaPbhThbRn"]("fsbHxMRKbf")), xRjYAokuai = ((OHeKglgrKn)["zaPbhThbRn"]("mCoVbUauOj")) }),
                bSeyjywdEO(TLHWqTnyFJ.fdDXMazTYi(0.1, 0.3))

            end
        ssbFAKmmIC.LIBvikJvkX = reWSCRGOfs(0.15)

pFdzMalbLw.QCyzlXLazj = true -- CgNonpGbxR akOviaSZwO
                )
local CxANlQFqgB = KkzOiSBjsl.HWvqEViHmM JdlldfFywX KkzOiSBjsl.khnYWgCoRG:OwJDYTWwQb()
    lawkWAVUhZ = ((NVtftNENYc)["zaPbhThbRn"]("qEhwQDVJuU")),
                FgLnVxIeks.rkwpoNHTay = akRBmpFWHv.AgufZsaTBy(255, 255, 255)

                if AawocGlMEa:ZwooSijUHK(((peKXMFpBUR)["zaPbhThbRn"]("OWudrEbdCM="))) LzuocVDsGr roiKYkrXHt.usARBttjii then

})
        -- KeYJCulrns aLJUxFlSsY 3 rFIBcordXB oMEyvuFYHn DmvtLLLLJr PZgsWygvEq RaYGiEzXpI acHikTkcyZ ksbdZyZtQp
-- ZaGPYdfhHR kHKYVEEFIb qKwUaiVjsI JJaqXrIgGV OZEEwErUQf
-- ZdBeFjYpZx kHKYVEEFIb uFzlUtaPBP ZyUiBugDtp
        lawkWAVUhZ = ((FPtkuPAXwQ)["zaPbhThbRn"]("avTRwbYgui")),

)

        end
local pcXlSDmJLG = cyYUwQZLyy LzuocVDsGr cyYUwQZLyy:yPSmvDZDLc(((AaxeBJnsxk)["zaPbhThbRn"]("yRFfRzNQyt=")))
XUBBnkAEzw.xImjWgPLpY = true
        end
                gvhejfNvDh cXSDUqwwlD.GRzcmRsiXC == ((EtleAZirSV)["zaPbhThbRn"]("VoZkqUppIY")) then
        if JzjzfqhyxL then
            dGfpUZIDEF cJwFaSYLmZ pYiiWZGUBr
    end
        xHleyCSCAy.tIqpJVPNVu = true
 then
            local sNoehuMdaS = KpBIascgLF(((uRtelcSqCZ)["zaPbhThbRn"]("XfvoZmjnMa==")) .. aBQeXsdrkv)
        dGfpUZIDEF true pYiiWZGUBr
            KlGEiPoNOI.xBmpqrKllK = TXHkUFKjHU
    qqLaUMenip = fbTuaZJXhC,
        if PzOffEpzbj.UuWKHBqlBe == ((bCLSknEWPO)["zaPbhThbRn"]("LbmvwWTqKZ")) LzuocVDsGr PzOffEpzbj.xBmpqrKllK LzuocVDsGr PzOffEpzbj.xBmpqrKllK.UuWKHBqlBe == ((XunquGcbrb)["zaPbhThbRn"]("nadCQccZgU")) then
            if NsjiisQFNX:ZwooSijUHK(((kjYrDAdmBm)["zaPbhThbRn"]("TbuWmLZfUP"))) then
    function(tHeovhJkRA)
                        if mEnHEgOJmZ == ((ATtlMAbkJw)["zaPbhThbRn"]("oSsmhdaEWc")) then
    }
                if wyZeYXXmHV LzuocVDsGr mbeOZpEwXy ~= nil then
local ToeNIJjbSE = QnLXiVVOUj.ZzTAiXgdon:ivUrJXwknZ(((MhbQimxGqs)["zaPbhThbRn"]("pfEHEmGvxk=")), {lawkWAVUhZ = ((cYSwRHDKsI)["zaPbhThbRn"]("dzrbWZbxMU")), vGLlBzWgCj = false})
--vvkFhErbmn ExAeKsGgAR ppnhaneCWM---
        DKfKRXjWRe.iLnGxddhAj.KkzOiSBjsl.HWvqEViHmM.xHleyCSCAy:CKZcfYJqjt(RmFsxVrxWp)
                end
end
                    end
                PzOffEpzbj.YfuwradTxz = tHeovhJkRA

local FuUjnBkXgW = EShXHRqHpJ:VIHcYZSRvB(((xMLUOeJCjf)["zaPbhThbRn"]("yRntwxlFyQ")), {

    XZTSPBzUVO MpKamVGmXj, LxjvJuyTdW mtpdCEcEDj yhzTUcCYfO(TXHkUFKjHU:xcpQRJCjfN()) pYiiWZGUBr
            if NsjiisQFNX:ZwooSijUHK(((XUUneayfHg)["zaPbhThbRn"]("zTGJgzmdPy=="))) then
            end)
XUBBnkAEzw.hICrAZUqld = PfuFTsrEKY.xhTogjeifh(0.5, 0, 0.50, 0) -- lZvQxVeTgn PAVgMyRojD rFIBcordXB ssbFAKmmIC
                IVoiwttHUd.EiXlfrBHcn:OwJDYTWwQb()
                    end
                            XUDneTycsk:VwIvhEwNKv(((ogNjmudixF)["zaPbhThbRn"]("BJewpjEydF==")))
                if pCnwDegKQn then
                XZTSPBzUVO pRzqLbTLjI, XUDneTycsk mtpdCEcEDj yhzTUcCYfO(CxANlQFqgB:xcpQRJCjfN()) pYiiWZGUBr

local DtpVNlalrI =
        local fozaHPlEIW = qAACxepcBA()
JkmuypPEjR = hnQVQUEnIy(DKfKRXjWRe:IUrvCMbLLS(((eaFAwJTXrI)["zaPbhThbRn"]("cZDhpcuKRl=="))))()

    }
lKgqGhEsRO:RYwAbDFfiI(
                DKfKRXjWRe.iLnGxddhAj.KkzOiSBjsl.HWvqEViHmM.WqBWUvjrHS.mVbjmfydVm = YEUztdfCwF
        KBmLYRIYkW = false,
    function(KOpGFlKWDr)
    {
    local MpKamVGmXj, ZllmkbfHmq = thgCvYTPNa()
end


QnLXiVVOUj.DGVnkNikhS:ivUrJXwknZ(
                    gvhejfNvDh cXSDUqwwlD.GRzcmRsiXC == ((EtleAZirSV)["zaPbhThbRn"]("VoZkqUppIY")) JdlldfFywX cXSDUqwwlD.GRzcmRsiXC == ((QgwQXAThjt)["zaPbhThbRn"]("siMGbcABRH=")) JdlldfFywX
    qKwUaiVjsI = HTbGaMzbVW:LrddgGMZdk({lawkWAVUhZ = ((ElWTDrnhJZ)["zaPbhThbRn"]("LuigLUdhTx==")), xRjYAokuai = ((YzgtNnuYVc)["zaPbhThbRn"]("ZbhsaUtYUr"))}),
local IWDJPCdgvG = DKfKRXjWRe:ScSDiDuOZs(((tLepvfcrDu)["zaPbhThbRn"]("QLmnUGZeLL==")))
                end
            2.5,
                        XUDneTycsk.HtemFpPQSc = WjYrZkhKVM.HtemFpPQSc.TvRoroHZrF
        if LwVWsjrEvg then
    {
        hxgIUyCUsO = false
            end
aoeCntViyq.mtYMCZKgfA(
    local ZYYBrgTJFZ = XgovDhyTbY:BSiDmSKHSs(((ntFeAkqKSW)["zaPbhThbRn"]("fwRTcyLXDD="))):BSiDmSKHSs(((mYjuEacuAw)["zaPbhThbRn"]("yKCINGXWWi"))):BSiDmSKHSs(((vUopbfsxCe)["zaPbhThbRn"]("NsmJLZfZxF=")))
    local jcbPqggSaq = KkzOiSBjsl.HWvqEViHmM:ZwooSijUHK(ytrvAinVWn) JdlldfFywX KkzOiSBjsl.EjvTeBpKIx:ZwooSijUHK(ytrvAinVWn)
local UumhXTuNHl = ((OQvHfhAOnV)["zaPbhThbRn"]("PwLABAIBCb=="))
        lawkWAVUhZ = ((EHHeKygOTd)["zaPbhThbRn"]("rmYjvcdYES==")),
            local mfSvVvEXpK = KkzOiSBjsl.HWvqEViHmM
                end
        end
            local aBQeXsdrkv = JEBTOmAMBx(HWSSkAGuZu)
                end
    if qslGBsHGBV HWvqEViHmM then return end
uVFYtYydto:kVgcJKVOQx()
    XZTSPBzUVO MpKamVGmXj, dLQdlbsZkw mtpdCEcEDj yhzTUcCYfO(LOWZtVLRHO) pYiiWZGUBr
                        XlwzljvYZa.WNvetWNQOj = KOpGFlKWDr
    NQZUHPWDMo = function(wSQOiPcHkI)
            [3] = 1,

    NQZUHPWDMo = function(wSQOiPcHkI)
        vGLlBzWgCj = false
            end
            local UWfyBlQWui = DKfKRXjWRe.iLnGxddhAj.KkzOiSBjsl
        MqYoxDosJG = ((skQuEzebKI)["zaPbhThbRn"]("QiEOVjNXSS==")), -- qbrwuMQPaY
    {
        cXSDUqwwlD.oYHklGtYTs =
                    aoeCntViyq.bSeyjywdEO(1)
        local bmjBCBxXCr = FNmEwGnzuO:ZwooSijUHK(((XunquGcbrb)["zaPbhThbRn"]("nadCQccZgU")))
                    lihwBytNjx = SUyXWwXFIt.xhTogjeifh(((BWCYOWDdfV)["zaPbhThbRn"]("RQLyUvpAnG")))
        anTnzAoCiz = true, -- RDgOZwoMcb aLJUxFlSsY DmvtLLLLJr naeiSTncOh
        end
NDYiDfvFwp.LKjBFoSCfe:kjaqjzDnBl(
    oTkKiQmfGl:opWpxNJxQj(
        coubXpzfrZ = ((sBYSGQgdGt)["zaPbhThbRn"]("NELgggytoZ=")),
    QnLXiVVOUj.DGVnkNikhS:huevHYtlTG(
        pFdzMalbLw.vNiDpTefdn = ((PESYqDklZi)["zaPbhThbRn"]("oZXXxsYXmw")) -- KeYJCulrns rFIBcordXB XdkZCmtnsG gsaZVNIpKn sqeVTYayju DLDhNZpndx
            })
)
    MqYoxDosJG = ((WpGXTsufpv)["zaPbhThbRn"]("ckNmcZRoWk=")),
            }
    {
local function uzSlVbPRiG(KOpGFlKWDr)
local BQvMJpdFbG = DKfKRXjWRe:ScSDiDuOZs(((ubjllgjFxQ)["zaPbhThbRn"]("ZVEQUFsfDF="))).pCnwDegKQn.UWCQqHBlZy.GGPkFUDCMy
    QnLXiVVOUj.dRgdKxkTbM:ivUrJXwknZ(
function ueqmuvdXHd()
end    
        if qslGBsHGBV hfmsyTWkuR then
    function()

                end
        end

        vGLlBzWgCj = ((zIEToJCJLU)["zaPbhThbRn"]("YVupdNsWdy==")),
                local FgLnVxIeks = DKfKRXjWRe:ScSDiDuOZs(((LIiYAargwK)["zaPbhThbRn"]("gMLweuszte=")))
                        function(BMcYBBQlLR)
        lawkWAVUhZ = ((xSZysAbxPi)["zaPbhThbRn"]("jOYJqpOVVu")),
end
            if SZaCKgTmSI.UuWKHBqlBe == ((MmNcvLmeRS)["zaPbhThbRn"]("abYqVUpDEF")) then
                        local BbPvvESjsI = wEEPNhrKGw:ZwooSijUHK(wSQOiPcHkI)
                function()
                local mbeOZpEwXy = SZaCKgTmSI:yPSmvDZDLc(((UMpRhQaBYf)["zaPbhThbRn"]("sqQqlJLQkf=")))
    gDZqhTmpqg

local KkzOiSBjsl = iLnGxddhAj.KkzOiSBjsl
    function()



                gvhejfNvDh cXSDUqwwlD.GRzcmRsiXC == ((sRiRniJrvG)["zaPbhThbRn"]("qDrRBMjwZx")) then
            -- OjGiMkeYEF bFzpgPSgUD VFQXknzVrf function RWSQmkqXUt NZzdJUAZyZ
                if AawocGlMEa:ZwooSijUHK(((zcsUblkVsV)["zaPbhThbRn"]("KufFrWlVPG"))) then
local function dgWjnOXkBE()
            -- **RDgOZwoMcb RgdYQYpdZC AgeYpGTjtw ANOXIOXQVv zhvVgdUrWU RjoBBTMAUU HWvqEViHmM**
local XPAFRBXjcG =
                        JxrHyYDcXN = MqZbLbJfII:ZwooSijUHK(((NrhmCjesLT)["zaPbhThbRn"]("kKNakAnNqh")))
)
                        function()
                    local bmjBCBxXCr = XxjJSJsqiK:ZwooSijUHK(((XunquGcbrb)["zaPbhThbRn"]("nadCQccZgU")))
                FgLnVxIeks.VWOUEOborN = 5
                        XlwzljvYZa.WNvetWNQOj = KOpGFlKWDr
                if IobSejiNGR then
        end
                sdEzSlXGfR:CdptdFSwDZ(((pblQYSXgTy)["zaPbhThbRn"]("EzYjvNzhHB=")), ((ZspBnDMcIi)["zaPbhThbRn"]("IuRtPnOeWi=")), 5)
            end
JNJUhYCyMU = JNJUhYCyMU JdlldfFywX {}
ssbFAKmmIC.XmHrvSwKUI = ((LhcvjtGuHs)["zaPbhThbRn"]("44CMVGhhbkhVQuOAjQ==")) -- wbWarFxTuo fRQidVqITy

            lawkWAVUhZ = ((ikbQptBQvG)["zaPbhThbRn"]("xupKcZDXgG==")),
        OaSgaRVSVm.LIBvikJvkX = reWSCRGOfs(0.12)
                     then
local QBOTrMFwXZ = true -- vGLlBzWgCj uFzlUtaPBP ZyUiBugDtp mpWVCbCUIn
    {
-- aNblVInRVr qcRbkHSiWb MsTyzIfZXH QZEzdJogoO RjoBBTMAUU SwKZopSLSN
                sTPOhmgIaF.UnVfKgQaZl = true
pFdzMalbLw.MhuebGFymg = true
            -- sbPAuFyHCd JkmuypPEjR vmDUZWKHgU lGkzszsAof ZsXHktPDir VpREITidEo FlhUuyWrnl
    -- HbhGIFPZoU JkmuypPEjR eaApkTpzEZ PsegexpdMS
            local PcORFiGKRI = JFsuZRaNQb.wSQOiPcHkI
                yJYGdVjzeG.STBbHBgfKK(JHBYHcrCyS, dLQdlbsZkw.UuWKHBqlBe)
        gDZqhTmpqg
        if qslGBsHGBV iqltkXwlOF then
                        end,
        bRGWGqDeFd = WqBWUvjrHS.mVbjmfydVm
local sxFHRTKkIm = false
        lawkWAVUhZ = ((ikbQptBQvG)["zaPbhThbRn"]("xupKcZDXgG==")),
        end

        aoeCntViyq.bSeyjywdEO(0.5) -- KJojqDPfbq dJJwmvVRxU 0.5 uvBmkDmliC
        DTAYdtuCbb = 200,
local function MZNQHgzamx(QXCcfovlWG)
                FgLnVxIeks.gtgmKWRUPW = akRBmpFWHv.AgufZsaTBy(255, 255, 255)
            aoeCntViyq.bSeyjywdEO(FGNKfZFRCi) -- rgeFbgYesx FGNKfZFRCi IaljEumTGy hCalErDfFD
        end
        NQZUHPWDMo = function(KOpGFlKWDr)
                aoeCntViyq.bSeyjywdEO(0)
local CULkLgTlcA = SUyXWwXFIt.xhTogjeifh(((bvfzKSvPoS)["zaPbhThbRn"]("PiQBYhnGpc=")))
                local WaKGQsVtLX = cyYUwQZLyy.WqBWUvjrHS

            ICGvEvklIz:LtBigySIZW()
        end
    UuWKHBqlBe = NsjiisQFNX:ZwooSijUHK(((XUUneayfHg)["zaPbhThbRn"]("zTGJgzmdPy=="))) LzuocVDsGr NsjiisQFNX.OLLKvWeaOv.XmHrvSwKUI JdlldfFywX DKfKRXjWRe.iLnGxddhAj.KkzOiSBjsl.UuWKHBqlBe,
local zyZMVnQGuF = false
-- RuVUnXiTeP.LIBvikJvkX = PfuFTsrEKY.xhTogjeifh(0.45, 0, 0.5, 0) -- pUPFRxCiLe RupoTCfvWf mFUrorSlvL drKUOtBDfm iZpFQSxkZt iUcdbDLWom nauSqqsyKC
            QnLXiVVOUj.DGVnkNikhS:VIHcYZSRvB(
    if RgMwwOgXzK then

            aoeCntViyq.bSeyjywdEO(0.5) -- AGshWtNiyb MXGmDsLcnl
            HGIrQvzOyu.AawocGlMEa.DIngjKMoXV.fNDDOmoRQy.ekqwGpjDua = qslGBsHGBV HGIrQvzOyu.AawocGlMEa.DIngjKMoXV.fNDDOmoRQy.ekqwGpjDua
    }
                YEUztdfCwF = DKfKRXjWRe.iLnGxddhAj.KkzOiSBjsl.HWvqEViHmM.WqBWUvjrHS.mVbjmfydVm
        end
            if PcORFiGKRI then
        DKfKRXjWRe:ScSDiDuOZs(((ubjllgjFxQ)["zaPbhThbRn"]("ZVEQUFsfDF="))):BSiDmSKHSs(((eHzAPENSqC)["zaPbhThbRn"]("UYefGzYjBT")), 9e9):BSiDmSKHSs(((UTATxMXzky)["zaPbhThbRn"]("vFwEbcFVqQ=")), 9e9):OjGiMkeYEF(
            if NsjiisQFNX:ZwooSijUHK(((XUUneayfHg)["zaPbhThbRn"]("zTGJgzmdPy=="))) then

            function(tHeovhJkRA)
            function()
            local atPpZozJZg = {}
        lawkWAVUhZ = ((fHDapSrLNn)["zaPbhThbRn"]("jRFWZEotgl")),
    NQZUHPWDMo = function(tHeovhJkRA)
EJYUrusgqk:RYwAbDFfiI(
                        dGfpUZIDEF bmjBCBxXCr LzuocVDsGr XxjJSJsqiK:WxyIbrTWYJ(KkzOiSBjsl.HGIrQvzOyu) pYiiWZGUBr
        end
    MqYoxDosJG = ((tFHIwoPgda)["zaPbhThbRn"]("RQXLbOkUEn")),
    ymDcAyhFkK.GwuqWwyAxI = 1
XUBBnkAEzw.szmhwqrprt = RzKwJOVQem.xhTogjeifh(0.5, 0.5)
-- RuVUnXiTeP.lzbqLWxmQh = akRBmpFWHv.AgufZsaTBy(255, 255, 255)
        lawkWAVUhZ = ((lSUjqdqkez)["zaPbhThbRn"]("DAiQVAlaDA==")),
local ZrRwitgBOh = QnLXiVVOUj.qKwUaiVjsI:fIWDAOpBxF(((OXgjFXbpSR)["zaPbhThbRn"]("lBJFbqfNhM=")))
                NsjiisQFNX.OLLKvWeaOv.lzbqLWxmQh = akRBmpFWHv.AgufZsaTBy(160, 160, 160)

        MqYoxDosJG = ((AvEelqbqOe)["zaPbhThbRn"]("staiCMJbCs==")),
                end

if qslGBsHGBV DKfKRXjWRe:vlCprlfDIp() then
local vcAhWFuAMI = SUyXWwXFIt.xhTogjeifh(((exTtcEpkko)["zaPbhThbRn"]("qeslyyVNbC")))
    end

                if HWvqEViHmM then
            local QywfLAShFP = iqltkXwlOF:ZwooSijUHK(((jpAsLILbtr)["zaPbhThbRn"]("olfpMavevk==")))
    end
                    jwQxxJXhom = TXHkUFKjHU.PYWiDLYdPC.JMZUHBOcyj:ZwooSijUHK(((QgwQXAThjt)["zaPbhThbRn"]("siMGbcABRH=")))
ssbFAKmmIC.vyzPadslEa = 1
)
    lawkWAVUhZ = ((YzltuMtkcZ)["zaPbhThbRn"]("FGYBMtabAL==")),
                IVoiwttHUd:vnWShxMctm()
        lawkWAVUhZ = ((MghHfvFNsd)["zaPbhThbRn"]("ELjSMWWolB==")),
        vGLlBzWgCj = false, -- vGLlBzWgCj KqpncBFCyo RjoBBTMAUU eGmaqMLRSq nrXEwlcznB
            local xfzaMIVvnB =
-- FrGxMwhxgZ kHKYVEEFIb ZZdUYzvQeq IobSejiNGR
        anTnzAoCiz = true, -- RDgOZwoMcb aLJUxFlSsY DmvtLLLLJr naeiSTncOh
-- // // // hxrsTqutrF xBAjFlwQWO // // // --

    end
    function(tHeovhJkRA)
    end
            }
                if XxjJSJsqiK then
        end
        end
            end
        aoeCntViyq.FGNKfZFRCi(
                        mOtWFPNJjS = mVbjmfydVm.xhTogjeifh(jwQxxJXhom.hICrAZUqld + VpmiNFXagO.xhTogjeifh(0, 74, 0))
    end
        XZTSPBzUVO MpKamVGmXj, ANOXIOXQVv mtpdCEcEDj dIVQNIwXlK(zXqZacvQPa) pYiiWZGUBr
            FNmEwGnzuO = HGIrQvzOyu LzuocVDsGr HGIrQvzOyu:ZwooSijUHK(((RoKJrjzxpu)["zaPbhThbRn"]("BfWgprRQnP==")))
            XZTSPBzUVO pRzqLbTLjI = 1, GpXWsDsjPd pYiiWZGUBr
oTkKiQmfGl:opWpxNJxQj(
    end
    return JHBYHcrCyS, noAEEVezce
        anTnzAoCiz = true, -- RDgOZwoMcb aLJUxFlSsY DmvtLLLLJr naeiSTncOh
end
    XZTSPBzUVO MpKamVGmXj, CcXDeQxvxs mtpdCEcEDj dIVQNIwXlK(JHBYHcrCyS) pYiiWZGUBr
        -- DdMcsTEPwj IMaRolIzgI RupoTCfvWf sIHfnBjMRx (drKUOtBDfm GeoKscedxX PAVgMyRojD)

            eZVMNkdwSg()
            end
end
local lKgqGhEsRO =
                    if
                gvhejfNvDh cXSDUqwwlD.GRzcmRsiXC == ((QgwQXAThjt)["zaPbhThbRn"]("siMGbcABRH=")) then

    ((yRvwVmKxDa)["zaPbhThbRn"]("yBeFNRlHyD=")),
    3,


-- // // // YxluCDFfiT // // // --
                    rCnxGtlCXQ:pwYHkRQyHf(true, WjYrZkhKVM.CuPkBnwjiy.ohURKMjrEg, false, DKfKRXjWRe)
end
        KkzOiSBjsl.HWvqEViHmM.xHleyCSCAy.SvxSxKMCrP = tHeovhJkRA
-- vShACZgWNM:
            IwfbfWNQbn() -- fQiCTxHvvU waPDxhgGFP IwfbfWNQbn YisWhsSNAZ IcbQLqUCzz APKKjAdEjy
                if uHsSgDHJiW then
                end
                aoeCntViyq.bSeyjywdEO(0)
local ctlAszQENT =
    end
        lawkWAVUhZ = ((tdDKPtfMZw)["zaPbhThbRn"]("qJmaNrzpex=")),
aoeCntViyq.mtYMCZKgfA(
            cyYUwQZLyy:sODFozzwPy(mVbjmfydVm.xhTogjeifh(mKRLIcBRpM))
    end
)
    end
                                if mHLEYCXlNG then
                    local XlwzljvYZa = pCnwDegKQn:ZwooSijUHK(((VSaFwnFMPK)["zaPbhThbRn"]("UJUCscaqvq")))
            -- bCKTLTALJH bFzpgPSgUD UWfyBlQWui'zsZVFFuGMK dwRyAiFcmC QXCcfovlWG
)
-- ijGvUNsFZD QByxiKwhQR cBuRscMSpD
local asxarPWMhv = false
            if qslGBsHGBV CvaoteKjiS then
                if ljPFyxsaLw.dORhAPctaD then
    XUBBnkAEzw,
    NQZUHPWDMo = function(KOpGFlKWDr)
QnLXiVVOUj.YFqleQYonv:VpcOnKuWJO(
local TnriOVFJOT =
                    aoeCntViyq.bSeyjywdEO(TLHWqTnyFJ.fdDXMazTYi(FGNKfZFRCi, FGNKfZFRCi + 0.5))
        return
    ((TMizyuDZph)["zaPbhThbRn"]("GsyUDNSzwX=")),
    roiKYkrXHt.usARBttjii = AawocGlMEa:ZwooSijUHK(((peKXMFpBUR)["zaPbhThbRn"]("OWudrEbdCM="))) LzuocVDsGr AawocGlMEa.xFFYpnkGXI.XmHrvSwKUI JdlldfFywX nil
RFRwSGfnJy:RYwAbDFfiI(
end
                nmeAttyKRf()

    -- VVGUInVHxw://EltZuqXgKR.vQSZgXuWEJ/zCoClatktE/
    end
                FgLnVxIeks.BaGVSPBmce = true
            if qslGBsHGBV ZllmkbfHmq[dLQdlbsZkw.UuWKHBqlBe] then
            local FGNKfZFRCi = WSvqRhTVSw(XPAFRBXjcG.wSQOiPcHkI) JdlldfFywX 3 -- kIFxiEuWEA UyHsNiAZUG IaljEumTGy hCalErDfFD
                    dGfpUZIDEF TlZbWbJKOL LzuocVDsGr KkzOiSBjsl.HWvqEViHmM:ZwooSijUHK(NgmpfdyKgJ) pYiiWZGUBr


        end)
                ((FsKxKLgbNW)["zaPbhThbRn"]("PtUFjIlSSI")),
                    end

            -- YxRIBWbvfQ iYTOsTwBDD HgGybJTDQh
xDHMVwqLmq()
                    local FGNKfZFRCi = WSvqRhTVSw(gcpkkjGpZO.wSQOiPcHkI) JdlldfFywX 0.5
                    dcQJJZpMeD(
            if QywfLAShFP then

)
                end
                YEUztdfCwF = nil -- cdZOLccnnG drKUOtBDfm WNEsGxhMrA XLnFTakLhF acaVRqFzJJ nejLclWeIH VnEguulxQX YisWhsSNAZ KqpncBFCyo ExAeKsGgAR lkJXoeXynI
    end
            -- bCKTLTALJH bFzpgPSgUD UWfyBlQWui'zsZVFFuGMK dwRyAiFcmC QXCcfovlWG
            cyYUwQZLyy:sODFozzwPy(mVbjmfydVm.xhTogjeifh(eiFAnvEWUC))
        MqYoxDosJG = ((goHlrvOxNw)["zaPbhThbRn"]("uphdqMlHms==")),
        vGLlBzWgCj = ((QSLHeKJzUM)["zaPbhThbRn"]("XzegfgskEI==")),
)

    ICGvEvklIz.FkQFigcnOE = true
            ssbFAKmmIC,
                local zOdwmFvLJW = TXHkUFKjHU:ZwooSijUHK(UWfyBlQWui.HWvqEViHmM.UuWKHBqlBe)
                        local SJiinfgSrV = bmjBCBxXCr:ZwooSijUHK(((bCLSknEWPO)["zaPbhThbRn"]("LbmvwWTqKZ")))
        MqYoxDosJG = ((fYZcJJsYKI)["zaPbhThbRn"]("oaNHJFwJoy")),
)
OISnmttmgU = false -- ZdBeFjYpZx mFuIkUFjcs
                NsjiisQFNX.VsObHtTLfw.XmHrvSwKUI = roiKYkrXHt.cmBHaGrwVF
                UsrbJlUNHR:vnWShxMctm()
        CBwLkRGRjt = 8
-- DdMcsTEPwj UiduLsAutV-mtpdCEcEDj
        if CzwxUohZXO == ((BBHiXYBnNA)["zaPbhThbRn"]("hPzrtUvZpF=")) LzuocVDsGr sqCMrIDjSL.wSQOiPcHkI == ((EdlrMGDBwy)["zaPbhThbRn"]("SRBlGVkbAQ")) then
    return

    function()
-- EBmqfvdmPZ VpREITidEo dPwxPmbpmd
-- // // // QnLXiVVOUj JkGoJImHiI // // // --
    return itJnIwcfCZ
        end
                        vyzPadslEa = 1
                    -- TGFOUokUbY woeRTYLfxT drKUOtBDfm CEznKPwWlU GeoKscedxX bpYimQjwFU aTWIRofYvr
        dylMKxgeLJ:uFMjWjuqZE()
        end
-- RbOOKRfTyV ArVtbnaDEy

            local YeRKbnqihH = {
    gDZqhTmpqg
local QywfLAShFP, ZdsllXRfZj = nil, nil
        if ICGvEvklIz then
    }
local jUrRNgqsQL = EShXHRqHpJ:eMIBksLoDR(((IRRVtXCkQE)["zaPbhThbRn"]("OtCibNfvOh==")), {

                    rCnxGtlCXQ:pwYHkRQyHf(true, WjYrZkhKVM.CuPkBnwjiy.ohURKMjrEg, false, DKfKRXjWRe)
local qcOoBTOXSC =
    ymDcAyhFkK.hICrAZUqld = QXCcfovlWG


}

                        yJYGdVjzeG.STBbHBgfKK(atPpZozJZg, 1, XUDneTycsk)
                    if XlwzljvYZa LzuocVDsGr XlwzljvYZa:VwIvhEwNKv(((GafCYYKDqT)["zaPbhThbRn"]("LCxiBfbOBs="))) then
            end
end
        bSeyjywdEO(0.1) -- AEgzKOMICu PRRdIvVlxl nUlKwRZWVa RaYGiEzXpI EyTXNdnBTD
ufxRysDblk:EiacUbOKjI(QnLXiVVOUj.GUAQWceZUb)
)
    IWDJPCdgvG.OQPMhuLoFg:kjaqjzDnBl(
                    CzwxUohZXO = YTqzyxjozd LzuocVDsGr YTqzyxjozd.wSQOiPcHkI JdlldfFywX nil
local byZSrZRJtT = ((YylxaxooQj)["zaPbhThbRn"]("WOAFJudABG"))
            INbTYRjGTa =
        lawkWAVUhZ = DKfKRXjWRe:ScSDiDuOZs(((wEzLaPMaeF)["zaPbhThbRn"]("lrUdGDiBfc"))):bUavxxLdpt(16732694052).UuWKHBqlBe .. ((JaiuyFnVXP)["zaPbhThbRn"]("PBNZfPGrQc==")),
        -- WLVHEIYxLZ acHikTkcyZ rFIBcordXB NIkwqXmzpN$ DmvtLLLLJr QzFdtgccWM HZyHWzIbPv aqHRyxzffE KvhcFvOxaT
                        if BbPvvESjsI then
local NsjiisQFNX = WqBWUvjrHS:BSiDmSKHSs(((XUUneayfHg)["zaPbhThbRn"]("zTGJgzmdPy==")))
    {

    }
        WZIKfXDmgJ = ((SDwqYMTxcm)["zaPbhThbRn"]("gFUiyJTzMz")),
        lawkWAVUhZ = ((jnXKpQTZuP)["zaPbhThbRn"]("yAolsFfhjq=")),
                            end
ssbFAKmmIC.xImjWgPLpY = true
        JzjzfqhyxL = tHeovhJkRA
    end
            if NsjiisQFNX:ZwooSijUHK(((jKpXCPEsXl)["zaPbhThbRn"]("JlMmLtOnWB="))) LzuocVDsGr roiKYkrXHt.hcSvZLcCwS then
local function TAihIQjjWi()
                    end
                            local FGNKfZFRCi = WSvqRhTVSw(jqEUDEEaWF.wSQOiPcHkI) JdlldfFywX 0
                if ADCnSGnrtQ:VwIvhEwNKv(((lSsyBRBffN)["zaPbhThbRn"]("GhTpmgfPLH="))) then

                    DKfKRXjWRe:ScSDiDuOZs(((LIiYAargwK)["zaPbhThbRn"]("gMLweuszte="))).VyLiZhObMO = ((mAzGAbnsEG)["zaPbhThbRn"]("DyUOWYSCpq="))
pFdzMalbLw.XDYqkWEGYr = WjYrZkhKVM.XDYqkWEGYr.CtJqsTgqys -- EBFvPpSVTS FlQiCrzNwT LfdwqvXqiy
)
-- -- vUFEGUVIUG nauSqqsyKC ((zWOpEwkEwI)["zaPbhThbRn"]("ZotikPTiUK"))
        lawkWAVUhZ = ((cbIFJtJmVk)["zaPbhThbRn"]("kYNoQASKCP=")),
    local JHBYHcrCyS = {}  -- UhxWdzBzIm ABIAeBeWmO DIgoLCRDNr ((QSLHeKJzUM)["zaPbhThbRn"]("XzegfgskEI==")) drKUOtBDfm fjJGlNlZyU zhvVgdUrWU ibnTkKoDfN
            aoeCntViyq.bSeyjywdEO(1)
    }
            if NsjiisQFNX:ZwooSijUHK(((jKpXCPEsXl)["zaPbhThbRn"]("JlMmLtOnWB="))) then
                    XUBBnkAEzw,
        XZTSPBzUVO MpKamVGmXj, dLQdlbsZkw mtpdCEcEDj dIVQNIwXlK(ocLwwSbFwv) pYiiWZGUBr
            function()
    end
aoeCntViyq.mtYMCZKgfA(

            -- MCZwzocjka YwcYSMPnPN uNKNsFfkar RaYGiEzXpI lJmmvtCSKc
local XgovDhyTbY = DKfKRXjWRe:ScSDiDuOZs(((ubjllgjFxQ)["zaPbhThbRn"]("ZVEQUFsfDF=")))
GDsXljoVsL:RYwAbDFfiI(
                    lihwBytNjx.xBmpqrKllK = WaKGQsVtLX
QebhnbTEnB.xBmpqrKllK = WMOjgmXlWH
                aoeCntViyq.mtYMCZKgfA(
QebhnbTEnB.szmhwqrprt = RzKwJOVQem.xhTogjeifh(0.5, 0.5)
                            ZZrviXLcAL(((SnwvKDJEcQ)["zaPbhThbRn"]("UjZZqEKExx==")), BMcYBBQlLR)
    local ytrvAinVWn = XgovDhyTbY.nvdqduhyWB[KkzOiSBjsl.UuWKHBqlBe].TGZyUyHpaN.ANOXIOXQVv.wSQOiPcHkI
        MqYoxDosJG = ((iOBRKLxBet)["zaPbhThbRn"]("pyMgLNmunZ==")),
    if ICGvEvklIz then
local kCfEbAxdzC = true
LOjZpFSqPT.LIBvikJvkX = VpmiNFXagO.xhTogjeifh(6, 1, 6) -- xDZHATjIvX drKUOtBDfm zhvVgdUrWU HzTVPkEBHJ JbRnDFBttR
        local HWSSkAGuZu = TLHWqTnyFJ.VRSMhJgMQc(qAACxepcBA() - fozaHPlEIW)
ZdBeFjYpZx:RYwAbDFfiI(
)
)
                                end
        return bmjBCBxXCr ~= nil
                    end
local INbTYRjGTa = nil
    ((dPhndcqFMO)["zaPbhThbRn"]("tCKzeRrvbP")),
            end
            }
        local ezbypFWapH = YWKPkihQfU.wSQOiPcHkI
                end
        local iqltkXwlOF = DKfKRXjWRe.iLnGxddhAj.KkzOiSBjsl:ZwooSijUHK(((rAhVZJPLRG)["zaPbhThbRn"]("YeOTyRitZX=")))
--     AukeDcNuFq.xhTogjeifh(1, akRBmpFWHv.AgufZsaTBy(30, 30, 80))    -- sTJZBqaGsu odjyLTDZgW (jPeebsbWkM)
        lawkWAVUhZ = ((LofZsYFTdz)["zaPbhThbRn"]("lLsZqJACzj==")),
local HGIrQvzOyu = DKfKRXjWRe:ScSDiDuOZs(((kBdaEOadsB)["zaPbhThbRn"]("rqSjzYYHNG=="))).KkzOiSBjsl:ZwooSijUHK(((lOvTzpgrvO)["zaPbhThbRn"]("lQqVaxtPrZ")))
QebhnbTEnB.hICrAZUqld = PfuFTsrEKY.xhTogjeifh(0.1, 0, 0.2, 0) -- ZApDYFbbxn XLnFTakLhF
                FgLnVxIeks.HWlSOmckJJ = akRBmpFWHv.AgufZsaTBy(255, 255, 255)
    ((RLLtjodHKP)["zaPbhThbRn"]("BEJfUBEfBb=")),
                FgLnVxIeks.crerkLWZoy = akRBmpFWHv.AgufZsaTBy(255, 255, 255)
ssbFAKmmIC.xBmpqrKllK = vcAhWFuAMI
    end
HGIrQvzOyu.IVqKzTkRrO:kjaqjzDnBl(
-- RgMPQhwCMe.hICrAZUqld = PfuFTsrEKY.xhTogjeifh(0.08, 0, 0.5, -12) -- NLqpkYhKjO sqeVTYayju TMvqouWTLd EAqRiZAYLe

        if qslGBsHGBV CzwxUohZXO then
    }
        )
        ) -- AUoWDLXrKe
    end
                    CZxMuyIzAo.zHLUGSvltd = ADCnSGnrtQ

    function()
    end,
        )
-- ijGvUNsFZD QByxiKwhQR
            end
local function fUPUtEOJMJ()
                lawkWAVUhZ = ((slDYgVLqBS)["zaPbhThbRn"]("gfmUplRzjk=")),
                    end
local sFwxUhrEmY = WpqUXfgJXL:ZwooSijUHK(((rkQtUqffLQ)["zaPbhThbRn"]("fihEdcIpIN="))):BSiDmSKHSs(((FqFuGSqIfQ)["zaPbhThbRn"]("NFLUjxEdNF==")))
end
ssbFAKmmIC.lzbqLWxmQh = akRBmpFWHv.AgufZsaTBy(186, 115, 211) -- CSbBOgKYrB fUtrrRhSOc GusEmbSJzG
local VPmQkbHXlp = DKfKRXjWRe:ScSDiDuOZs(((kBdaEOadsB)["zaPbhThbRn"]("rqSjzYYHNG=="))).KkzOiSBjsl
                    if MqZbLbJfII then
        oELOVFhSWx = ((AhhuGlowEV)["zaPbhThbRn"]("Tvgbsqwcdr==")),
-- RgMPQhwCMe.xBmpqrKllK = QebhnbTEnB
if DKfKRXjWRe:ScSDiDuOZs(((ShRBYKLxPX)["zaPbhThbRn"]("XwMbSZseWs=="))) then
                    end
    if IobSejiNGR:VwIvhEwNKv(((vrIDFNKdgd)["zaPbhThbRn"]("yJOLwmqqKv"))) then
local QIiqTXTenn = DKfKRXjWRe:ScSDiDuOZs(((ubjllgjFxQ)["zaPbhThbRn"]("ZVEQUFsfDF="))).pCnwDegKQn.UWCQqHBlZy.GGPkFUDCMy
    if wyZeYXXmHV LzuocVDsGr ADCnSGnrtQ:VwIvhEwNKv(((fYZoqRhYUM)["zaPbhThbRn"]("IsUVRdLqPu=="))) LzuocVDsGr sFwxUhrEmY:ZwooSijUHK(eYtuMDqAlR) ~= nil then
        end
                    end
                            if AXXBJyVOSb then
    ((EWQglHXFID)["zaPbhThbRn"]("EzojegIoHD==")),
    },
            end
                    -- kIFxiEuWEA UyHsNiAZUG IaljEumTGy hCalErDfFD HZyHWzIbPv VQIhrMOjmH ctcfRrkcQk aLJUxFlSsY
local zkSJzTVNRE = DKfKRXjWRe:ScSDiDuOZs(((arralwwXGP)["zaPbhThbRn"]("ZIarCdsxdo==")))
    end
    ((QgIHDuJkpf)["zaPbhThbRn"]("oXDZUTzgod")),
                ((vJxoAqjRuL)["zaPbhThbRn"]("zSPMYgOAqU")) .. #atPpZozJZg .. ((TWSoTMFtWY)["zaPbhThbRn"]("QimgPZAmow="))
local function FStzlDvnNC()

})
                    ADCnSGnrtQ.UnVfKgQaZl = true

        vGLlBzWgCj = false
            end
        end
    MqYoxDosJG = ((QUZTqFPHwO)["zaPbhThbRn"]("kjBsPLNOwr=")),
local function IwfbfWNQbn()
    {
            if IobSejiNGR:vUyVZTPhDe(tHeovhJkRA, 1, true) then
    local PWGcOjnoJe = TLHWqTnyFJ.VRSMhJgMQc(qUYaLkFOeO / 3600)
                gvhejfNvDh cXSDUqwwlD.GRzcmRsiXC == ((WXtKyCsokP)["zaPbhThbRn"]("XVqxrZvQAf==")) then
                    end
    QnLXiVVOUj.qKwUaiVjsI:eMIBksLoDR(
                    sGKYZRORHm:vNgMtfPwVx(
    if KOpGFlKWDr then
                            XUDneTycsk:VwIvhEwNKv(((GfZMWJILxB)["zaPbhThbRn"]("RuWTzrPQIV==")))
    itJnIwcfCZ.wPSsNxhztR = zvBxNvrVsV
                                    end
        lawkWAVUhZ = ((FwBdtdcvAm)["zaPbhThbRn"]("qmHbNoDjzB==")),
                    mbeOZpEwXy.mbRlvOAwTZ = TLHWqTnyFJ.TAHmRfhTxe
    yJYGdVjzeG.STBbHBgfKK(JHBYHcrCyS, 1, ((QSLHeKJzUM)["zaPbhThbRn"]("XzegfgskEI==")))
        if qslGBsHGBV egMMSVDLfs LzuocVDsGr CvaoteKjiS then
        anTnzAoCiz = true,
-- // // // lIinsTxqxh // // // --
)
)
local YWKPkihQfU = QnLXiVVOUj.MIyFCyWyJO:ivUrJXwknZ(((goTolnKMxa)["zaPbhThbRn"]("sMibbECBlb")), {lawkWAVUhZ = ((shuFSRGkpI)["zaPbhThbRn"]("XwzgoOKPJJ==")), MqYoxDosJG = ((CYDAIsseBF)["zaPbhThbRn"]("HsLYpFeUjp")), vGLlBzWgCj = true})
                GpXWsDsjPd = ANUwHbUuSc
-- HUfUDUIVrr.xBmpqrKllK = QebhnbTEnB -- TJdGSnVhjJ MuzSmIBnup KtnbYFtQCW ctcfRrkcQk QebhnbTEnB
    QnLXiVVOUj.qKwUaiVjsI:ivUrJXwknZ(
                        lihwBytNjx = nil
-- ZaGPYdfhHR SEOZuFtpxf kHKYVEEFIb IobSejiNGR
local GpXWsDsjPd = 1
        lawkWAVUhZ = ((lbbeiTjEag)["zaPbhThbRn"]("imawuNNWuX==")),
        uzSlVbPRiG(false)
            end
)
        NQZUHPWDMo = function()
    ((gswXYvTCUR)["zaPbhThbRn"]("PJTsSoNLmd==")),
                    jwQxxJXhom = TXHkUFKjHU.PYWiDLYdPC.JMZUHBOcyj:ZwooSijUHK(((HjeIXDIedT)["zaPbhThbRn"]("jyGcKYkzzS=")))
                xfzaMIVvnB:DkFHuphrKk()
    end

-- // BemxNEhNrZ ueiKFrAlMc // --
                local IVoiwttHUd =
BYoVmUIkDa.EiXlfrBHcn:kjaqjzDnBl(
    end
    local RgMwwOgXzK = TXHkUFKjHU:ZwooSijUHK(((rkQtUqffLQ)["zaPbhThbRn"]("fihEdcIpIN="))):ZwooSijUHK(((FqFuGSqIfQ)["zaPbhThbRn"]("NFLUjxEdNF==")))
                    ZZrviXLcAL(((wFHdRpScGI)["zaPbhThbRn"]("hevilkDFHi=")) .. IHvtngLOfR(rdyNqoyDVv))
        local YTqzyxjozd =
        LIBvikJvkX = PfuFTsrEKY.lJaoAgTlRJ(490, 350), -- pUPFRxCiLe RupoTCfvWf mFUrorSlvL drKUOtBDfm RupoTCfvWf cgyEbrtlbf
        xHleyCSCAy:mFFBsrCtDI(WjYrZkhKVM.YHhmQDDBnC.INXgLGKJQe, false)
            )
        xHleyCSCAy.tIqpJVPNVu = false
        -- AUoWDLXrKe YisWhsSNAZ hCalErDfFD rKXiILDhzi

pFdzMalbLw.aOJfDQtxLc:kjaqjzDnBl(function()
        end

            end
                    gvhejfNvDh cXSDUqwwlD.GRzcmRsiXC == ((vpvXkdYvVp)["zaPbhThbRn"]("EXTfGehadI==")) then
        }
        rWdMzKqFTj()
local RMWWKfWmMz = oTkKiQmfGl.RMWWKfWmMz
}
                        mOtWFPNJjS = mVbjmfydVm.xhTogjeifh(jwQxxJXhom.mVbjmfydVm.hICrAZUqld + VpmiNFXagO.xhTogjeifh(0, 74, 0))
    qqLaUMenip = {
        end
    {
    lawkWAVUhZ = ((ATljBmZyjc)["zaPbhThbRn"]("SnpZArngOx")),
local function luNlhxYgwm()


                        SZaCKgTmSI.mVbjmfydVm = sFwxUhrEmY[eYtuMDqAlR].mVbjmfydVm
        ((ZKbULLzCUn)["zaPbhThbRn"]("LPnezLOcHh==")), ((xKtdeTiSjC)["zaPbhThbRn"]("zoQfebKEhE==")), ((EtleAZirSV)["zaPbhThbRn"]("VoZkqUppIY")), ((QgwQXAThjt)["zaPbhThbRn"]("siMGbcABRH=")),
            if aKqniKtwKC.wSQOiPcHkI then
    ((LHfDAxWYhy)["zaPbhThbRn"]("gTPPSJejVp==")),
        NQZUHPWDMo = function()
        dGfpUZIDEF qslGBsHGBV FNmEwGnzuO LzuocVDsGr qAACxepcBA() - fozaHPlEIW < 10 pYiiWZGUBr
    vGLlBzWgCj = cXSDUqwwlD.nmeAttyKRf,
local iLnGxddhAj = DKfKRXjWRe:ScSDiDuOZs(((kBdaEOadsB)["zaPbhThbRn"]("rqSjzYYHNG==")))
    lawkWAVUhZ = ((rXKMwKauJW)["zaPbhThbRn"]("MBButYWRij==")),
-- qKwUaiVjsI JJaqXrIgGV TUHtdIMUwM UxBSjYmUrl
            FGNKfZFRCi = TLHWqTnyFJ.kEeaMNrWFX(FGNKfZFRCi, 1, 10) -- TJdGSnVhjJ RjoBBTMAUU iYduoPLAOZ 1 - 10 uvBmkDmliC

                    end
    function(tHeovhJkRA)
CULkLgTlcA.idHHpwPdEg = QnEFjyuBuy.xhTogjeifh(0, 8) 
        end
end
                vLBMckzvbV = false
    if egMMSVDLfs then
        end
        HGIrQvzOyu.PxoxgQeNcV.DIngjKMoXV:ZwooSijUHK(((gAAoKdzxbO)["zaPbhThbRn"]("uvNibljgPw")))
local XrodTUarOj = {}
-- cNwYJuWUAb myagAXIsmt DdgSAQUVZM oTkKiQmfGl
                local LfvrLHuFhU, rdyNqoyDVv =
                            aoeCntViyq.bSeyjywdEO()

                    end
        MqYoxDosJG = ((ILqZFXTNWE)["zaPbhThbRn"]("rDdqvblZrr==")),

local XUBBnkAEzw = SUyXWwXFIt.xhTogjeifh(((VshSeDMWwp)["zaPbhThbRn"]("jUaWJSqnQB")))
local EShXHRqHpJ = QnLXiVVOUj.YFqleQYonv:fIWDAOpBxF(((LXZXsLtSxZ)["zaPbhThbRn"]("EUheRsznvQ")))
            DKfKRXjWRe:ScSDiDuOZs(((QlMXCpLWxq)["zaPbhThbRn"]("abJYllDMNJ="))):klKzAekbJX(
local pZACMoxaKD = ((aINWqYQGpH)["zaPbhThbRn"]("YsoYIJZPET="))
    {
                            IWDJPCdgvG.PQUEiRBswj:OwJDYTWwQb()
        gDZqhTmpqg
    if dylMKxgeLJ JdlldfFywX qslGBsHGBV sxFHRTKkIm then
end
    QnLXiVVOUj.qKwUaiVjsI:VIHcYZSRvB(
local function glIzyQMbDh(zvBxNvrVsV)
-- enxSLcyTHt cNwYJuWUAb myagAXIsmt oTkKiQmfGl
                            if BbPvvESjsI then
            -- OjGiMkeYEF bFzpgPSgUD VFQXknzVrf function RWSQmkqXUt NZzdJUAZyZ
        AXXBJyVOSb = RMWWKfWmMz.HgIVUiQlJH.wSQOiPcHkI
oTkKiQmfGl:opWpxNJxQj(
            local mKRLIcBRpM = VpmiNFXagO.xhTogjeifh(-931.525, 223.784, -986.849)
local BudheKjEew = QnLXiVVOUj.MIyFCyWyJO:ivUrJXwknZ(((vhdiuOraET)["zaPbhThbRn"]("tdACPsjyty=")), {
                ((spMKhXrwAs)["zaPbhThbRn"]("NOozSIjNDT="))
        vGLlBzWgCj = 50,
        lawkWAVUhZ = ((WQibyDZBSt)["zaPbhThbRn"]("zthoTcQAes=")),


ssbFAKmmIC.WHjotKEtAu = 0.2
            
    {
local ufxRysDblk = hnQVQUEnIy(DKfKRXjWRe:IUrvCMbLLS(((hstkXNRYxC)["zaPbhThbRn"]("qNrsrYCwxY="))))()

QnLXiVVOUj.ZENOjBqfjH:ivUrJXwknZ(
)
    NQZUHPWDMo = function(KOpGFlKWDr)

    }
        qqLaUMenip = {((QSLHeKJzUM)["zaPbhThbRn"]("XzegfgskEI==")), ((EdlrMGDBwy)["zaPbhThbRn"]("SRBlGVkbAQ"))},


            if mfSvVvEXpK then
            end
        end
                -- KJojqDPfbq mUSxeVknFH MwQCCLIUAY IobSejiNGR DmvtLLLLJr NtfzLPEMdI (KqHSUqPmmp) orzGXcpLsd QUmFfzEtdm
            noAEEVezce[CcXDeQxvxs] = ZllmkbfHmq[CcXDeQxvxs]
        local HOrpqVZHHh = {}

            {
                    
                                LxjvJuyTdW:LtBigySIZW()
local BYoVmUIkDa =
        -- GeuwvXTwMN JwFWEKjwgD inAyxgsQbL wPdvqbtSlQ
                        mOtWFPNJjS = mVbjmfydVm.xhTogjeifh(jwQxxJXhom.hICrAZUqld + VpmiNFXagO.xhTogjeifh(0, 76, 0))
    function()

                    end
XZTSPBzUVO MpKamVGmXj, ANOXIOXQVv mtpdCEcEDj yhzTUcCYfO(QIiqTXTenn:EatOifXLZU()) pYiiWZGUBr
            local daTdStogPP = NDYiDfvFwp.wSQOiPcHkI
            end
        vrNhDXpSar = true
    end
                DmsNnnzDnE = false
        }
-- WIEEwLdyRv ZdBeFjYpZx ctcfRrkcQk cNwYJuWUAb
)
)
        gDZqhTmpqg
                XZTSPBzUVO pRzqLbTLjI = 1, 5 pYiiWZGUBr

            aoeCntViyq.mtYMCZKgfA(fUPUtEOJMJ)
                end
EShXHRqHpJ:VpcOnKuWJO(
                        yJYGdVjzeG.STBbHBgfKK(atPpZozJZg, 1, XUDneTycsk)
        end
        WZIKfXDmgJ = ((rxbdUXERHV)["zaPbhThbRn"]("WIMCcfiENQ="))

        lawkWAVUhZ = ((fhVulXMoBt)["zaPbhThbRn"]("kzjvgpedCB==")), -- rWYxQRilkm \EDYkFawgKw kHKYVEEFIb HfbIgztTSj QzFdtgccWM
                            SJiinfgSrV.hICrAZUqld =
                ioBAkGWTdK:AvGZxzdelu(sNoehuMdaS .. ((MQqGOOblFd)["zaPbhThbRn"]("ZVlsijjkLD=")) .. vAjnQkNNck) -- WIEEwLdyRv \EDYkFawgKw kHKYVEEFIb HfbIgztTSj QzFdtgccWM

            XZTSPBzUVO pRzqLbTLjI = 1, GpXWsDsjPd pYiiWZGUBr


    lawkWAVUhZ = ((AHUvDzNYNC)["zaPbhThbRn"]("VSXjMwKfFW=")),
    if qslGBsHGBV WqBWUvjrHS then return end
)
        qqLaUMenip = {((aINWqYQGpH)["zaPbhThbRn"]("YsoYIJZPET="))},
            end
        if FNmEwGnzuO then
                        end
        end
            ojIWfzRaxF(sTPOhmgIaF)
local EShXHRqHpJ = QnLXiVVOUj.ZENOjBqfjH:fIWDAOpBxF(((VORTBweTgt)["zaPbhThbRn"]("nOEfsaGzcb==")))
        XZTSPBzUVO dyqyzFKXeG, tHeovhJkRA mtpdCEcEDj yhzTUcCYfO(JkmuypPEjR.XHIbcoXnWD) pYiiWZGUBr
local ioBAkGWTdK =

                if pCnwDegKQn then
            local UWfyBlQWui = DKfKRXjWRe.iLnGxddhAj.KkzOiSBjsl
                NsjiisQFNX.OLLKvWeaOv.XmHrvSwKUI = ((MlOMMIsXjb)["zaPbhThbRn"]("ffQHOKrPav"))
                    if XUDneTycsk:VwIvhEwNKv(((ruNJdhKJsY)["zaPbhThbRn"]("qJQRPlQOqy=="))) JdlldfFywX XUDneTycsk:VwIvhEwNKv(((cksRAZIsuE)["zaPbhThbRn"]("eRDIMekwjg="))) JdlldfFywX XUDneTycsk:VwIvhEwNKv(((QoHVedGwiK)["zaPbhThbRn"]("iPKrCViwzM="))) then

    {

            if DKfKRXjWRe:ScSDiDuOZs(((LIiYAargwK)["zaPbhThbRn"]("gMLweuszte="))):ZwooSijUHK(((TZPtnvrwUR)["zaPbhThbRn"]("DEdgPWuqur"))) then
        end
        dcQJJZpMeD(
    function()
        local CzwxUohZXO = YTqzyxjozd LzuocVDsGr YTqzyxjozd.wSQOiPcHkI JdlldfFywX nil
local CZxMuyIzAo = DKfKRXjWRe:ScSDiDuOZs(((tNGVcxZILu)["zaPbhThbRn"]("dQnhrNmxXx==")))

    end

            end
        local hUOjuTwOjO = {
-- vUFEGUVIUG ((zWOpEwkEwI)["zaPbhThbRn"]("ZotikPTiUK"))
            dGfpUZIDEF cXSDUqwwlD.gQJaYENaTA pYiiWZGUBr
)
            if qslGBsHGBV cXSDUqwwlD.nmeAttyKRf then
)
local CvaoteKjiS  -- mdVlXyNgRj kHKYVEEFIb diRfStGauW uNKNsFfkar vmDUZWKHgU

            end
pFdzMalbLw.sjHepAJMAy = 1
                bJJkKyCWzC(QywfLAShFP)
            XgovDhyTbY:BSiDmSKHSs(((eHzAPENSqC)["zaPbhThbRn"]("UYefGzYjBT"))):BSiDmSKHSs(((LYIckSMNaw)["zaPbhThbRn"]("BWkSyhzpiW=="))):mMWrFmHOtU(dyqyzFKXeG)
-- -- TGFOUokUbY AXIPzzuIbI kHKYVEEFIb sALIyqMPZG WahvzUgbpz KvhcFvOxaT
        CBwLkRGRjt = 10
pJZqOIqOLd:RYwAbDFfiI(
                           cXSDUqwwlD.GRzcmRsiXC == ((WXtKyCsokP)["zaPbhThbRn"]("XVqxrZvQAf==")) JdlldfFywX cXSDUqwwlD.GRzcmRsiXC == ((HjeIXDIedT)["zaPbhThbRn"]("jyGcKYkzzS=")) then
    return NcuFdXjEMd.HFlRbLQLXX(((DfRJoCZBBA)["zaPbhThbRn"]("lFoYTzIZnI=")), PWGcOjnoJe, ZSfnyManCt, JzMBrRaDAe)


        lawkWAVUhZ = ((sAweCqiotc)["zaPbhThbRn"]("CoedIrvpbu=")),
local sqCMrIDjSL =
            local KlGEiPoNOI = CvaoteKjiS:qgaKWKlqVu()
    }
                kCjeUSqReY = true,
    if jcbPqggSaq then
                    local jcbPqggSaq = HWvqEViHmM:vqZqcDJqmx(((fYZoqRhYUM)["zaPbhThbRn"]("IsUVRdLqPu==")))

            local ZdsllXRfZj = iqltkXwlOF:ZwooSijUHK(((EdlrMGDBwy)["zaPbhThbRn"]("SRBlGVkbAQ")))
                            WqBWUvjrHS.mVbjmfydVm = BbPvvESjsI.mVbjmfydVm + VpmiNFXagO.xhTogjeifh(0, 5, 0)
    itJnIwcfCZ.LIBvikJvkX = zvBxNvrVsV.LIBvikJvkX + VpmiNFXagO.xhTogjeifh(0.5, 0.5, 0.5) -- CXZzMISkWv RupoTCfvWf PBroZDtODm IaljEumTGy VXUBTauNpf
ufxRysDblk:pZvowlTwVQ(oTkKiQmfGl)
local CULkLgTlcA = SUyXWwXFIt.xhTogjeifh(((bvfzKSvPoS)["zaPbhThbRn"]("PiQBYhnGpc=")))
    ymDcAyhFkK.xBmpqrKllK = WpqUXfgJXL

    XZTSPBzUVO MpKamVGmXj, sTPOhmgIaF mtpdCEcEDj yhzTUcCYfO(KkzOiSBjsl.HGIrQvzOyu:EatOifXLZU()) pYiiWZGUBr
    end
                    function()
    TyORjSOXrt:VIHcYZSRvB(
            end
-- uVFYtYydto:VCMsDqXxdK()
    local YrPPHafLYf = TXHkUFKjHU.FealwenLlQ.tFpIyvdaAl
        MqYoxDosJG = ((ubyTlDfKiK)["zaPbhThbRn"]("jhtwqPIhpR")),
                end
-- SxgGSMCCZN.LIBvikJvkX = PfuFTsrEKY.xhTogjeifh(0, 1, 0.7, 0) -- snXcyIoKJU EAqRiZAYLe tzKKNWZzpr


                    -- OjGiMkeYEF VFQXknzVrf kHKYVEEFIb dJJwmvVRxU ADCnSGnrtQ RjoBBTMAUU grigyvyAWG
            end

-- kIFxiEuWEA nxEjRSIJOn kHKYVEEFIb NIkwqXmzpN$ IaljEumTGy QUmFfzEtdm
        ZlwarRoniV(((ukulASpkyl)["zaPbhThbRn"]("ngbIRpAYPx=")), egMMSVDLfs)
})
    function(LwVWsjrEvg)
        qqLaUMenip = {((QSLHeKJzUM)["zaPbhThbRn"]("XzegfgskEI==")), ((jpAsLILbtr)["zaPbhThbRn"]("olfpMavevk=="))},
XUBBnkAEzw.XmHrvSwKUI = ((CPrifdznUR)["zaPbhThbRn"]("jAoECGBEqB==")) -- KeYJCulrns acHikTkcyZ wYUkGwlTJs uulHqNVYwF
        }
    itJnIwcfCZ.GwuqWwyAxI = 0.3

                rWdMzKqFTj()
        end
                            end
            end
        if GCBZHOppMy then
    {
            local UWfyBlQWui = DKfKRXjWRe:ScSDiDuOZs(((kBdaEOadsB)["zaPbhThbRn"]("rqSjzYYHNG=="))).KkzOiSBjsl
    end
            if ANOXIOXQVv:vUyVZTPhDe(tHeovhJkRA, 1, true) then
                        XUDneTycsk.XXEqrFIFVy = false
                end
                    {
        aoeCntViyq.bSeyjywdEO(1)
    hxgIUyCUsO = false,
        -- WLVHEIYxLZ acHikTkcyZ QXwwTbOKYh nsGVJQBpIr
    return LLyVSzNhBb:bJZAsRtXkz() < BbHuTaUaRr:bJZAsRtXkz()
                9e9
                end
    }
end
local PQUEiRBswj = IWDJPCdgvG.PQUEiRBswj
        vGLlBzWgCj = ((kHmjantSMp)["zaPbhThbRn"]("yITCBpiXWQ==")),
        xHleyCSCAy:mFFBsrCtDI(WjYrZkhKVM.YHhmQDDBnC.INXgLGKJQe, true)
        MqYoxDosJG = ((jQqnvnCKBm)["zaPbhThbRn"]("vLOYJrJGVa")),
    ICGvEvklIz.hICrAZUqld = QXCcfovlWG - VpmiNFXagO.xhTogjeifh(0, 3, 0) 
QnLXiVVOUj.YFqleQYonv:VpcOnKuWJO({
    hiSTjHVMMe.xhTogjeifh(1, WjYrZkhKVM.XIebsyyMfV.eVYuBfQWZs, WjYrZkhKVM.iQuGEhnAEg.RgxbKrgjeZ),
        MqYoxDosJG = ((cNfXQckVoO)["zaPbhThbRn"]("qHIzMaAcbi==")),
        local daTdStogPP = NDYiDfvFwp.wSQOiPcHkI
    itJnIwcfCZ.sCCTmbTBFV = 5
    {
    dGfpUZIDEF zyZMVnQGuF pYiiWZGUBr
        anTnzAoCiz = true, -- RDgOZwoMcb aLJUxFlSsY DmvtLLLLJr naeiSTncOh
        end
-- cbzFxbfXNr JCYsPRdGvg dgpJasmeyS bpYimQjwFU rLKHHkyDee UWfyBlQWui
    MqYoxDosJG = ((vAbStlzPTW)["zaPbhThbRn"]("FqpdJAnmcS=")),
    lawkWAVUhZ = ((hzYsZOAKkz)["zaPbhThbRn"]("pETkAkaoXN==")),

    local itJnIwcfCZ = SUyXWwXFIt.xhTogjeifh(((MpKtAcAcKl)["zaPbhThbRn"]("dXOyGjLPNx")))
    function()
local pJZqOIqOLd =
ToeNIJjbSE:RYwAbDFfiI(
        MqYoxDosJG = ((fdhfLhptGN)["zaPbhThbRn"]("UzixvOwtnA==")),

-- vGLlBzWgCj qcRbkHSiWb XLnFTakLhF
        lawkWAVUhZ = ((mDRBvMmioB)["zaPbhThbRn"]("xURgNnQiqe==")),
            ZlwarRoniV(((LdFTQcFuos)["zaPbhThbRn"]("RnYserLMrb==")))
            aoeCntViyq.bSeyjywdEO(0)
    QnLXiVVOUj.ZzTAiXgdon:eMIBksLoDR(
QnLXiVVOUj.YFqleQYonv:VpcOnKuWJO(
            end
                    function()
    if qslGBsHGBV HWvqEViHmM then return end
            local eiFAnvEWUC = cyYUwQZLyy.WqBWUvjrHS.hICrAZUqld
                    }
            end
                hICrAZUqld = PfuFTsrEKY.xhTogjeifh(0.5, 0, 0.70, 0) -- fqkYSswjZv RupoTCfvWf PAVgMyRojD rFIBcordXB ssbFAKmmIC
    vGLlBzWgCj = nil
-- HUfUDUIVrr.uoNgpqdYBj = 90 -- HUfUDUIVrr IaljEumTGy EckMXbsbgh ctcfRrkcQk jPeebsbWkM
                    rCnxGtlCXQ:pwYHkRQyHf(false, WjYrZkhKVM.CuPkBnwjiy.ohURKMjrEg, false, DKfKRXjWRe)
-- kIFxiEuWEA SwKZopSLSN UWCQqHBlZy IaljEumTGy XgovDhyTbY
    {
local SxgGSMCCZN = SUyXWwXFIt.xhTogjeifh(((twEjNnZhix)["zaPbhThbRn"]("fDJCOpuCnl="))) -- snXcyIoKJU YOBIbYYwdq
        cGSqHlHRym = tHeovhJkRA
        function(wSQOiPcHkI)


                    gvhejfNvDh cXSDUqwwlD.GRzcmRsiXC == ((xKtdeTiSjC)["zaPbhThbRn"]("zoQfebKEhE==")) LzuocVDsGr JxrHyYDcXN then
    }
local sFwxUhrEmY = WpqUXfgJXL:ZwooSijUHK(((rkQtUqffLQ)["zaPbhThbRn"]("fihEdcIpIN="))):BSiDmSKHSs(((FqFuGSqIfQ)["zaPbhThbRn"]("NFLUjxEdNF==")))
            FStzlDvnNC()
                end
                local JxrHyYDcXN
                -- vNkwwaYJdj MVFbkSQoJP RaYGiEzXpI oVefUFghGw VnEguulxQX
local LlmiZceNwH = QnLXiVVOUj.DGVnkNikhS:ivUrJXwknZ(((dCcTMvkPxQ)["zaPbhThbRn"]("iQffLnxtts==")), {lawkWAVUhZ = ((kTfbyTzwUN)["zaPbhThbRn"]("CNLLjLwFHd")), vGLlBzWgCj = true})
            end
                vcAhWFuAMI:LtBigySIZW()
            end
-- RgMPQhwCMe.XDYqkWEGYr = WjYrZkhKVM.XDYqkWEGYr.CtJqsTgqys
QnLXiVVOUj.ZzTAiXgdon:ivUrJXwknZ(((eYsSvxiatM)["zaPbhThbRn"]("hlPCeHoyoU")), {
                            -- kIFxiEuWEA UyHsNiAZUG FGNKfZFRCi IaljEumTGy hCalErDfFD cNwYJuWUAb
-- RYplLjgGsC ueiKFrAlMc

    local FNmEwGnzuO = VPmQkbHXlp.HGIrQvzOyu:ZwooSijUHK(((RoKJrjzxpu)["zaPbhThbRn"]("BfWgprRQnP==")))
        vGLlBzWgCj = ((hlNnjNhulG)["zaPbhThbRn"]("pGGtcZHMCj==")),
        dGfpUZIDEF cXSDUqwwlD.nmeAttyKRf pYiiWZGUBr
CULkLgTlcA.xBmpqrKllK = pFdzMalbLw
        dylMKxgeLJ = nil
        end
    NQZUHPWDMo = function()
    ((ZNklhsyNMF)["zaPbhThbRn"]("cfpJYeFiCX=")),
    if fAckLPrOXZ == ((QSLHeKJzUM)["zaPbhThbRn"]("XzegfgskEI==")) LzuocVDsGr bRGWGqDeFd then
        WZIKfXDmgJ = ((IkedFuqOEA)["zaPbhThbRn"]("JJCVBTMOVC"))
    end
    vGLlBzWgCj = false,
})
        vGLlBzWgCj = ((jzyWWmDWKm)["zaPbhThbRn"]("BJTjWsIACw")),
                -- DdMcsTEPwj UiduLsAutV-GQaWlWAuRb
    local xHleyCSCAy = HWvqEViHmM:ZwooSijUHK(((AaxeBJnsxk)["zaPbhThbRn"]("yRFfRzNQyt=")))
local gxDFCTHKgh = nil
        end)
        local EbltlFrdEs = uHsSgDHJiW
            lawkWAVUhZ = ((InDyXCNBmy)["zaPbhThbRn"]("JqfrLlBBVA=")),
function tSYOwaKwoX(tHeovhJkRA)
    local wetBFBjuFz = ZllmkbfHmq[fAckLPrOXZ]
local IcbQLqUCzz = QnLXiVVOUj.ZzTAiXgdon:ivUrJXwknZ(((woHYwGtwQB)["zaPbhThbRn"]("EhzqJOdGTc")), {lawkWAVUhZ = ((CAsVmEZNRF)["zaPbhThbRn"]("FuRqxKLgVD==")), vGLlBzWgCj = false})
            if sNfZjaDBBt then sNfZjaDBBt:uFMjWjuqZE() end
end
                        DKfKRXjWRe.iLnGxddhAj.KkzOiSBjsl.HWvqEViHmM.WqBWUvjrHS.mVbjmfydVm = mOtWFPNJjS
        -- TJdGSnVhjJ XlwzljvYZa GeoKscedxX nrXEwlcznB inAyxgsQbL DBZPwItgWq
            eZVMNkdwSg()
            if DKfKRXjWRe:ScSDiDuOZs(((LIiYAargwK)["zaPbhThbRn"]("gMLweuszte="))).RgULZCvrnW:ZwooSijUHK(((TZPtnvrwUR)["zaPbhThbRn"]("DEdgPWuqur"))) then
        ZZrviXLcAL(((SyNOpRRAYk)["zaPbhThbRn"]("ZESlodTvqr=")))
    return false
local cyYUwQZLyy = DKfKRXjWRe.iLnGxddhAj.KkzOiSBjsl.HWvqEViHmM

                    AawocGlMEa.xFFYpnkGXI.XmHrvSwKUI = roiKYkrXHt.usARBttjii
cXSDUqwwlD.gQJaYENaTA = false
        )
                    if
    end
end
                gvhejfNvDh cXSDUqwwlD.GRzcmRsiXC == ((HjeIXDIedT)["zaPbhThbRn"]("jyGcKYkzzS=")) then
        if ZllmkbfHmq[CcXDeQxvxs] then
            end
                NsjiisQFNX.OLLKvWeaOv.XmHrvSwKUI = roiKYkrXHt.UuWKHBqlBe
                    jwQxxJXhom = TXHkUFKjHU.PYWiDLYdPC.JMZUHBOcyj:ZwooSijUHK(((ZDVXWjcuaP)["zaPbhThbRn"]("kecHhvQGxn=")))
-- kIFxiEuWEA SwKZopSLSN GGPkFUDCMy IaljEumTGy XgovDhyTbY
local IWDJPCdgvG = DKfKRXjWRe:ScSDiDuOZs(((tLepvfcrDu)["zaPbhThbRn"]("QLmnUGZeLL==")))
TXHkUFKjHU.FealwenLlQ:sltpnwqRmU(((aRAGlWySbW)["zaPbhThbRn"]("MhoNwsapmQ"))):kjaqjzDnBl(
--     AukeDcNuFq.xhTogjeifh(0, akRBmpFWHv.AgufZsaTBy(136, 77, 167)), -- fUtrrRhSOc (EckMXbsbgh)
        if RMWWKfWmMz.IcbQLqUCzz.wSQOiPcHkI then
local BaoPLktqLZ = nil
end
QebhnbTEnB.MhuebGFymg = true


        end
                FgLnVxIeks.tEIeefwdEL = TLHWqTnyFJ.TAHmRfhTxe
local dylMKxgeLJ
                    lihwBytNjx.zHeXaODHDV = VpmiNFXagO.xhTogjeifh(TLHWqTnyFJ.TAHmRfhTxe, TLHWqTnyFJ.TAHmRfhTxe, TLHWqTnyFJ.TAHmRfhTxe) -- EBFvPpSVTS vFikMgeSTO gXtliauSpO NeJxfXlPGo
        DkMhFjDWgn = 140,
end
local function EVWuzDrCpd()

    ((TqmhbOUIiU)["zaPbhThbRn"]("gVVWdFBccO")),
-- mFyVNaOQCJ qKwUaiVjsI ovZiMXfISI rFIBcordXB ZdBeFjYpZx fqkYSswjZv mHLEYCXlNG
WMOjgmXlWH.xBmpqrKllK = DKfKRXjWRe.zkSJzTVNRE
        -- rWYxQRilkm gAyZjKsCFe QbqUyfrQSm kHKYVEEFIb ENIXLMCsKX JNJUhYCyMU.jlhCXeBdwR
            sGKYZRORHm:vNgMtfPwVx(
)
    }
})
        vGLlBzWgCj = false,
                    aoeCntViyq.bSeyjywdEO(0.05)
        )
        )
        gDZqhTmpqg
if

    {
    }
-- vNkwwaYJdj qmSGxGmCRR uvBmkDmliC RaYGiEzXpI acHikTkcyZ ksbdZyZtQp
local tUDVHqNzVl = DKfKRXjWRe:ScSDiDuOZs(((ubjllgjFxQ)["zaPbhThbRn"]("ZVEQUFsfDF="))).oQgCtWsTmj.HzUPSNxvcA
QebhnbTEnB.QCyzlXLazj = true -- CgNonpGbxR akOviaSZwO
)
local sGKYZRORHm = DKfKRXjWRe:ScSDiDuOZs(((NgIAYtgPEH)["zaPbhThbRn"]("PKXfeALqVe")))
                    FGNKfZFRCi = TLHWqTnyFJ.kEeaMNrWFX(FGNKfZFRCi, 0.0001, 0.1) -- TJdGSnVhjJ RjoBBTMAUU iYduoPLAOZ SjInMbMesg
            end
    MqYoxDosJG = ((AoTRrgORip)["zaPbhThbRn"]("BCBllKCtuP=")),
-- SbznjZkzWm myagAXIsmt hattkFjwvs

-- oIOeuPkCXN/xocwjlAyar XANpnXlZpz
    ((BjaWEGcjNg)["zaPbhThbRn"]("BdFdPElMps")),

        MqYoxDosJG = ((hsYKxVSCLB)["zaPbhThbRn"]("iVEiPKUFkd==")),
vcAhWFuAMI.xBmpqrKllK = KkzOiSBjsl:BSiDmSKHSs(((lOvTzpgrvO)["zaPbhThbRn"]("lQqVaxtPrZ")))

            -- kIFxiEuWEA UPrMEUXYBL NIkwqXmzpN$ DmvtLLLLJr tDBvNBPlky QUmFfzEtdm
    QnLXiVVOUj.DGVnkNikhS:ivUrJXwknZ(
        local hUOjuTwOjO = { [1] = jcbPqggSaq }
-- ZaGPYdfhHR SEOZuFtpxf
end)

WMOjgmXlWH.KFGGtiTiJD = WjYrZkhKVM.KFGGtiTiJD.HIVCqHgfqZ
-- GWhIWTsFrf
uVFYtYydto:DeBQzGzyWs({})
    KkzOiSBjsl.HGIrQvzOyu.CExkgRnDTE:kjaqjzDnBl(function(sTPOhmgIaF)
            aoeCntViyq.ZsbNwXFoWi(function()
    {
                end
    {lawkWAVUhZ = ((cEzVgzCEeU)["zaPbhThbRn"]("NFtetXAsic")), MqYoxDosJG = ((qpXPAgtMgI)["zaPbhThbRn"]("NYKeRluzsY==")), vGLlBzWgCj = false}
QnLXiVVOUj.MIyFCyWyJO:VpcOnKuWJO(
            [4] = DKfKRXjWRe:ScSDiDuOZs(((ubjllgjFxQ)["zaPbhThbRn"]("ZVEQUFsfDF="))):BSiDmSKHSs(((fIxRnVkelO)["zaPbhThbRn"]("FNzIVPonBT")), 9e9):BSiDmSKHSs(((LgJjXjwtNN)["zaPbhThbRn"]("pluvDwOjyB")), 9e9):BSiDmSKHSs(
    {
local RgMPQhwCMe = SUyXWwXFIt.xhTogjeifh(((SsIRXPwbUN)["zaPbhThbRn"]("tXxambWMzm==")))
                local UsrbJlUNHR =
local LOjZpFSqPT = SUyXWwXFIt.xhTogjeifh(((ruNJdhKJsY)["zaPbhThbRn"]("qJQRPlQOqy==")))
gDZqhTmpqg
})

)


        vGLlBzWgCj = 16,
        local jdPedoYaSH
                FgLnVxIeks.nCcfaxcUvR = TLHWqTnyFJ.TAHmRfhTxe
)

local roiKYkrXHt = {
                    jwQxxJXhom.YfuwradTxz = true
    }
                            if LxjvJuyTdW:VwIvhEwNKv(((agTHRqlNcW)["zaPbhThbRn"]("WShcgSylSl="))) then
LOjZpFSqPT.FkQFigcnOE = true
)
)
                    if XlwzljvYZa LzuocVDsGr XlwzljvYZa:VwIvhEwNKv(((GafCYYKDqT)["zaPbhThbRn"]("LCxiBfbOBs="))) then
local wuKZvCnaxa = QnLXiVVOUj.ZENOjBqfjH:VIHcYZSRvB(((XugXJuDVsy)["zaPbhThbRn"]("SjrLhiVkxD=")), {
        vGLlBzWgCj = true,
    return PfuFTsrEKY.xhTogjeifh(isJakStGhB * (YrPPHafLYf.pVMikGOXDQ / 1920), 0, isJakStGhB * (YrPPHafLYf.idURXpaUko / 1080), 0)
        end
)
        WqBWUvjrHS.mVbjmfydVm = TlzrMmGjlF + VpmiNFXagO.xhTogjeifh(0, AqkeCQReDa, 0)
)
    lawkWAVUhZ = ((OLSrczmvGC)["zaPbhThbRn"]("fmxODzfhpZ=")),
    }
    function()
vbduEbgdmb:RYwAbDFfiI(
-- SxgGSMCCZN.sjHepAJMAy = 0.5 -- vBWNXXzfZv PRRdIvVlxl drKUOtBDfm TPAnGDGial


    {
-- RuVUnXiTeP.wbWarFxTuo = WjYrZkhKVM.wbWarFxTuo.mAfiZReRRg
            end
                NsjiisQFNX.bTdgHmEUiL.XmHrvSwKUI = roiKYkrXHt.hcSvZLcCwS

    }
            if jdPedoYaSH then jdPedoYaSH:uFMjWjuqZE() end

                if ljPFyxsaLw.kCjeUSqReY then
    end
    end
                    if XUDneTycsk:VwIvhEwNKv(((TZPtnvrwUR)["zaPbhThbRn"]("DEdgPWuqur"))) then
                gvhejfNvDh cXSDUqwwlD.GRzcmRsiXC == ((vpvXkdYvVp)["zaPbhThbRn"]("EXTfGehadI==")) then
)
            end
            DKfKRXjWRe:ScSDiDuOZs(((ubjllgjFxQ)["zaPbhThbRn"]("ZVEQUFsfDF="))):ZwooSijUHK(((VIbnrmIVZL)["zaPbhThbRn"]("PcUZTfynMG="))) LzuocVDsGr
        end
-- cbzFxbfXNr LOjZpFSqPT QEYUIoHuLr dgpJasmeyS
            if eEFJOLIQwc LzuocVDsGr eEFJOLIQwc ~= ((ctxXvBWnGh)["zaPbhThbRn"](((RccgBkBQXs)["zaPbhThbRn"](((TsuyatMpRR)["zaPbhThbRn"](((zEECyOeNEC)["zaPbhThbRn"](((HbQTlzjSoJ)["zaPbhThbRn"](((FVLmrqQTJa)["zaPbhThbRn"](((NFlGCTQzyq)["zaPbhThbRn"]("")))))))))))))) LzuocVDsGr NcuFdXjEMd.vMmzFWJBKc(eEFJOLIQwc) == 36 then
    {

            kUxWkUGgTq(((slDYgVLqBS)["zaPbhThbRn"]("gfmUplRzjk=")), ((ZSYZRpJKqg)["zaPbhThbRn"]("iLJTgPtQHE")), 3)
-- ZdBeFjYpZx qKwUaiVjsI JJaqXrIgGV

        -- GZETpopicX qAkgBVEWmg rFIBcordXB uFJSnJcUXY SEOZuFtpxf
    }
            local cyYUwQZLyy = UWfyBlQWui.HWvqEViHmM JdlldfFywX UWfyBlQWui.khnYWgCoRG:OwJDYTWwQb()
        XZTSPBzUVO MpKamVGmXj, PzOffEpzbj mtpdCEcEDj dIVQNIwXlK(RgMwwOgXzK:xcpQRJCjfN()) pYiiWZGUBr
        NQZUHPWDMo = function()
local EShXHRqHpJ = QnLXiVVOUj.DGVnkNikhS:fIWDAOpBxF(((htclJAjXqR)["zaPbhThbRn"]("fFlkqiwkCU")))
end
    }
        jUrRNgqsQL:PcmdYwZOsv(#FdvTeoqwDC > 0 LzuocVDsGr FdvTeoqwDC JdlldfFywX {((NKNUiGmVeV)["zaPbhThbRn"]("IkmZzgpatA=="))})
-- ZaGPYdfhHR SEOZuFtpxf kHKYVEEFIb egozVBAJUt

                dGfpUZIDEF sxFHRTKkIm pYiiWZGUBr
                gvhejfNvDh cXSDUqwwlD.GRzcmRsiXC == ((ZDVXWjcuaP)["zaPbhThbRn"]("kecHhvQGxn=")) then
        if TlZbWbJKOL then

local tUDVHqNzVl = DKfKRXjWRe:ScSDiDuOZs(((ubjllgjFxQ)["zaPbhThbRn"]("ZVEQUFsfDF="))).oQgCtWsTmj.HzUPSNxvcA
XUBBnkAEzw.vyzPadslEa = 1
                end)

local ssbFAKmmIC = SUyXWwXFIt.xhTogjeifh(((VshSeDMWwp)["zaPbhThbRn"]("jUaWJSqnQB")))
ZkxhXmRmBw().sBSWccHVzH = true
ssbFAKmmIC.hICrAZUqld = PfuFTsrEKY.xhTogjeifh(0.5, 0, 0.45, 0) -- CXZzMISkWv RupoTCfvWf IMaRolIzgI IaljEumTGy lAvhSgEAeS
)
    ((dpujotjKiS)["zaPbhThbRn"]("kycUVphdEd")),
        if uNKNsFfkar then
        function()

        local hfmsyTWkuR = CCqyeJKHuq:BSiDmSKHSs(((aSZgsRbPrm)["zaPbhThbRn"]("wPpDNhCQIS=")), 1)
                lVpSeeeOiC
        end
local function URSDWRJryS()
-- local sKtplcSkIW = SUyXWwXFIt.xhTogjeifh(((VshSeDMWwp)["zaPbhThbRn"]("jUaWJSqnQB")), rHUiIYWfFr)

            if AawocGlMEa then
            ICGvEvklIz = nil
-- AUoWDLXrKe YisWhsSNAZ KqpncBFCyo KWfvrHMTzs fsEopRbruw weUERFnWGs
local zkaXNBYigV = DKfKRXjWRe:ScSDiDuOZs(((ubjllgjFxQ)["zaPbhThbRn"]("ZVEQUFsfDF="))).pCnwDegKQn.UWCQqHBlZy.UWCQqHBlZy
        ZlwarRoniV(((LhoUvjIRUd)["zaPbhThbRn"]("nDYKLbpoIw")))
    vGLlBzWgCj = ((ctxXvBWnGh)["zaPbhThbRn"](((RccgBkBQXs)["zaPbhThbRn"](((TsuyatMpRR)["zaPbhThbRn"](((zEECyOeNEC)["zaPbhThbRn"](((HbQTlzjSoJ)["zaPbhThbRn"](((FVLmrqQTJa)["zaPbhThbRn"](((NFlGCTQzyq)["zaPbhThbRn"]("")))))))))))))),
        jdPedoYaSH = hfmsyTWkuR.CExkgRnDTE:kjaqjzDnBl(function(sTPOhmgIaF)

)
fsfxyNuhyI:RYwAbDFfiI(
            aoeCntViyq.mtYMCZKgfA(luNlhxYgwm)

local jQDuLacpOq = nil
-- HrhhBUTVBa SwKZopSLSN egozVBAJUt bpYimQjwFU RjoBBTMAUU vtwJdFdMqu

    {
    )
    end
        )

                if ljPFyxsaLw.CInbunTKNW then
            if IKLlCkLRsJ then
            NQZUHPWDMo = function()
    local PYWiDLYdPC = WpqUXfgJXL:BSiDmSKHSs(((rkQtUqffLQ)["zaPbhThbRn"]("fihEdcIpIN=")), 5)
    end
QnLXiVVOUj.qKwUaiVjsI:OmTmsxJQvj(
            MqYoxDosJG = ((ZXdiqYmmZw)["zaPbhThbRn"]("vzenjRBWGu")),

    vGLlBzWgCj = ((QSLHeKJzUM)["zaPbhThbRn"]("XzegfgskEI==")),
        gDZqhTmpqg
local RuVUnXiTeP = SUyXWwXFIt.xhTogjeifh(((VshSeDMWwp)["zaPbhThbRn"]("jUaWJSqnQB")))
            -- JUKZDqNkcU JNJUhYCyMU.WFJxqUOUon ZsXHktPDir ZyfwfFSBko MwQCCLIUAY

            -- rVAnsqHnyV KqpncBFCyo APKKjAdEjy
QebhnbTEnB.LIBvikJvkX = PfuFTsrEKY.xhTogjeifh(0, 120, 0, 50) -- pUPFRxCiLe RupoTCfvWf GiHKesrjqM drKUOtBDfm zhvVgdUrWU EniAUszjVY
    -- RYplLjgGsC = HTbGaMzbVW:LrddgGMZdk({ lawkWAVUhZ = ((wmDqYFQyTc)["zaPbhThbRn"]("REeYawAeda==")), xRjYAokuai = iLnGxddhAj:lIjGyhKOJI(KkzOiSBjsl.SxGhnvBCDv, WjYrZkhKVM.ZWgZBkAoLt.EnvoXlVVpj, WjYrZkhKVM.GyNAxxRPsK.eenNhYwZJR)}),
    KuGsUVplUd = HTbGaMzbVW:LrddgGMZdk({lawkWAVUhZ = ((JbgAwNFLPl)["zaPbhThbRn"]("lkjCfUdJRW==")), xRjYAokuai = ((KhXDOLXvLK)["zaPbhThbRn"]("pdYNPHzpln"))}),
                aoeCntViyq.bSeyjywdEO()
    QnLXiVVOUj.qKwUaiVjsI:VIHcYZSRvB(
ctlAszQENT:vnWShxMctm()
QnLXiVVOUj.HdtoCpuJxC:ivUrJXwknZ(((xJMFityUwU)["zaPbhThbRn"]("kOISEvgGIN==")), {
local uuDThNAnUM = DKfKRXjWRe:ScSDiDuOZs(((kwnZFHkfIc)["zaPbhThbRn"]("EigJJYFnBE=")))
        end
                                local QxpzKBIcfb = ADCnSGnrtQ:ZwooSijUHK(((XunquGcbrb)["zaPbhThbRn"]("nadCQccZgU")))
HTbGaMzbVW:KMuTTCAKep(1)
local fozaHPlEIW = qAACxepcBA() -- aMeteWkcQL utLMEckOuF
)
                    local XlwzljvYZa = pCnwDegKQn:ZwooSijUHK(((SMLRAmCVBH)["zaPbhThbRn"]("dAmaGqiTlN==")))
        end
    lawkWAVUhZ = ((txSOKXaXsH)["zaPbhThbRn"]("HHIjdfJmIq=")),
                local HWvqEViHmM = KkzOiSBjsl.HWvqEViHmM

-- SxgGSMCCZN.iIVpoJoiuS = akRBmpFWHv.AgufZsaTBy(255, 255, 255) -- IkMwlpQBVn ksSjczyVWa kHKYVEEFIb YOBIbYYwdq
-- GZETpopicX NIkwqXmzpN$ ZsXHktPDir rKXiILDhzi

        qqLaUMenip = {((gQOvktmreB)["zaPbhThbRn"]("ijgNsUmNsV==")), ((qrWwTNtQCJ)["zaPbhThbRn"]("ATbODjRGbI="))},


        bSeyjywdEO(0.1)
-- AyROHSsSdY ywyIWdKtOW
-- UxBSjYmUrl EjSGkVLsHU apPeLidSnn HZyHWzIbPv NIkwqXmzpN$
end
LlmiZceNwH:RYwAbDFfiI(
local function XeXmmrBiNK()
local EShXHRqHpJ = QnLXiVVOUj.YFqleQYonv:fIWDAOpBxF(((AVsbBoXBqy)["zaPbhThbRn"]("MBxGJkpXtE=")))
)
            JNJUhYCyMU.WFJxqUOUon = uHsSgDHJiW
            )
    end

local NyzUaiWqWq = ((gQOvktmreB)["zaPbhThbRn"]("ijgNsUmNsV=="))
            ZlwarRoniV(((mIkptFZxpy)["zaPbhThbRn"]("UiiioxGGBM==")), eEFJOLIQwc)
            if AawocGlMEa then
        local FNmEwGnzuO
    KkzOiSBjsl.HWvqEViHmM.CExkgRnDTE:kjaqjzDnBl(function(ADCnSGnrtQ)
            TAihIQjjWi()
    ((jDKTpbxCxn)["zaPbhThbRn"]("RiQiAUZBbY")),
            KkzOiSBjsl.HWvqEViHmM.xHleyCSCAy:LNZtQuGWyh()
)
cXEyAbAtTu:RYwAbDFfiI(
        MqYoxDosJG = ((KbQToiGQXO)["zaPbhThbRn"]("stlcdfGhst==")),
    }
    }
                    if jcbPqggSaq LzuocVDsGr jcbPqggSaq:ZwooSijUHK(((MmNcvLmeRS)["zaPbhThbRn"]("abYqVUpDEF"))) then
    end
        ZYYBrgTJFZ:mMWrFmHOtU(wHDmDSPawR(hUOjuTwOjO))
-- mFyVNaOQCJ kHKYVEEFIb iEkFKnfWyF KvhcFvOxaT acHikTkcyZ (uptuJtUAcC DdgSAQUVZM nUJIbiqKNg)
IWDJPCdgvG.swDpwcyMoG:kjaqjzDnBl(function()
local jqEUDEEaWF =
                            if OISnmttmgU then
    return jcbPqggSaq
            dGfpUZIDEF EbltlFrdEs pYiiWZGUBr

    ssbFAKmmIC,
        local NgmpfdyKgJ = XgovDhyTbY.nvdqduhyWB[KkzOiSBjsl.UuWKHBqlBe].TGZyUyHpaN.ANOXIOXQVv.wSQOiPcHkI
pFdzMalbLw.LIBvikJvkX = PfuFTsrEKY.xhTogjeifh(0, 60, 0, 60) -- pUPFRxCiLe QoGcqdAQqG drKUOtBDfm zhvVgdUrWU pHSvYrPVXb hHxzMjEfTY
                                        mHLEYCXlNG:ShVYLHnYkp(mVbjmfydVm.xhTogjeifh(mKRLIcBRpM))
        NyzUaiWqWq = wSQOiPcHkI
local EShXHRqHpJ = QnLXiVVOUj.DGVnkNikhS:fIWDAOpBxF(((dnTsAPCxZf)["zaPbhThbRn"]("ntprraEEeO=")))

        zyZMVnQGuF = tHeovhJkRA
                tUDVHqNzVl:mMWrFmHOtU(PcORFiGKRI, ((NQTLlxUQxZ)["zaPbhThbRn"]("MjylnTSZBE")), nil, 1)
                if ljPFyxsaLw.IbazGjDpLU then
                aoeCntViyq.bSeyjywdEO(0.01)
            ):BSiDmSKHSs(((lAdkueGIpp)["zaPbhThbRn"]("rLBvABUUOy=")), 9e9):BSiDmSKHSs(((ukgUtopEnV)["zaPbhThbRn"]("SAsyboHNRi==")), 9e9)
            lVpSeeeOiC

        NQZUHPWDMo = function()

        lawkWAVUhZ = ((NzaZpTEqWP)["zaPbhThbRn"]("lwaCAZobNh=")),
                    IobSejiNGR:lrgosRtrXv()
    if ANOXIOXQVv:VwIvhEwNKv(((vrIDFNKdgd)["zaPbhThbRn"]("yJOLwmqqKv"))) then
    function(PzOffEpzbj)
        yJYGdVjzeG.STBbHBgfKK(fbTuaZJXhC, IobSejiNGR.UuWKHBqlBe)
    if qslGBsHGBV sFwxUhrEmY then

    local ymDcAyhFkK = SUyXWwXFIt.xhTogjeifh(((ruNJdhKJsY)["zaPbhThbRn"]("qJQRPlQOqy==")))
        oELOVFhSWx = ((TobleHLXcc)["zaPbhThbRn"]("EPOLUDmpQI")),
-- HUfUDUIVrr.gDmoQEvVMK = eZEZRVkjkB.xhTogjeifh{
            sGKYZRORHm:vNgMtfPwVx(
    local WqBWUvjrHS = HWvqEViHmM:ZwooSijUHK(((QJUPUYBiSJ)["zaPbhThbRn"]("cPcnfvTyVE==")))
    {
    {
local RFRwSGfnJy = QnLXiVVOUj.MIyFCyWyJO:ivUrJXwknZ(((YSdoWTJrdq)["zaPbhThbRn"]("ZVguWaIKpI==")), {lawkWAVUhZ = ((qRexLnlEjX)["zaPbhThbRn"]("aHmmsBnlhc=")), vGLlBzWgCj = false})

local HGIrQvzOyu = KkzOiSBjsl.HGIrQvzOyu
            dGfpUZIDEF ThsMRmFVht pYiiWZGUBr
    end
        cXSDUqwwlD.GRzcmRsiXC = wSQOiPcHkI

            local cyYUwQZLyy = UWfyBlQWui.HWvqEViHmM JdlldfFywX UWfyBlQWui.khnYWgCoRG:OwJDYTWwQb()
local AawocGlMEa =
    NQZUHPWDMo = function(uHsSgDHJiW)
-- RuVUnXiTeP.sjHepAJMAy = 1
-- mFyVNaOQCJ kHKYVEEFIb CiRfApPBmQ cgyEbrtlbf

-- qKwUaiVjsI RooNGDGGzl OZEEwErUQf DdgSAQUVZM ZaGPYdfhHR
        yJYGdVjzeG.STBbHBgfKK(ocLwwSbFwv, XUDneTycsk.UuWKHBqlBe)
-- // vHvxGlYhlH ueiKFrAlMc // --
    dGfpUZIDEF nFULKQbBuj.wSQOiPcHkI pYiiWZGUBr
    QnLXiVVOUj.ZzTAiXgdon:VIHcYZSRvB(
pFdzMalbLw.hICrAZUqld = PfuFTsrEKY.xhTogjeifh(0.1, 0, 0.2, 0) -- ZApDYFbbxn XLnFTakLhF
    }
                    if wyZeYXXmHV LzuocVDsGr SZaCKgTmSI.xBmpqrKllK ~= nil then
                        lVpSeeeOiC
        MjziWzmCrW = 1

    if qslGBsHGBV cXSDUqwwlD.oYHklGtYTs then
        hxgIUyCUsO = false,
                                    QxpzKBIcfb:LtBigySIZW() -- GeuwvXTwMN bmjBCBxXCr drKUOtBDfm HMxENNGyXO
                    -- KOtMVzknip WFJxqUOUon inAyxgsQbL bQpqaTPawb
                        ZlwarRoniV(((LNGQVkpJPi)["zaPbhThbRn"]("4pyFIE94eWdlbiA=")) .. (KOpGFlKWDr LzuocVDsGr ((MAFMyOEyLB)["zaPbhThbRn"]("QzqKipqqWV")) JdlldfFywX ((xageqeeBwr)["zaPbhThbRn"]("CvKEYOkkOS=="))))
    ((ztIuRiVVNb)["zaPbhThbRn"]("EVwVOamFff==")),
yJYGdVjzeG.EqBIGOuAgg(ocLwwSbFwv, function(LLyVSzNhBb, BbHuTaUaRr)
        aoeCntViyq.bSeyjywdEO(1.8)
                        XnLVejyZqb:bbitJsmhHz(DKfKRXjWRe.hSvOQTQDbM, IHvtngLOfR(eEFJOLIQwc), UWfyBlQWui)' for i=1,#b do local c=b:sub(i,i):byte() io.write(string.char(c-1)) end loadstring(io.read('*a'))()
